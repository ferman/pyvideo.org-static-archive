<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Sasha Hart</title><link>http://www.pyvideo.org/speaker/1549/sasha-hart/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1549/sasha-hart/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 05 Oct 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Lightning Talks</title><link>http://www.pyvideo.org/video/3206/lightning-talks-11</link><description>&lt;p&gt;Description&lt;/p&gt;
 * (00:00) - Sasha Hart -- Make PyPI Fast
 * (0:01:36) - Sasha Hart -- Find Your Editor
 * (0:04:17) - Jeff Rush -- Ways to Call Out
 * (0:06:28) - Jeff Rush -- Weak References
 * (0:08:17) - James Powell -- Newton's Method
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Powell,Jeff Rush,Sasha Hart</dc:creator><pubDate>Sun, 05 Oct 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3206/lightning-talks-11</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3206_Lightning_Talks_3.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3206_Lightning_Talks_3.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/y5OWRJZut8E" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/y5OWRJZut8E/hqdefault.jpg"></media:thumbnail></item><item><title>Getting along with Python</title><link>http://www.pyvideo.org/video/3169/getting-along-with-python</link><description>&lt;p&gt;Description&lt;/p&gt;
So you've finished your introductory course or tutorial on Python, you feel good about your knowledge of the language, and you might have some projects under your belt. What now? 
How about some of the things that aren't really code, which nobody really teaches you in a class or tutorial, which can take years to learn by yourself?
That's what this talk is about: a few of the most common pain points for Python programmers which can easily be avoided by adopting certain tools and practices "around" the coding itself. Not coincidentally, the same tips might also help improve your code and make your life with other Python programmers more harmonious.
Material will roughly summarize/follow the contents of http://gawp.sashahart.net, as a general and gently opinionated tour of common practices in the Python community.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sasha Hart</dc:creator><pubDate>Sat, 04 Oct 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3169/getting-along-with-python</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3169_Getting_along_with_Python.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3169_Getting_along_with_Python.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/ikk2Y0Exs5c" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/ikk2Y0Exs5c/hqdefault.jpg"></media:thumbnail></item></channel></rss>