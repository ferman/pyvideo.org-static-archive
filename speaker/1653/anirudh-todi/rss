<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Anirudh Todi</title><link>http://www.pyvideo.org/speaker/1653/anirudh-todi/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1653/anirudh-todi/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 17 Sep 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>TSAR (the TimeSeries AggregatoR)</title><link>http://www.pyvideo.org/video/3307/tsar-the-timeseries-aggregator</link><description>&lt;p&gt;Description&lt;/p&gt;
Twitter depends heavily on real-time event aggregation. Classic timeseries applications include site traffic, service health, and user engagement monitoring; these are increasingly complemented by a range of products and features that surface aggregated timeseries data directly to end users. Services that power such features need to be resilient enough to ensure a consistent user experience, flexible enough to accommodate a rapidly changing product roadmap, and able to scale to tens of billions of events per day.

Experience has shown that truly robust real-time aggregation services are hard to build; scaling and evolving them gracefully is even harder; and, moreover, many timeseries applications call for essentially the same architecture, with slight variations in the data model. Solving this broad class of problems at Twitter has been a multiyear effort. In previous talks we have introduced Summingbird, a high-level abstraction library for generalized distributed computation, which provides an elegant descriptive framework for complex aggregation problems. In this talk, I will describe how we built a flexible, reusable, end-to-end service architecture on top of Summingbird, called TSAR (the TimeSeries AggregatoR).

TSAR uses Python to provide an service toolkit that integrates with essential services that provide data processing, data warehousing, query capability, observability, and alerting, automatically configuring and orchestrating its components.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anirudh Todi</dc:creator><pubDate>Wed, 17 Sep 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3307/tsar-the-timeseries-aggregator</guid><enclosure url="https://www.youtube.com/watch?v=XzHokP3NZu4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/XzHokP3NZu4/hqdefault.jpg"></media:thumbnail></item></channel></rss>