<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of S Trygubenko</title><link>http://www.pyvideo.org/speaker/640/s-trygubenko/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/640/s-trygubenko/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 06 Jul 2012 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Functional functional programming in Python and even Haskell part 1</title><link>http://www.pyvideo.org/video/1248/functional-functional-programming-in-python-and-e</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2012] S Trygubenko - 5 JULY 2012 in "Track Pizza Napoli"


&lt;p&gt;Description&lt;/p&gt;
Reaping the benefits of functional programming can be a real challenge,
falling anywhere between exciting and frustrating, to the point that one might
end up feeling demotivated and embarrassed about writing in the functional
style in the “real world”. I have always strived to write functional side-
effect free code for production, and this year I have been taking functional
programming for myself one step further by re-writing some of my Python tools
in Haskell, and I would like to share my findings. In this tutorial we will
work through a progression of increasing in complexity fun-to-solve problems,
obtain solutions both in Python and Haskell, in order to be able to first hand
compare and contrast readability, performance and development time. Bring a
laptop and a couple of interpreters (ipython and ghci) and lets do some
hacking!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S Trygubenko</dc:creator><pubDate>Fri, 06 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1248/functional-functional-programming-in-python-and-e</guid><enclosure url="http://www.youtube.com/watch?v=83YIQwtXKzk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/83YIQwtXKzk/hqdefault.jpg"></media:thumbnail></item><item><title>Functional functional programming in Python and even Haskell part 2</title><link>http://www.pyvideo.org/video/1258/functional-functional-programming-in-python-and-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2012] S Trygubenko - 5 JULY 2012 in "Track Pizza Napoli"


&lt;p&gt;Description&lt;/p&gt;
Reaping the benefits of functional programming can be a real challenge,
falling anywhere between exciting and frustrating, to the point that one might
end up feeling demotivated and embarrassed about writing in the functional
style in the “real world”. I have always strived to write functional side-
effect free code for production, and this year I have been taking functional
programming for myself one step further by re-writing some of my Python tools
in Haskell, and I would like to share my findings. In this tutorial we will
work through a progression of increasing in complexity fun-to-solve problems,
obtain solutions both in Python and Haskell, in order to be able to first hand
compare and contrast readability, performance and development time. Bring a
laptop and a couple of interpreters (ipython and ghci) and lets do some
hacking!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S Trygubenko</dc:creator><pubDate>Fri, 06 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1258/functional-functional-programming-in-python-and-0</guid><enclosure url="http://www.youtube.com/watch?v=J992TknDAT8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/J992TknDAT8/hqdefault.jpg"></media:thumbnail></item></channel></rss>