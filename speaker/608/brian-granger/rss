<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Brian Granger</title><link>http://www.pyvideo.org/speaker/608/brian-granger/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/608/brian-granger/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 09 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Fundamentals of the IPython Display Architecture+Interactive Widgets</title><link>http://www.pyvideo.org/video/2743/fundamentals-of-the-ipython-display-architecture</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this tutorial, attendees will learn how to use the IPython Notebook’s display architecture and interactive widgets. As we cover these topics, attendees will learn about the underlying architecture, how to use IPython’s existing APIs, and how to extend them for their own purposes. This tutorial will not cover the basics of the IPython Notebook.

&lt;p&gt;Description&lt;/p&gt;
IPython provides an architecture for interactive computing. The IPython Notebook is a web-based interactive computing environment for exploratory and reproducible computing. With the IPython Notebook, users create documents, called notebooks, that contain formatted text, figures, equations, programming code, and code output.

The IPython Notebook generalizes the notion of output to include images, LaTeX, video, HTML, JavaScript, PDF, etc. These output formats are displayed in the Notebook using IPython’s display architecture, embedded in notebook documents and rendered on the IPython Notebook Viewer. By taking advantage of these rich output formats users can build notebooks that include rich representations and visualizations of data and other content. In this tutorial, we will describe the display architecture, existing Python APIs and libraries that already use it (mpld3, vincent, polotly, etc.), and how users can define custom display logic for their own Python objects.

As of version 2.0, the IPython Notebook also includes interactive JavaScript widgets.  These widgets provide a way for users to interact with UI controls in the browser that are tied to Python code in running in the kernel. We will begin by covering the highest-level API for these widgets, “interact,” which automatically builds a user interface for exploring a Python function. Next we will describe the lower-level widget objects that are included with IPython: sliders, text boxes, buttons, etc. However, the full potential of the widget framework lies with its extensibility.  Users can create their own custom widgets using Python, JavaScript, HTML and CSS. We will conclude with a detailed look at custom widget creation.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Granger,Jonathan Frederic</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2743/fundamentals-of-the-ipython-display-architecture</guid><enclosure url="http://www.youtube.com/watch?v=aIXED26Wppg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/aIXED26Wppg/hqdefault.jpg"></media:thumbnail></item><item><title>IPython in-depth: high-productivity interactive and parallel python</title><link>http://www.pyvideo.org/video/1652/ipython-in-depth-high-productivity-interactive-a-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
IPython provides tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer.

We will show how to use IPython in different ways, as: an interactive shell, an embedded shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.

All materials for this tutorial can be found on our [github
repository](https://github.com/ipython/ipython-in-depth)
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Granger,Fernando Pérez,Min RK</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1652/ipython-in-depth-high-productivity-interactive-a-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/IPython_indepth_highproductivi.mp4?Signature=6fLwDBJMmt65mqZPzjZlMpQhV2w%3D&amp;Expires=1364728655&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/IPython_indepth_highproductivi.mp4?Signature=6fLwDBJMmt65mqZPzjZlMpQhV2w%3D&amp;Expires=1364728655&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=bP8ydKBCZiY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/bP8ydKBCZiY/hqdefault.jpg"></media:thumbnail></item><item><title>IPython: tools for the entire lifecycle of research computing</title><link>http://www.pyvideo.org/video/1221/ipython-tools-for-the-entire-lifecycle-of-resear</link><description>&lt;p&gt;Description&lt;/p&gt;
IPython started as a better interactive Python interpreter in 2001, but over
the last decade it has grown into a rich and powerful set of interlocking
tools aimed at enabling an efficient, fluid and productive workflow in the
typical use cases encountered by scientists in everyday research.

Today, IPython consists of a kernel executing user code and capable of
communicating with a variety of clients, using ZeroMQ for networking via a
well-documented protocol. This enables IPython to support, from a single
codebase, a rich variety of usage scenarios through user-facing applications
and an API for embedding:

  * An interactive, terminal-based shell with many capabilities far beyond the default Python interactive interpreter (this is the default application opened by the `ipython` command that most users are familiar with).
  * A Qt console that provides the look and feel of a terminal, but adds support for inline figures, graphical calltips, a persistent session that can survive crashes of the kernel process, and more.
  * A web-based notebook that can execute code and also contain rich text and figures, mathematical equations and arbitrary HTML. This notebook presents a document-like view with cells where code is executed but that can be edited in-place, reordered, mixed with explanatory text and figures, etc.
  * A high-performance, low-latency system for parallel computing that supports the control of a cluster of IPython engines communicating over ZeroMQ, with optimizations that minimize unnecessary copying of large objects (especially numpy arrays).

In this talk we will show how IPython supports all stages in the lifecycle of
a scientific idea: individual exploration, collaborative development, large-
scale production using parallel resources, publication and education. In
particular, the IPython Notebook supports multiuser collaboration and allows
scientists to share their work in an open document format that is a true
"executable paper": notebooks can be version controlled, exported to HTML or
PDF for publication, and used for teaching. We will demonstrate the key
features of the system,

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Granger,Evan Patterson,Fernando Pérez,Min Ragan-Kelley,Thomas Kluyver</dc:creator><pubDate>Thu, 19 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1221/ipython-tools-for-the-entire-lifecycle-of-resear</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/IPython_tools_for_the_entire_lifecycle_of_research_computing.mp4?Signature=AgDUtK60kAvr4De7J2V6xj%2FZSxU%3D&amp;Expires=1346382215&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/IPython_tools_for_the_entire_lifecycle_of_research_computing.mp4?Signature=AgDUtK60kAvr4De7J2V6xj%2FZSxU%3D&amp;Expires=1346382215&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="http://youtube.com/watch?v=iwVvqwLDsJo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/iwVvqwLDsJo/hqdefault.jpg"></media:thumbnail></item></channel></rss>