<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Robert King</title><link>http://www.pyvideo.org/speaker/1591/robert-king/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1591/robert-king/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 14 Sep 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Making a scalable course search engine with python</title><link>http://www.pyvideo.org/video/3234/making-a-scalable-course-search-engine-with-pytho</link><description>&lt;p&gt;Description&lt;/p&gt;
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
Robert King:
Making a scalable course search engine with Python
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
@ Kiwi PyCon 2014 - Sunday, 14 Sep 2014 - Track 2
http://kiwi.pycon.org/

**Audience level**

Experienced

**Description**

Creating a custom search engine with python on google app engine. Serve large spikes in search request traffic. Allow students to find course reviews across multiple universities and countries.

**Abstract**

 - introduction to the real world problem - Students need to be able to find university courses across multiple countries and universities.
 - first - explore how to solve the problem - collect course data &amp; decide on a rough solution
 - second - create minimum viable product &amp; see how people use it. Iteratively make it better.
 - second continued: Organise a big website launch event before you've created the website - then proceed to write 10K lines of code in the week before launch.
 - third - analyse the 50K most recent search terms &amp; make a simple tree data structure to help improve search performance.
 - four - caching &amp; cache invalidation
 - five - Maybe I'll do an online marketing campaign halfway through the talk and show graphs of the app responding in real time.

 - Covers Data analysis with python (csv, matplotlib, networkx, collections.Counter, logfile parsing)

 - Covers "Futures" - doing RPC calls in parallel.
 - Unit testing &amp; simulating all things. - Being able to see how adjusting search functionality effects query times &amp; quality of results.

 - Some tasteful jokes to keep things entertaining ;)

**Slides**

https://speakerdeck.com/nzpug/robert-king-making-a-scalable-course-search-engine-with-python</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert King</dc:creator><pubDate>Sun, 14 Sep 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3234/making-a-scalable-course-search-engine-with-pytho</guid><enclosure url="http://youtu.be/568mFzqsjqk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/568mFzqsjqk/hqdefault.jpg"></media:thumbnail></item></channel></rss>