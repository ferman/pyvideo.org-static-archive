<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Zbigniew Jędrzejewski-Szmek</title><link>http://www.pyvideo.org/speaker/1080/zbigniew-jedrzejewski-szmek/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1080/zbigniew-jedrzejewski-szmek/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 28 Jul 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Keeping library compatible with Python 2.6-3.4  using python-systemd as example</title><link>http://www.pyvideo.org/video/2279/keeping-library-compatible-with-python-26-34-u</link><description>&lt;p&gt;Abstract&lt;/p&gt;
How hard is it to port a library to python 3? How much work is it going forward? Based on two examples (a pure Python, and a C-extension-based library), I want to show how in my experience the work required is modest, without significant impact on old code.  At the same time, keeping Python2 compatibility constrains development under Python 3 because only the common subset of features can be used.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zbigniew Jędrzejewski-Szmek</dc:creator><pubDate>Sun, 28 Jul 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2279/keeping-library-compatible-with-python-26-34-u</guid><enclosure url="https://www.youtube.com/watch?v=Hvv-4Z4vDPo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/Hvv-4Z4vDPo/hqdefault.jpg"></media:thumbnail></item></channel></rss>