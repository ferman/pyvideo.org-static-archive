<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Phil Roth</title><link>http://www.pyvideo.org/speaker/1344/phil-roth/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1344/phil-roth/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 11 Mar 2016 12:38:24 -0000</lastBuildDate><ttl>500</ttl><item><title>Time Series Analysis for Network Security</title><link>http://www.pyvideo.org/video/2864/time-series-analysis-network-security</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Endgame seeks to develop products that allow customers to gain visibility into their networks and discover anomalies. I will describe how Endgame brings together various Python packages (scipy, pandas, statsmodels, kairos, etc...) in order to collect, record, and then analyze time series that are collected from network security data feeds.
&lt;p&gt;Description&lt;/p&gt;
In this talk, I will describe how Endgame has brought together many different Python tools in order to solve the problem of detecting outliers in network security data.

The first step in this process is collecting and storing the metrics that will form a time series. Here, I will describe how Endgame plugs into the flow of network data and then stores that data. (Python packages: elasticsearch, pyspark, kairos)

The next step is applying a Fourier transform in order to classify time series that exhibit daily and weekly patterns. This information is especially useful in deciding how to characterize a time series's past behavior and thus judge how unusual new data is. (Python package: numpy)

Finally, exponentially weighted moving averages and standard deviations are calculated in different ways depending on how the time series was classified. For example, if strong daily patterns are present, the data is stacked by daily time bin and moving averages are calculated within each time bin. Corrections for weekend and weekday behavior are also applied if necessary. Autoregressive moving average models are also used and the performance of each algorithm is gauged and compared (Python packages: pandas, scikits.statsmodels).

The final result of this process is a list of outliers and their severity. Further algorithms will judge what outliers are serious enough to present to users.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Phil Roth</dc:creator><guid>http://www.pyvideo.org/video/2864/time-series-analysis-network-security</guid><enclosure url="http://www.youtube.com/watch?v=ZSM-tmbBZ5E" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/ZSM-tmbBZ5E/hqdefault.jpg"></media:thumbnail></item></channel></rss>