<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Sébastien Keim</title><link>http://www.pyvideo.org/speaker/1949/sebastien-keim/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1949/sebastien-keim/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 30 Nov 2013 00:00:00 -0600</lastBuildDate><ttl>500</ttl><item><title>élégants objets</title><link>http://www.pyvideo.org/video/3754/elegants-objets</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Qu'est ce qui rend Python et sa bibliothèque standard si attrayants ? Et comment créer des objets qui ont les mêmes qualités ?

Un bref rappel des peps 8 et 20 pour évoquer la philosophie du langage; notamment les éléments de son modèle conceptuel qu'il faut garder à l'esprit quand on écrit une classe.

Seront ensuite présentés divers protocoles du langages: constructeur et destructeur, conversion de types, hachage et comparaison, opérateurs, dérivation , gestion des ressources, énumération... et de la bibliothèque standard: documentation et débogage, pickle et copy ...

Ces protocoles documentés sont l'arbre qui cache la forêt : il existe une foule d'archétypes plus implicites, que les programmeurs ont déjà rencontré dans les modules qu'ils ont utilisé; et qu'ils s'attendront implicitement à retrouver dans vos objets. Comment découvrir ces archétypes et les reproduire ?</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sébastien Keim</dc:creator><pubDate>Sat, 30 Nov 2013 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/3754/elegants-objets</guid><enclosure url="https://www.youtube.com/watch?v=WezVJSzqv1Y" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/WezVJSzqv1Y/maxresdefault.jpg"></media:thumbnail></item></channel></rss>