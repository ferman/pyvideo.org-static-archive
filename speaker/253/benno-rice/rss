<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Benno Rice</title><link>http://www.pyvideo.org/speaker/253/benno-rice/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/253/benno-rice/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 22 Aug 2012 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>PyConAU 2010: Don't Break It: Continuous Integration &amp;amp; Deployment</title><link>http://www.pyvideo.org/video/461/pyconau-2010--don--39-t-break-it--continuous-inte</link><description>&lt;p&gt;Description&lt;/p&gt;
Don't Break It: Continuous Integration &amp; Deployment

Presented by Benno Rice

So you've developed your application, it appears to work and you may even have
some tests to back that up. Now what?

One part of software development that tends to receive not nearly enough
attention is the process of deploying, supporting and maintaining your code in
production. This demonstration will give an overview of using tools such as
Hudson, nose, stdeb and freshen to automate the testing, packaging, deployment
and verification of production software.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><guid>http://www.pyvideo.org/video/461/pyconau-2010--don--39-t-break-it--continuous-inte</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/461_pyconau-2010-don-t-break-it-continuous-integration-amp-deployment.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-DontBreakItContinuousIntegrationDeployment397.png"></media:thumbnail></item><item><title>Making Your Application Behave</title><link>http://www.pyvideo.org/video/1624/making-your-application-behave</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Behave is a tool for behaviour-driven development inspired by the Cucumber
tool for Ruby. It allows developers and stakeholders to agree on how a
particular piece of software should behave using an English-like Given-When-
Then syntax and f


&lt;p&gt;Description&lt;/p&gt;
Behave is a tool for behaviour-driven development inspired by the Cucumber
tool for Ruby. It allows developers and stakeholders to agree on how a
particular piece of software should behave using an English-like Given-When-
Then syntax and for that behaviour for then to be easily tested in whatever
manner is appropriate.

This presentation will provide an introduction to behaviour-driven
development, behaviour testing in general and the behave tool along with its
advantages over alternatives such as lettuce and freshen.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><pubDate>Wed, 22 Aug 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1624/making-your-application-behave</guid><enclosure url="http://www.youtube.com/watch?v=u8BOKuNkmhg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/u8BOKuNkmhg/hqdefault.jpg"></media:thumbnail></item></channel></rss>