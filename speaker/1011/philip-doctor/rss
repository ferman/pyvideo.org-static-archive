<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Philip Doctor</title><link>http://www.pyvideo.org/speaker/1011/philip-doctor/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1011/philip-doctor/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 30 May 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Getting Started with Cassandra and Python</title><link>http://www.pyvideo.org/video/3549/getting-started-with-cassandra-and-python</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk will covers why to use Cassandra, basic Cassandra architecture, setting up Cassandra, and basic crud operations with a python web framework.  The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra's support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages.  Cassandra's data model offers the convenience of column indexes with the performance of log-structured updates, strong support for denormalization and materialized views, and powerful built-in caching.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber Doctor,Philip Doctor</dc:creator><pubDate>Sat, 30 May 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3549/getting-started-with-cassandra-and-python</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/depy-2015/3549_getting-started-cassandra-and-python.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/depy-2015/3549_getting-started-cassandra-and-python.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/-kzbMbFzQZw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/UKY3scPIMd8/hqdefault.jpg"></media:thumbnail></item><item><title>Storm (with python (and a side of clojure))</title><link>http://www.pyvideo.org/video/2553/storm-with-python-and-a-side-of-clojure</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A walking tour of Storm, what it is, what you can do, and how you can use it with python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Doctor</dc:creator><pubDate>Thu, 12 Dec 2013 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/2553/storm-with-python-and-a-side-of-clojure</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/chipy/2553_Storm_with_python_and_a_side_of_clojure.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/chipy/2553_Storm_with_python_and_a_side_of_clojure.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ja-iZG610o8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/ja-iZG610o8/hqdefault.jpg"></media:thumbnail></item><item><title>Monoids in Python</title><link>http://www.pyvideo.org/video/2447/monoids-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Monoids are largely badly explained, but actually quite beautiful.  I would like to take a brief tour of what a monoid is and how they can help out with mundane every day tasks in python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Doctor</dc:creator><pubDate>Thu, 14 Nov 2013 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/2447/monoids-in-python</guid><enclosure url="http://cf9ce50bbcc7255cb659-8cbed8cf7e3a131cd8f1c3e383d10041.r93.stream.cf2.rackcdn.com/chipy/2447_Monoids_in_Python.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://cf9ce50bbcc7255cb659-8cbed8cf7e3a131cd8f1c3e383d10041.r93.stream.cf2.rackcdn.com/chipy/2447_Monoids_in_Python.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=50qhv8C3s9I" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/50qhv8C3s9I/hqdefault.jpg"></media:thumbnail></item><item><title>Ultimate Language Shootout IV: C# is slightly better than you might imagine</title><link>http://www.pyvideo.org/video/1863/ultimate-language-shootout-iv-c-is-slightly-bet</link><description>&lt;p&gt;Abstract&lt;/p&gt;
If you find yourself accidentally writing c#, you can still have some fun.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philip Doctor</dc:creator><pubDate>Thu, 13 Jun 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1863/ultimate-language-shootout-iv-c-is-slightly-bet</guid><enclosure url="http://s3.us.archive.org/ndvchipy/Ultimate_Language_Shootout_IV_.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/ndvchipy/Ultimate_Language_Shootout_IV_.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=fByR4ghTOS8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/fByR4ghTOS8/hqdefault.jpg"></media:thumbnail></item></channel></rss>