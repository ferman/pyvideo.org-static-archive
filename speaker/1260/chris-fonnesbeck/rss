<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Chris Fonnesbeck</title><link>http://www.pyvideo.org/speaker/1260/chris-fonnesbeck/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1260/chris-fonnesbeck/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 09 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Bayesian Statistical Analysis using Python - Part 1</title><link>http://www.pyvideo.org/video/2760/bayesian-statistical-analysis-using-python-part-1</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This hands-on tutorial will introduce statistical analysis in Python using Bayesian methods. Bayesian statistics offer a flexible &amp; powerful way of  analyzing data, but are computationally-intensive, for which Python is ideal. As a gentle introduction, we will solve simple problems using NumPy and SciPy, before moving on to Markov chain Monte Carlo methods to build more complex models using PyMC.
&lt;p&gt;Description&lt;/p&gt;
The aim of this course is to introduce new users to the Bayesian approach of statistical modeling and analysis, so that they can use Python packages such as NumPy, SciPy and [PyMC](https://github.com/pymc-devs/pymc) effectively to analyze their own data. It is designed to get users quickly up and running with Bayesian methods, incorporating just enough statistical background to allow users to understand, in general terms, what they are implementing. The tutorial will be example-driven, with illustrative case studies using real data. Selected methods will include approximation methods, importance sampling, Markov chain Monte Carlo (MCMC) methods such as Metropolis-Hastings and Slice sampling. In addition to model fitting, the tutorial will address important techniques for model checking, model comparison, and steps for preparing data and processing model output. Tutorial content will be derived from the instructor's book *Bayesian Statistical Computing using Python*, to be published by Springer in late 2014.

![PyMC forest plot](http://d.pr/i/pqWT+)

![DAG](http://d.pr/i/AHZV+)

All course content will be available as a GitHub repository, including IPython notebooks and example data.

## Tutorial Outline

1.  Overview of Bayesian statistics.
2.  Bayesian Inference with NumPy and SciPy
3.  Markov chain Monte Carlo (MCMC)
4.  The Essentials of PyMC
5.  Fitting Linear Regression Models
6.  Hierarchical Modeling
7.  Model Checking and Validation

## Installation Instructions

The easiest way to install the Python packages required for this tutorial is via [Anaconda](https://store.continuum.io/cshop/anaconda/), a scientific Python distribution offered by Continuum analytics. Several other tutorials will be recommending a similar setup. 

One of the key features of Anaconda is a command line utility called `conda` that can be used to manage third party packages. We have built a PyMC package for `conda` that can be installed from your terminal via the following command:

    conda install -c https://conda.binstar.org/pymc pymc

This should install any prerequisite packages that are required to run PyMC.

One caveat is that conda does not yet have a build of PyMC for **Python 3**. Therefore, you would have to build it yourself via pip:

    pip install git+git://github.com/pymc-devs/pymc.git@2.3

For those of you on Mac OS X that are already using the [Homebrew](http://brew.sh) package manager, I have prepared a script that will install the entire Python scientific stack, including PyMC 2.3. You can download the script [here](https://gist.github.com/fonnesbeck/7de008b05e670d919b71) and run it via:

    sh install_superpack_brew.sh</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fonnesbeck</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2760/bayesian-statistical-analysis-using-python-part-1</guid><enclosure url="http://www.youtube.com/watch?v=vOBB_ycQ0RA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/vOBB_ycQ0RA/hqdefault.jpg"></media:thumbnail></item><item><title>Bayesian Statistical Analysis using Python - Part 2</title><link>http://www.pyvideo.org/video/2759/bayesian-statistical-analysis-using-python-part-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This hands-on tutorial will introduce statistical analysis in Python using Bayesian methods. Bayesian statistics offer a flexible &amp; powerful way of  analyzing data, but are computationally-intensive, for which Python is ideal. As a gentle introduction, we will solve simple problems using NumPy and SciPy, before moving on to Markov chain Monte Carlo methods to build more complex models using PyMC.
&lt;p&gt;Description&lt;/p&gt;
The aim of this course is to introduce new users to the Bayesian approach of statistical modeling and analysis, so that they can use Python packages such as NumPy, SciPy and [PyMC](https://github.com/pymc-devs/pymc) effectively to analyze their own data. It is designed to get users quickly up and running with Bayesian methods, incorporating just enough statistical background to allow users to understand, in general terms, what they are implementing. The tutorial will be example-driven, with illustrative case studies using real data. Selected methods will include approximation methods, importance sampling, Markov chain Monte Carlo (MCMC) methods such as Metropolis-Hastings and Slice sampling. In addition to model fitting, the tutorial will address important techniques for model checking, model comparison, and steps for preparing data and processing model output. Tutorial content will be derived from the instructor's book *Bayesian Statistical Computing using Python*, to be published by Springer in late 2014.

![PyMC forest plot](http://d.pr/i/pqWT+)

![DAG](http://d.pr/i/AHZV+)

All course content will be available as a GitHub repository, including IPython notebooks and example data.

## Tutorial Outline

1.  Overview of Bayesian statistics.
2.  Bayesian Inference with NumPy and SciPy
3.  Markov chain Monte Carlo (MCMC)
4.  The Essentials of PyMC
5.  Fitting Linear Regression Models
6.  Hierarchical Modeling
7.  Model Checking and Validation

## Installation Instructions

The easiest way to install the Python packages required for this tutorial is via [Anaconda](https://store.continuum.io/cshop/anaconda/), a scientific Python distribution offered by Continuum analytics. Several other tutorials will be recommending a similar setup. 

One of the key features of Anaconda is a command line utility called `conda` that can be used to manage third party packages. We have built a PyMC package for `conda` that can be installed from your terminal via the following command:

    conda install -c https://conda.binstar.org/pymc pymc

This should install any prerequisite packages that are required to run PyMC.

One caveat is that conda does not yet have a build of PyMC for **Python 3**. Therefore, you would have to build it yourself via pip:

    pip install git+git://github.com/pymc-devs/pymc.git@2.3

For those of you on Mac OS X that are already using the [Homebrew](http://brew.sh) package manager, I have prepared a script that will install the entire Python scientific stack, including PyMC 2.3. You can download the script [here](https://gist.github.com/fonnesbeck/7de008b05e670d919b71) and run it via:

    sh install_superpack_brew.sh</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fonnesbeck</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2759/bayesian-statistical-analysis-using-python-part-0</guid><enclosure url="http://www.youtube.com/watch?v=gFYPCdWB2-w" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/gFYPCdWB2-w/hqdefault.jpg"></media:thumbnail></item><item><title>Bayesian Statistical Analysis using Python - Part 3</title><link>http://www.pyvideo.org/video/2758/bayesian-statistical-analysis-using-python-part</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This hands-on tutorial will introduce statistical analysis in Python using Bayesian methods. Bayesian statistics offer a flexible &amp; powerful way of  analyzing data, but are computationally-intensive, for which Python is ideal. As a gentle introduction, we will solve simple problems using NumPy and SciPy, before moving on to Markov chain Monte Carlo methods to build more complex models using PyMC.
&lt;p&gt;Description&lt;/p&gt;
The aim of this course is to introduce new users to the Bayesian approach of statistical modeling and analysis, so that they can use Python packages such as NumPy, SciPy and [PyMC](https://github.com/pymc-devs/pymc) effectively to analyze their own data. It is designed to get users quickly up and running with Bayesian methods, incorporating just enough statistical background to allow users to understand, in general terms, what they are implementing. The tutorial will be example-driven, with illustrative case studies using real data. Selected methods will include approximation methods, importance sampling, Markov chain Monte Carlo (MCMC) methods such as Metropolis-Hastings and Slice sampling. In addition to model fitting, the tutorial will address important techniques for model checking, model comparison, and steps for preparing data and processing model output. Tutorial content will be derived from the instructor's book *Bayesian Statistical Computing using Python*, to be published by Springer in late 2014.

![PyMC forest plot](http://d.pr/i/pqWT+)

![DAG](http://d.pr/i/AHZV+)

All course content will be available as a GitHub repository, including IPython notebooks and example data.

## Tutorial Outline

1.  Overview of Bayesian statistics.
2.  Bayesian Inference with NumPy and SciPy
3.  Markov chain Monte Carlo (MCMC)
4.  The Essentials of PyMC
5.  Fitting Linear Regression Models
6.  Hierarchical Modeling
7.  Model Checking and Validation

## Installation Instructions

The easiest way to install the Python packages required for this tutorial is via [Anaconda](https://store.continuum.io/cshop/anaconda/), a scientific Python distribution offered by Continuum analytics. Several other tutorials will be recommending a similar setup. 

One of the key features of Anaconda is a command line utility called `conda` that can be used to manage third party packages. We have built a PyMC package for `conda` that can be installed from your terminal via the following command:

    conda install -c https://conda.binstar.org/pymc pymc

This should install any prerequisite packages that are required to run PyMC.

One caveat is that conda does not yet have a build of PyMC for **Python 3**. Therefore, you would have to build it yourself via pip:

    pip install git+git://github.com/pymc-devs/pymc.git@2.3

For those of you on Mac OS X that are already using the [Homebrew](http://brew.sh) package manager, I have prepared a script that will install the entire Python scientific stack, including PyMC 2.3. You can download the script [here](https://gist.github.com/fonnesbeck/7de008b05e670d919b71) and run it via:

    sh install_superpack_brew.sh</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fonnesbeck</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2758/bayesian-statistical-analysis-using-python-part</guid><enclosure url="http://www.youtube.com/watch?v=54sFjp7AvXM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/54sFjp7AvXM/hqdefault.jpg"></media:thumbnail></item><item><title>PyMC: Markov Chain Monte Carlo in Python</title><link>http://www.pyvideo.org/video/2734/pymc-markov-chain-monte-carlo-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PyMC is a Python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo (MCMC). Its flexibility, extensibility, and clean interface make it applicable to a large suite of statistical modeling applications. The upcoming release of PyMC 3 features an expanded set of MCMC samplers, including Hamiltonian Monte Carlo.
&lt;p&gt;Description&lt;/p&gt;
[PyMC](http://pymc-devs.github.io/pymc/) is a Python module that implements Bayesian statistical models and fitting algorithms, including Markov chain Monte Carlo (MCMC). Its flexibility and extensibility make it applicable to a large suite of problems. Along with core sampling functionality, PyMC includes methods for summarizing output, plotting, goodness-of-fit and convergence diagnostics. PyMC seeks to make Bayesian analysis as painless as possible, so that it may be used by a range of data analysts. Its key features include:

* Fits Bayesian statistical models with Markov chain Monte Carlo and other algorithms.
* Includes a large suite of well-documented statistical distributions.
* Uses NumPy for numerics wherever possible.
* Includes a module for modeling Gaussian processes.
* Sampling loops can be paused and tuned manually, or saved and restarted later.
* Creates summaries including tables and plots.
* Traces can be saved to the disk as plain text, Python pickles, SQLite or MySQL database, or hdf5 archives.
* Several convergence diagnostics are available.
* Extensible: easily incorporates custom step methods and unusual probability distributions.
* MCMC loops can be embedded in larger programs, and results can be analyzed with the full power of Python.

The upcoming release of [PyMC 3](https://github.com/pymc-devs/pymc) features an expanded set of MCMC samplers, including Hamiltonian Monte Carlo. For this, we tap into the power of Theano to provide automatic evaluation of mathematical expressions, including gradients used by modern MCMC samplers.

The [source](https://github.com/pymc-devs/pymc) and [documentation](http://pymc-devs.github.io/pymc/) for PyMC can be found on GitHub.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Fonnesbeck</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2734/pymc-markov-chain-monte-carlo-in-python</guid><enclosure url="http://www.youtube.com/watch?v=XbxIo7ScVzc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/XbxIo7ScVzc/hqdefault.jpg"></media:thumbnail></item></channel></rss>