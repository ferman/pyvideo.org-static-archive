<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Greg Ward</title><link>http://www.pyvideo.org/speaker/1117/greg-ward/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1117/greg-ward/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 11 Apr 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>How to Write Reusable Code</title><link>http://www.pyvideo.org/video/3499/how-to-write-reusable-code</link><description>&lt;p&gt;Description&lt;/p&gt;
Learning to write high-quality, reusable code takes years of dedicated work. Or you can take a shortcut: attend this talk and learn some of the tricks I've figured out over a couple of decades of programming.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3499/how-to-write-reusable-code</guid><enclosure url="https://www.youtube.com/watch?v=r9cnHO15YgU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/r9cnHO15YgU/hqdefault.jpg"></media:thumbnail></item><item><title>Unit Testing Makes Your Code Better</title><link>http://www.pyvideo.org/video/2648/unit-testing-makes-your-code-better</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Unit testing is like public transit: everyone agrees it's a good thing for other people to do. It's easier to swallow when you see how unit testing improves not only the correctness of your code, but the design as well. I'll walk through a real-life case study where adding unit tests turned a pretty good module into an even better one: easier to understand, extend, and reuse.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2648/unit-testing-makes-your-code-better</guid><enclosure url="http://www.youtube.com/watch?v=ArLf03-RLwU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/ArLf03-RLwU/hqdefault.jpg"></media:thumbnail></item><item><title>Go for Python Hackers</title><link>http://www.pyvideo.org/video/2345/go-for-python-hackers-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
There is a resurgence of native-compiled programming languages going on. Some of this work is in response to Python; we're now part of The Establishment against which newcomers are measured. I'll give an overview of Go, a recent native-compiled language, and how it relates to Python. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sun, 11 Aug 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2345/go-for-python-hackers-0</guid><enclosure url="http://www.youtube.com/watch?v=XEQziFzKSgA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/XEQziFzKSgA/hqdefault.jpg"></media:thumbnail></item></channel></rss>