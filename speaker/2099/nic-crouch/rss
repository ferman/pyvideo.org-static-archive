<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Nic Crouch</title><link>http://www.pyvideo.org/speaker/2099/nic-crouch/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/2099/nic-crouch/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 29 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Are they ready? A quick review of graph databases and Python</title><link>http://www.pyvideo.org/video/3981/are-they-ready-a-quick-review-of-graph-databases</link><description>&lt;p&gt;Description&lt;/p&gt;
Graph databases store, retrieve and process data that takes the form of a graph: a network of nodes and the relationships between them. As one of the fastest growing database models over the past two years, they promise a number of fantastic outcomes including increased performance, faster development, and cleaner code. Vendors also boast of large corporate deployments throughout the US and Europe. 

So, are graph databases as good as they sound? How can we use them with Python? 

This talk will review a couple of the most popular graph databases including Neo4J, Titan and OrientDB.   The focus will be on interacting with each database as Pythonically as possible – using Python APIs as much as possible. Along the way it will give an idea of ease of use, speed, documentation quality and stability, as well as any other challenges or tricks that found along the way. It isn’t a tutorial – there’s not enough time, and those exist elsewhere – but instead more of an introduction to what is out there and what you can do with it. 

At the end of the talk, you will have an idea of what it takes to get started with Graph Databases in Python, and also an idea of which toolset you want to use. You’ll also have an idea of the sorts of problems which map well to graph databases, and which ones may be better suited to other storage and processing methods. 

You won’t need to have a background in graphs or even a lot of Python experience to get through this talk. However, it’s always good to have a potential application in mind.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nic Crouch</dc:creator><pubDate>Sat, 29 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3981/are-they-ready-a-quick-review-of-graph-databases</guid><enclosure url="https://www.youtube.com/watch?v=Wnj31Nejstc" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Wnj31Nejstc/hqdefault.jpg"></media:thumbnail></item><item><title>Software Carpentry - Expansion and Partnerships in 2015</title><link>http://www.pyvideo.org/video/3990/software-carpentry-expansion-and-partnerships-i</link><description>&lt;p&gt;Description&lt;/p&gt;
The Software Carpentry Foundation is an international volunteer organisation that teaches basic programming skills to researchers in science, engineering, medicine and other disciplines. Further, the foundation maintains a wealth of open-source, open-access teaching materials for a several programming related topics, including Python, the Unix shell, Git, SQL, R and Matlab. 

Lessons from Software Carpentry are usually delivered in the form of two day workshops. Taught by trained instructors, these workshops cover automation of repetitive tasks using the shell, building modular and testable programs using Python or R and using version control to build software in a collaborative and efficient manner. Furthermore, workshops may be expanded, covering topics such as SQL and the use of databases to reliably store and maintain data. Though of course it is impossible to train expert programmers in two days, Software Carpentry has had great success in teaching ‘just enough’ to researchers that they can then return to the lab with a strong foundation of skills to build from.

This presentation will focus on the major progress that has been made by Software Carpentry in Australia and worldwide since PyCon-Au 2014. In particular, the pool of Australian instructors has dramatically increased through the live training session held as part of the Research Bazaar conference held at Melbourne University in February. As such, the presentation will be somewhat meta – answering the question ‘What are the educational principles and techniques you should know before attempting to teach novice programmers?’ The Software Carpentry lesson content has also evolved in the last 12 months, with the lesson content expanding to such topics as the use of Pandas and the more effective use of the iPython Notebook to work with data and visualisation. These changes allow Software Carpentry to cater to a broader audience of researchers. There will also be some discussion of the Research Bazaar conference, which partnered with Software Carpentry this year to not only train instructors, but also run a series of other ‘basic skills’ workshops for researchers. Finally, there is an interesting sister organisation of Software Carpentry, known as Data Carpentry, which focuses on improving the way researchers work with and store their data. 



</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nic Crouch</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3990/software-carpentry-expansion-and-partnerships-i</guid><enclosure url="https://www.youtube.com/watch?v=dGJzl286D5I" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/dGJzl286D5I/hqdefault.jpg"></media:thumbnail></item></channel></rss>