<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Tim McNamara</title><link>http://www.pyvideo.org/speaker/62/tim-mcnamara/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/62/tim-mcnamara/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 09 Aug 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Tim McNamara - OLPC XO: Python bringing education to the world's poorest children</title><link>http://www.pyvideo.org/video/116/tim-mcnamara---olpc-xo--python-bringing-education</link><description>&lt;p&gt;Description&lt;/p&gt;
OLPC XO: Python bringing education to the world's poorest children

Presented by Tim McNamara

Abstract

This topic will be divided into five different area of 10 minutes each, with
time for questions and discussion. We'll talk about the OLPC programme, the
hardware, the software, the educational theory and how to get involved NZ.

Outline

  1. In defence of the OLPC XO This section will be a brief overview of the whole project hopefully with an eye to dispel some rumour and controversy surrounding the project. There has been several mixed messages, and I would like to 
  2. Overview of the hardware In this section, the talk to move into a discussion about the overview of the hardware itself. There will be several machines for the audience to have a look at, and we'll try and test some of the mesh networking, collaboration and sharing capabilities that are built into the machine. 
  3. Overview of the software The OLPC XO is run using a Python environment called Sugar ([http://sugarlabs.org.nz](http://sugarlabs.org.nz/)), which itself is a Fedora Remix. We will talk a little about how an Activity is built and how to start contributing to the Sugar system. 
  4. How to deploy into schools This segment will go over some of the theoretical underpinnings of the user interface and Sugar's approach to things like the directory structure. We'll also explore some of the tools that teachers and parents can use to progressively encourage their children to learn about computing and develop creative and critical thinking. 
  5. How to get involved There are small pockets of XOs around the country. Learn where they are and how to start improving them! 

[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><guid>http://www.pyvideo.org/video/116/tim-mcnamara---olpc-xo--python-bringing-education</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/kiwi-pycon-2009/116_tim-mcnamara-olpc-xo-python-bringing-education-to-the-world-s-poorest-children.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Kiwipycon-TimMcNamaraOLPCXOPythonBringingEducationToTheWorldsPo728-638.jpg"></media:thumbnail></item><item><title>Lesser known data structures by Tim McNamara</title><link>http://www.pyvideo.org/video/3117/lesser-known-data-structures-by-tim-mcnamara</link><description>&lt;p&gt;Description&lt;/p&gt;
Python is graced with flexible, easy to use data structures that are at your fingertips every time you start a command prompt. Lists, dictionaries and tuples are our friends. However, sometimes you want more than what they can give.

While subclassing is a great approach, often what you want has already been written. Most often, it’ll be waiting for you within the standard library. This talk will be a tour of some of what awaits you. Don’t be the next person to recreate an ordered dictionary.

Within the collections module, as well as other places within the standard library, you’ll find lots of functionality. Using these data structures can lead to simpler, more robust code.

As well as explaining how to use some of the data structures that we encounter, we’ll also be checking through open source code to see how they are used in the real world. This will give us insight into how other programmers are using them. Hopefully</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3117/lesser-known-data-structures-by-tim-mcnamara</guid><enclosure url="http://mirror.linux.org.au/pub/pycon-au/pyconau2014/20-out.ogv" length="None" type="video/ogg"></enclosure><media:group><media:content url="http://mirror.linux.org.au/pub/pycon-au/pyconau2014/20-out.ogv" mime_type="video/ogg"></media:content><media:content url="http://www.youtube.com/watch?v=QQkbiGIQi4g" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/QQkbiGIQi4g/hqdefault.jpg"></media:thumbnail></item><item><title>A look at NuPIC - A self-learning AI engine</title><link>http://www.pyvideo.org/video/2379/a-look-at-nupic-a-self-learning-ai-engine</link><description>&lt;p&gt;Abstract&lt;/p&gt;
NuPIC is an open source platform for building prediction models from data streams, such as sensor data. Two models will be discussed, an earthquake damage predictor built from from GeoNet data and a flood level warning system.

&lt;p&gt;Description&lt;/p&gt;
@ Kiwi PyCon 2013 - Saturday, 07 Sep 2013 - Track 1

**Audience level**

Intermediate

**Abstract**

This talk will discuss the speaker's experience with NuPIC - http://numenta.org/nupic.html - for building useful artificial intelligence applications. In particular, the author will discuss developing damage and flood prediction models based on public sensor data.

About the tool

NuPIC is an open source implementation of algorithms which are inspired heavily by our understanding of how the neocortex organises information. NuPIC uses online (or continuous) learning, providing a prediction after every input is received. This is intended to mirror how human brains operate, by acting quickly on new information based on prior knowledge, while being able to adapt to it for the next bit of information. The other main features are the inclusion of a temporal dimension to learning, partitioning models into hierarchies of sub-models and representing knowledge within a sparse, distributed matrix modelled after the brain.

About the talk

The claims made in the documentation of NuPIC are very bold. The developers claim that models are able to be developed without needing to create training and testing sets. The models that are developed in this manner are supposedly self-learning. Surely, this must be exaggeration! This talk is a presentation of an evaluation of building models for two sets of input data, one relating to earthquakes and the other relating to flood levels.

The anticipated case studies

GeoNet provides an extensive archive of seismic data, along with associated damage reports from people affected by particular shakes. In principle, we could feed this historical data to NuPIC and then ask it to tell us how likely and how intense damage will be for any particular quake. Perhaps we could even use NuPIC to model predict the likelihood of multiple quakes within a cluster.

With information about rain levels available in near-real time from NIWA's climate database (Cliflo) and information about river catchments and historical from district councils, it is (in principle) possible to create a flood risk prediction model for one's own use.

**Slides**

https://speakerdeck.com/nzpug/tim-mcnamara-a-look-at-nupic-a-self-learning-ai-engine</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2379/a-look-at-nupic-a-self-learning-ai-engine</guid><enclosure url="http://www.youtube.com/watch?v=rY7GLyxINFY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/rY7GLyxINFY/hqdefault.jpg"></media:thumbnail></item></channel></rss>