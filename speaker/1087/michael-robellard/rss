<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Michael Robellard</title><link>http://www.pyvideo.org/speaker/1087/michael-robellard/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1087/michael-robellard/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 01 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>From Synchronous to Asynchronous Postgres with Tornado</title><link>http://www.pyvideo.org/video/3698/from-synchronous-to-asynchronous-postgres-with-to</link><description>&lt;p&gt;Description&lt;/p&gt;
During my talk two years ago "ORM vs SQL Roundup" I concluded with some simple ways to do Object Relationship mapping without the heavy overhead of a full featured ORM. This talk will show how I transformed the code to work asynchronously.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sat, 01 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3698/from-synchronous-to-asynchronous-postgres-with-to</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pyohio-2015/3698_From_Synchronous_to_Asynchronous_Postgres_with_Tor.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pyohio-2015/3698_From_Synchronous_to_Asynchronous_Postgres_with_Tor.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/C7m9gkCQCXc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="https://i.ytimg.com/vi/C7m9gkCQCXc/hqdefault.jpg"></media:thumbnail></item><item><title>Implementing Celery, Lessons Learned</title><link>http://www.pyvideo.org/video/2832/implementing-celery-lessons-learned</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will include a walkthrough of using Celery and RabbitMQ. We will cover actual issues found and fixed during an actual implementation.
such as Queues in stage and production. Handling Failures. Retries, Failure Queues, and Logging. Integrating with SQL Alchemy for producers and consumers.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2832/implementing-celery-lessons-learned</guid><enclosure url="http://964bdd2f965bbc4ca8f5-3ebaa0e988d98119a4fead51a26da83a.r42.cf2.rackcdn.com/pyohio-2014/2832_Implementing_Celery_Lessons_Learned.webm" length="None" type="video/webm"></enclosure><media:group><media:content url="http://964bdd2f965bbc4ca8f5-3ebaa0e988d98119a4fead51a26da83a.r42.cf2.rackcdn.com/pyohio-2014/2832_Implementing_Celery_Lessons_Learned.webm" mime_type="video/webm"></media:content><media:content url="http://youtu.be/hmtSe0yPi6I" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/hmtSe0yPi6I/hqdefault.jpg"></media:thumbnail></item><item><title>ORM vs SQL Roundup</title><link>http://www.pyvideo.org/video/2289/orm-vs-sql-roundup</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We will be discussing pros and cons of various Python ORMs vs. using straight SQL. The goal will be to help developers decide the right decision next time they have to decide what to do for database access for their app. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Robellard</dc:creator><pubDate>Sat, 27 Jul 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2289/orm-vs-sql-roundup</guid><enclosure url="https://www.youtube.com/watch?v=Wz1_GYc4GmU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/Wz1_GYc4GmU/hqdefault.jpg"></media:thumbnail></item></channel></rss>