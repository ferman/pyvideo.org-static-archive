<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Florian Wilhelm</title><link>http://www.pyvideo.org/speaker/1170/florian-wilhelm/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1170/florian-wilhelm/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 25 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Extending Scikit-Learn with your own Regressor</title><link>http://www.pyvideo.org/video/2936/extending-scikit-learn-with-your-own-regressor</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We show how to write your own robust linear estimator within the Scikit-Learn framework using as an example the Theil-Sen estimator known as "the most popular nonparametric technique for estimating a linear trend".
&lt;p&gt;Description&lt;/p&gt;
Scikit-Learn (http://scikit-learn.org/) is a well-known and popular framework for machine learning that is used by Data Scientists all over the world. We show in a practical way how you can add your own estimator following the interfaces of Scikit-Learn. First we give a small introduction to the design of Scikit-Learn and its inner workings. Then we show how easily Scikit-Learn can be extended by creating an own estimator. In order to demonstrate this, we extend Scikit-Learn by the popular and robust Theil-Sen Estimator (http://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator) that is currently not in Scikit-Learn. We also motivate this estimator by outlining some of its superior properties compared to the ordinary least squares method (LinearRegression in Scikit-Learn).</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Wilhelm</dc:creator><pubDate>Fri, 25 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2936/extending-scikit-learn-with-your-own-regressor</guid><enclosure url="http://www.youtube.com/watch?v=ZT9NvTXusDk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/ZT9NvTXusDk/hqdefault.jpg"></media:thumbnail></item><item><title>Handling Big Data with Python</title><link>http://www.pyvideo.org/video/2430/handling-big-data-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The talk gives a small introduction of how Blue Yonder applies machine learning and Predictive Analytics in various fields as well as the challenges of Big Data. Using the example of Blue Yonder's machine learning software NeuroBayes, we show the made efforts and hit dead ends in order to provide a flexible and yet easy to use interface for NeuroBayes to Data Scientists. Since NeuroBayes is written in FORTRAN for performance reasons different interface approaches were tried which lead us eventually to a Python interface. In the talk we elaborate on the up- and downsides of the different approaches and the various reasons why Python won the race with an emphasize on the benefits of the Python ecosystem itself. 
Also, we discuss performance as well as scalability issues with Python and how we address them. In detail, we show the application of Cython to speed up calculations in the Python interface layer as well as distributed computing in a private cloud called Stratosphere. Scalability and efficiency is of utmost importance when data processing is time critical.  Our overall goal is to give the audience an overview how Python fits in the software ecosystem of a company handling Big Data.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Wilhelm</dc:creator><pubDate>Thu, 17 Oct 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2430/handling-big-data-with-python</guid><enclosure url="https://www.youtube.com/watch?v=CxinlY8yGUM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/CxinlY8yGUM/hqdefault.jpg"></media:thumbnail></item></channel></rss>