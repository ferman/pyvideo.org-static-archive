<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Nicholas Malaya</title><link>http://www.pyvideo.org/speaker/1302/nicholas-malaya/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1302/nicholas-malaya/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 13 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>MASA: A Tool for the Verification of Scientific Software</title><link>http://www.pyvideo.org/video/2796/masa-a-tool-for-the-verification-of-scientific-s</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Numerical simulations have a broad range of application, from aircraft design to drug discovery. However, any prediction from a computer must be tested to ensure its reliability. Verification ensures the outputs of a computation accurately reflect the underlying model. This talks covers MASA, a tool for the verification of software used in a large class of problems in applied mathematics.
&lt;p&gt;Description&lt;/p&gt;
Numerical simulations have an incredibly broad range of applicability, from computer aided aircraft design to drug discovery. However, any prediction arising from a computer model must be rigorously tested to ensure its reliability. Verification is a process that ensures that the outputs of a computation accurately reflect the solution of the mathematical models. 

This talk will first provide an introduction to the method of manufactured solutions (MMS), which is a powerful approach for verification of model problems in which a solution cannot be determined analytically. However, verifying computational science software using manufactured

solutions requires the generation of the solutions with associated forcing terms and their reliable implementation in software. There are several issues that arise in generating solutions, including ensuring that they are meaningful, and the algebraic complexity of the forcing terms. After briefly discussing these issues, the talk will introduce MASA, the Manufactured Analytical Solution Abstraction library. MASA is an open-source library written in C++ (with python interfaces) which is designed for the veri?cation of software used for solving a large class of problems stemming from numerical methods in applied mathematics including nonlinear equations, systems of algebraic equations, and ordinary and partial differential equations.

Example formulations in MASA include the Heat Equation, Laplace's Equation, and the Navier-Stokes Equations, but in principle MASA supports instantiating any model that can be written down mathematically. This talk will end with details on two methods to import manufactured solutions into the library, either by generate the source terms, or using the automatic differentiation capabilities provided in MASA.

The library is available at: [https://github.com/manufactured-solutions/MASA](https://github.com/manufactured-solutions/MASA)
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Malaya</dc:creator><pubDate>Sun, 13 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2796/masa-a-tool-for-the-verification-of-scientific-s</guid><enclosure url="http://www.youtube.com/watch?v=OvyqO4fxdKs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/OvyqO4fxdKs/hqdefault.jpg"></media:thumbnail></item></channel></rss>