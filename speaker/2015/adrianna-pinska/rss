<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Adrianna Pińska</title><link>http://www.pyvideo.org/speaker/2015/adrianna-pinska/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/2015/adrianna-pinska/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 02 Oct 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Friday Lightning Talks</title><link>http://www.pyvideo.org/video/3943/friday-lightning-talks</link><description>&lt;p&gt;Description&lt;/p&gt;
 * [(0:00:00)](http://youtu.be/MNyOPWT8ncw?t=0h0m0s) **Using Odo to load data** by Tobias Brandt
* [(0:05:23)](http://youtu.be/MNyOPWT8ncw?t=0h5m23s) **Sh** by Adrianna Pińska
* [(0:08:44)](http://youtu.be/MNyOPWT8ncw?t=0h8m44s) **Pygame Zero** by Neil Muller
* [(0:11:57)](http://youtu.be/MNyOPWT8ncw?t=0h11m57s) **How not to hate Javascript** by Adam Jorgensen
* [(0:16:28)](http://youtu.be/MNyOPWT8ncw?t=0h16m28s) **Testing code examples from your slides** by Jeremy Thurgood</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Jorgensen,Adrianna Pińska,Jeremy Thurgood,Neil Muller,Tobias Brandt</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3943/friday-lightning-talks</guid><enclosure url="http://youtu.be/MNyOPWT8ncw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/MNyOPWT8ncw/hqdefault.jpg"></media:thumbnail></item><item><title>A little scripting goes a long way: automating data processing in science</title><link>http://www.pyvideo.org/video/3930/a-little-scripting-goes-a-long-way-automating-da</link><description>&lt;p&gt;Description&lt;/p&gt;
When we think about scientific programming, we often focus on complex high-performance applications for performing simulations of chemical processes, or on data analysis tools. It is easy to overlook the gaps between tools, such as format conversions, which may be simple for a programmer to automate, but require hours of tedious work for a researcher without programming experience.

In this talk I will present a specific example of an application which fills such a gap in a medical research laboratory, where readings of chemical samples are used to measure the response of TB-causing bacteria to various drugs. The readings must be converted from the raw format produced by the instrument in the laboratory into a format suitable for uploading into an online tool for further analysis.

I will also discuss more broadly how research institutions can improve efficiency by collaborating with programmers and by encouraging researchers to acquire basic programming skills.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrianna Pińska</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3930/a-little-scripting-goes-a-long-way-automating-da</guid><enclosure url="http://youtu.be/6MlZOIryiwY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/6MlZOIryiwY/hqdefault.jpg"></media:thumbnail></item><item><title>An introduction to regular expressions in Python</title><link>http://www.pyvideo.org/video/3846/an-introduction-to-regular-expressions-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Regular expressions are a mini-language used for pattern-matching in text. They have been a staple of the computing world for decades: they are implemented in most programming languages, form the core of several utilities, and can be found lurking in the search-and-replace functionality of any sufficiently advanced text editor.
Despite their usefulness, regular expressions have developed a reputation for complexity and a steep learning curve. New programmers are often warned to steer clear of them -- which is a pity, because there are some problems for which they are a quick and elegant solution.
In this talk I aim to demystify regular expressions for the beginner programmer, and to provide a brief guided tour of Python's re module. I hope to encourage more programmers to get to know this useful tool.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrianna Pińska</dc:creator><pubDate>Fri, 03 Oct 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3846/an-introduction-to-regular-expressions-in-python</guid><enclosure url="http://archive.org/download/pyconza2014-regular-expressions/9%20A%20An%20introduction%20to%20regular%20expressions%20in%20Python-.ogv" length="None" type="video/ogg"></enclosure><media:group><media:content url="http://archive.org/download/pyconza2014-regular-expressions/9%20A%20An%20introduction%20to%20regular%20expressions%20in%20Python-.ogv" mime_type="video/ogg"></media:content><media:content url="http://archive.org/download/pyconza2014-regular-expressions/9%20A%20An%20introduction%20to%20regular%20expressions%20in%20Python-.mp4" mime_type="video/mp4"></media:content></media:group><media:thumbnail url="http://archive.org/download/pyconza2014-regular-expressions/pyconza2014-regular-expressions.thumbs/9%20A%20An%20introduction%20to%20regular%20expressions%20in%20Python-_001410.jpg"></media:thumbnail></item><item><title>An Introduction to Flask</title><link>http://www.pyvideo.org/video/3909/an-introduction-to-flask</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrianna Pińska</dc:creator><pubDate>Thu, 03 Oct 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3909/an-introduction-to-flask</guid><enclosure url="http://archive.org/download/pyconza2013-intro-to-flask/pyconza2013-intro-to-flask.ogv" length="None" type="video/ogg"></enclosure><media:thumbnail url="http://archive.org/download/pyconza2013-intro-to-flask/pyconza2013-intro-to-flask.thumbs/pyconza2013-intro-to-flask_000090.jpg"></media:thumbnail></item></channel></rss>