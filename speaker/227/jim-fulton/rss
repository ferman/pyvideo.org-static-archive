<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of JIm Fulton</title><link>http://www.pyvideo.org/speaker/227/jim-fulton/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/227/jim-fulton/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 16 Mar 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>PyCon 2009: Plenary: Morning Lightning Talks</title><link>http://www.pyvideo.org/video/227/pycon-2009--plenary--morning-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Plenary: Morning Lightning Talks covering GeoDjango, Zope, Launchpad, JSOT,
AppEngine, StackOverflow, Miro, zc.buildout and RPM, ham radio, Plyne,
GozerBot, picking tools, and stop watch.


&lt;p&gt;Description&lt;/p&gt;
  * (00:20) GeoDjango - Justin Bronn 
  * (05:50) What's up with Zope - Martijn Faassen 
  * (10:55) Scripting Launchpad - Paul Hummer 
  * (13:50) JSQT - ? 
  * (16:10) Python, AppEngine, and Informatics - Charles Severance 
  * (20:55) an online game called stackoverflow - John Mulder 
  * (25:25) Miro - Chris Webber 
  * (28:40) Deploying applications with zc.buildout and RPM - Jim Fulton 
  * (34:10) Ham radio and Python - Adam Fast 
  * (38:30) Plone + Pylons = Plyne - Roberto Allende 
  * (41:35) GozerBot - John Hampton 
  * (44:25) Software Engineering and the Pickling Tools - Rich Saunders 
  * (48:45) Talks about the stop watch 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Fast,Charles Severance,Christopher Allan Webber,JIm Fulton,John Hampton,John Mulder,Justin Bronn,Martin Faassen,Paul Hummer,Richard T. Saunders,Roberto Allende</dc:creator><guid>http://www.pyvideo.org/video/227/pycon-2009--plenary--morning-lightning-talks</guid><enclosure url="http://blip.tv/file/get/Pycon-PlenaryMorningLightningTalks730.mp4" length="242768891" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PlenaryMorningLightningTalks730-226.jpg"></media:thumbnail></item><item><title>Panel: Directions for Packaging</title><link>http://www.pyvideo.org/video/1731/panel-directions-for-packaging</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What needs to happen to finally offer a first-class packaging
experience to Python users? Several of the people working directly on
that problem will be here to answer your questions.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Holth,Ã‰ric Araujo,Jason R. Coombs,JIm Fulton,Marcus Smith,Nick Coghlan,Richard Jones</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1731/panel-directions-for-packaging</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Panel_Directions_for_Packaging.mp4?Signature=eQptpaf3Gdv4Upvxsm4x9%2BvzRP0%3D&amp;Expires=1363808957&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Panel_Directions_for_Packaging.mp4?Signature=eQptpaf3Gdv4Upvxsm4x9%2BvzRP0%3D&amp;Expires=1363808957&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ePFWp3oSfyU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/ePFWp3oSfyU/hqdefault.jpg"></media:thumbnail></item><item><title>A resume-based WSGI Load Balancer</title><link>http://www.pyvideo.org/video/654/a-resume-based-wsgi-load-balancer</link><description>&lt;p&gt;Abstract&lt;/p&gt;
When a web application is large, it's a good idea to send different kinds of
requests to different servers to reduce the content corpus managed by each
server. A decentralized load balancing-based approach is presented in which
each application server keeps track of what it's good at and presents its
resume to load balancers, which use application server resumes to distribute
load.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JIm Fulton</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/654/a-resume-based-wsgi-load-balancer</guid><enclosure url="https://www.youtube.com/watch?v=tYW52SLy_w0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/tYW52SLy_w0/hqdefault.jpg"></media:thumbnail></item><item><title>Deploying Applications with zc.buildout</title><link>http://www.pyvideo.org/video/426/pycon-2011--deploying-applications-with-zc-buildo</link><description>&lt;p&gt;Description&lt;/p&gt;
Deploying Applications with zc.buildout

Presented by JIm Fulton

This talk described using zc.buildout for application deployment to production
environments. It presents building self-contained source releases, and using
these to create RPM distributions. It shows how to use buildout to configure
services, including web servers, cron jobs, monitoring and so on. Finally, it
presents ongoing efforts to deploy applications that span many machines.

Abstract

We build and deploy large Python applications for our customers. These
applications are built from many component parts including Python packages and
non-python applications and tools. Assembling these pieces can be a tedious
and error-prone process. The zc.buildout (Buildout) package was developed to
automate this process.

As our use of buildout has matured, we've integrated it with system packaging
tools and developed techniques for managing software deployemnt and service
configuration. I'll provide a detailed description of the techniques and tools
used.

Outline:

  * Buildout 
    * Motivation 
    * History 
    * Configuration files 
    * Recipes 
  * Deployment pholisophy: keeping software and service configuration separate 
  * System Packaging 
    * Making self-contained source releases (tar balls) 
    * Creating system packages from source releases with RPM 
  * Service configuration -- system build outs 
    * Scope: Python processes, cron, log rotation, run scripts, monitoring, etc. 
    * Place files in "standard" locations. 
    * Run by root 
    * examples 
  * Meta recipes 
    * Goal: provide only essential information. 
    * Recipes provide basic level of abstraction. 
    * Buildout provides basic tools to build on these abstractions, but these tools only scale so far. 
    * Buildout configuration language is *not* a programming language. 
    * Meta-recipes provide a much more powerful way to build high-level abstractions over basic recipes. 
  * Next step: Make me a ... 
    * Model based definition of complete systems spanning multiple hosts with interlocking services 
    * Automatic management of resources 
    * Implemented with ssh, system packaging tools (e.g. yum) and buildout-based tools. 
    * Four levels of abstraction 
    * Current status 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JIm Fulton</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/426/pycon-2011--deploying-applications-with-zc-buildo</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2011/426_deploying-applications-with-zc-buildout.mp4" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PyCon2011DeployingApplicationsWithZcbuildout710.png"></media:thumbnail></item></channel></rss>