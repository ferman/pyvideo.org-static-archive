<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Jonathan Frederic</title><link>http://www.pyvideo.org/speaker/1270/jonathan-frederic/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1270/jonathan-frederic/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 09 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Fundamentals of the IPython Display Architecture+Interactive Widgets</title><link>http://www.pyvideo.org/video/2743/fundamentals-of-the-ipython-display-architecture</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this tutorial, attendees will learn how to use the IPython Notebook’s display architecture and interactive widgets. As we cover these topics, attendees will learn about the underlying architecture, how to use IPython’s existing APIs, and how to extend them for their own purposes. This tutorial will not cover the basics of the IPython Notebook.

&lt;p&gt;Description&lt;/p&gt;
IPython provides an architecture for interactive computing. The IPython Notebook is a web-based interactive computing environment for exploratory and reproducible computing. With the IPython Notebook, users create documents, called notebooks, that contain formatted text, figures, equations, programming code, and code output.

The IPython Notebook generalizes the notion of output to include images, LaTeX, video, HTML, JavaScript, PDF, etc. These output formats are displayed in the Notebook using IPython’s display architecture, embedded in notebook documents and rendered on the IPython Notebook Viewer. By taking advantage of these rich output formats users can build notebooks that include rich representations and visualizations of data and other content. In this tutorial, we will describe the display architecture, existing Python APIs and libraries that already use it (mpld3, vincent, polotly, etc.), and how users can define custom display logic for their own Python objects.

As of version 2.0, the IPython Notebook also includes interactive JavaScript widgets.  These widgets provide a way for users to interact with UI controls in the browser that are tied to Python code in running in the kernel. We will begin by covering the highest-level API for these widgets, “interact,” which automatically builds a user interface for exploring a Python function. Next we will describe the lower-level widget objects that are included with IPython: sliders, text boxes, buttons, etc. However, the full potential of the widget framework lies with its extensibility.  Users can create their own custom widgets using Python, JavaScript, HTML and CSS. We will conclude with a detailed look at custom widget creation.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Granger,Jonathan Frederic</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2743/fundamentals-of-the-ipython-display-architecture</guid><enclosure url="http://www.youtube.com/watch?v=aIXED26Wppg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/aIXED26Wppg/hqdefault.jpg"></media:thumbnail></item></channel></rss>