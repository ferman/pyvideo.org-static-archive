<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of C. Titus Brown</title><link>http://www.pyvideo.org/speaker/190/c--titus-brown/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/190/c--titus-brown/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 11 Apr 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>How to interpret your own genome using (mostly) Python.</title><link>http://www.pyvideo.org/video/3489/how-to-interpret-your-own-genome-using-mostly-p</link><description>&lt;p&gt;Description&lt;/p&gt;
Weâ€™ve entered the era of the $1000 human genome, and soon it will be straightforward to get your own genome sequenced by a commercial company.  But what does the data mean? What information can you get out of your genomic sequence? And what are the barriers to deeper analysis?  What kinds of algorithms and databases are used in genomic analysis? All this, and more, will be revealed in this talk.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3489/how-to-interpret-your-own-genome-using-mostly-p</guid><enclosure url="https://www.youtube.com/watch?v=jV4YMQHZmMk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/jV4YMQHZmMk/hqdefault.jpg"></media:thumbnail></item><item><title>Data intensive biology in the cloud: instrumenting ALL the things</title><link>http://www.pyvideo.org/video/2697/data-intensive-biology-in-the-cloud-instrumentin</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Cloud computing offers some great opportunities for science, but most cloud computing platforms are I/O and memory limited, and hence are poor matches for data-intensive computing. After 4 years of research software development we are now instrumenting and benchmarking our analysis pipelines; numbers, lessons learned, and future plans will be discussed. Everything is open source.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2697/data-intensive-biology-in-the-cloud-instrumentin</guid><enclosure url="http://www.youtube.com/watch?v=RCRbfKK57X8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/RCRbfKK57X8/hqdefault.jpg"></media:thumbnail></item><item><title>Awesome Big Data Algorithms</title><link>http://www.pyvideo.org/video/1781/awesome-big-data-algorithms</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Random algorithms and probabilistic data structures are algorithmically efficient and can provide shockingly good practical results.  I will give a practical introduction, with live demos and bad jokes, to this fascinating algorithmic niche.  I will conclude with some discussions of how our group has applied this to large sequencing data sets (although this will not be the focus of the talk).</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1781/awesome-big-data-algorithms</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Awesome_Big_Data_Algorithms.mp4?Signature=v0TDlABlH2SJ7pIuTjnAovX8S%2F0%3D&amp;Expires=1363670524&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Awesome_Big_Data_Algorithms.mp4?Signature=v0TDlABlH2SJ7pIuTjnAovX8S%2F0%3D&amp;Expires=1363670524&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=jKBwGlYb13w" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/jKBwGlYb13w/hqdefault.jpg"></media:thumbnail></item><item><title>Handling ridiculous amounts of data with probabilistic data structures</title><link>http://www.pyvideo.org/video/402/pycon-2011--handling-ridiculous-amounts-of-data-w</link><description>&lt;p&gt;Description&lt;/p&gt;
Handling ridiculous amounts of data with probabilistic data structures

Presented by C. Titus Brown

Part of my job as a scientist involves playing with rather large amounts of
data (200 gb+). In doing so we stumbled across some neat CS techniques that
scale well, and are easy to understand and trivial to implement. These
techniques allow us to make some or many types of data analysis map-reducable.
I'll talk about interesting implementation details, fun science, and neat
computer science.

Abstract

If an extreme talk, I will talk about interesting details/issues in:

  1. Python as the backbone for a non-SciPy scientific software package: using Python as a frontend to C++ code, esp for parallelization and testing purposes. 
  2. Implementing probabilistic data structures with one-sided error as pre-filters for data retrieval and analysis, in ways that are generally useful. 
  3. Efficiently breaking down certain types of sparse graph problems using these probabilistic data structures, so that large graphs can be analyzed straightforwardly. This will be applied to plagiarism detection and/or duplicate code detection. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/402/pycon-2011--handling-ridiculous-amounts-of-data-w</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2011/402_handling-ridiculous-amounts-of-data-with-probabilistic-data-structures.mp4" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PyCon2011HandlingRidiculousAmountsOfDataWithProbabilisti974.png"></media:thumbnail></item><item><title>How to sell Python</title><link>http://www.pyvideo.org/video/378/pycon-2011--how-to-sell-python</link><description>&lt;p&gt;Description&lt;/p&gt;
How to sell Python

Presented by Daniel Greenfeld , C. Titus Brown , Dan Mesh , Chris Shenton ,
Rich Leland , Frank Wiles

A lot of people want to use Python, but their customer, management, school,
government, or organization won't let them. Python is a great tool, but it can
be challenging to get in the door. This panel will explore how companies and
individuals have successfully introduced Python, what tools are available to
sell Python, and what pitfalls there are to avoid.

Abstract

A lot of people want to use Python, but their customer, management, school,
government, or organization won't let them. Python is a great tool, but it can
be challenging to get in the door. This panel will explore how companies and
individuals have successfully introduced Python, what tools are available to
sell Python, and what pitfalls there are to avoid.

Possible questions will include:

  * What is a good example success story you can share? 
  * What pitfalls should you avoid? 
  * How do you deal with organizations that have already spent bucketloads of money on a piss-poor technology stack, are hurting for it, but can't seem to let go? 
  * How do you fight Fear-Uncertainty-Doubt (FUD) spread by people who stand to lose from introducing Python? 
  * What tools are available to help sell Python? 

Five panelists will be chosen from a broad spectrum of individuals including
academic, government, for-profit organizations, and non-profit organizations.

Speakers:

  * Academia: C. Titus Brown 
  * Goverment: Chris Shenton of Koansys/NASA 
  * Large Commercial Organization: Dan Mesh of Evite 
  * Small Commercial Organization: Frank Wiles of RevSys 
  * Non-Profit Organization: Rich Leland of National Geographic 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Shenton,C. Titus Brown,Daniel Greenfeld,Dan Mesh,Frank Wiles,Rich Leland</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/378/pycon-2011--how-to-sell-python</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2011/378_how-to-sell-python.mp4" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PyCon2011HowToSellPython286.png"></media:thumbnail></item><item><title>Why not run all your tests all the time? A study of continuous integration systems (#160)</title><link>http://www.pyvideo.org/video/326/pycon-2010--why-not-run-all-your-tests-all-the-ti</link><description>&lt;p&gt;Description&lt;/p&gt;
Why not run all your tests at all the time? A study of continuous integration
systems

  
Presented by Dr. C. Titus Brown (Michigan State University)

  
There are an increasing number of continuous integration (CI) systems
available for use by Pythonistas, but no clear guide to how to choose a CI
system for your project. I will examine the architecture choices made by
buildbot, bitten, Hudson, continuum, CruiseControl, DART, and pony-build, and
discuss the configuration and customization of several of these systems for
Pythonic needs, as well as give short demos (for buildbot, bitten, Hudson, and
pony-build).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Fri, 19 Feb 2010 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/326/pycon-2010--why-not-run-all-your-tests-all-the-ti</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2010/326_why-not-run-all-your-tests-all-the-time-a-study-of-continuous-integration-systems-160.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PyCon2010WhyNotRunAllYourTestsAllTheTimeAStudyOfCon964.png"></media:thumbnail></item></channel></rss>