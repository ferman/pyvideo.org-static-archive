<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Thomas Ballinger</title><link>http://www.pyvideo.org/speaker/1759/thomas-ballinger/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1759/thomas-ballinger/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 15 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Terminal Whispering</title><link>http://www.pyvideo.org/video/3759/terminal-whispering-0</link><description>&lt;p&gt;Description&lt;/p&gt;
The terminal emulators we run so many of our programming tools in are more powerful than we remember to give them credit for, and the key to that power is understanding the interface. This talk will cover terminal colors and styles, writing to arbitrary portions of the screen, handling signals from the terminal, determining the terminal's dimensions and scrollback buffer behavior.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sat, 15 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3759/terminal-whispering-0</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pygotham-2015/3759_Terminal_Whispering.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pygotham-2015/3759_Terminal_Whispering.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/rSnMoClPH2E" mime_type="video/flv"></media:content></media:group><media:thumbnail url="https://i.ytimg.com/vi/rSnMoClPH2E/hqdefault.jpg"></media:thumbnail></item><item><title>REPL-driven development</title><link>http://www.pyvideo.org/video/3705/repl-driven-development</link><description>&lt;p&gt;Description&lt;/p&gt;
You know the Read-Evaluate-Print-Loop you get when you type python, ipython or bpython? You should spend more time in it!
This talk describes development workflows using a REPL and their associated pitfalls. IPython and bpython features useful for writing, testing, debugging and using code will
be sprinkled throughout.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sun, 02 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3705/repl-driven-development</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pyohio-2015/3705_REPLdriven_development.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pyohio-2015/3705_REPLdriven_development.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/EwI-e3WlTew" mime_type="video/flv"></media:content></media:group><media:thumbnail url="https://i.ytimg.com/vi/EwI-e3WlTew/hqdefault.jpg"></media:thumbnail></item><item><title>Terminal whispering</title><link>http://www.pyvideo.org/video/3455/terminal-whispering</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you ever wanted to add a status bar to your command line program?
Or maybe color the output a bit? Or do you want to write a fullscreen terminal application like ls, top, vim, or emacs? Then you need to speak a bit of terminal! This talk describes how to talk to your terminal from scratch and goes on to show why Python libraries Blessings and Urwid are so awesome.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3455/terminal-whispering</guid><enclosure url="https://www.youtube.com/watch?v=WAitSilLDUA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/WAitSilLDUA/hqdefault.jpg"></media:thumbnail></item></channel></rss>