<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Dan Crosta</title><link>http://www.pyvideo.org/speaker/725/dan-crosta/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/725/dan-crosta/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 11 Apr 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Good Test, Bad Test</title><link>http://www.pyvideo.org/video/3448/good-test-bad-test</link><description>&lt;p&gt;Description&lt;/p&gt;
In a highly dynamic language like Python, testing is even more critical than in compiled or more static languages. Like any other code we produce, tests can be either good or bad. This talk explores three fallacies of testing, and the mistakes and bad habits these fallacies encourage; and shows how to write good tests which help assure proper behavior without impeding development progress.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3448/good-test-bad-test</guid><enclosure url="https://www.youtube.com/watch?v=RfR_QRoNZxo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/RfR_QRoNZxo/hqdefault.jpg"></media:thumbnail></item><item><title>Performance Testing and Profiling: A Virtuous Cycle</title><link>http://www.pyvideo.org/video/2643/performance-testing-and-profiling-a-virtuous-cyc</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Donald Knuth famously said that we should avoid optimization 97% of the time and focus on the "critical 3%". How can we identify that 3%? How can we best focus our optimization efforts, and avoid the "root of all evil" that is premature optimization? This talk introduces key types of performance testing, and demonstrates how they can be paired with profiling techniques in a cycle of improvement.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2643/performance-testing-and-profiling-a-virtuous-cyc</guid><enclosure url="http://www.youtube.com/watch?v=TX1sg8wzk1I" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/TX1sg8wzk1I/hqdefault.jpg"></media:thumbnail></item><item><title>Exploring Python Code Objects</title><link>http://www.pyvideo.org/video/1372/exploring-python-code-objects</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python is an interpreted language, right? Wrong! In this talk, dive deep into
Python bytecode, and learn what actually happens in everyone's favorite Python
program, 'print "Hello world"'. Learn to use the compile() and exec statement,
understand what your Python code is doing with the dis and compiler modules,
and discover new ways to explore and enjoy Python at a low level.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1372/exploring-python-code-objects</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Exploring_Python_Code_Objects.mp4?Signature=y2iaUtEQLiqc%2FfzEO5cBHIxgbqk%3D&amp;Expires=1346606955&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Exploring_Python_Code_Objects.mp4?Signature=y2iaUtEQLiqc%2FfzEO5cBHIxgbqk%3D&amp;Expires=1346606955&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=uO7kLb5rVTM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/uO7kLb5rVTM/hqdefault.jpg"></media:thumbnail></item></channel></rss>