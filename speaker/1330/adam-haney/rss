<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Adam Haney</title><link>http://www.pyvideo.org/speaker/1330/adam-haney/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1330/adam-haney/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 27 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Digging into Abstract Syntax Trees for analyzing and modifying Python programs</title><link>http://www.pyvideo.org/video/2838/digging-into-abstract-syntax-trees-for-analyzing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will explain how the python interpreter uses the ast module to turn the code you write into Abstract Syntax Trees which are then executed. With an understanding of these underlying techniques we'll examine static analysis tools such as pyflakes and talk about how to create programs that analyze the structure of python scripts.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Haney</dc:creator><pubDate>Sun, 27 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2838/digging-into-abstract-syntax-trees-for-analyzing</guid><enclosure url="http://964bdd2f965bbc4ca8f5-3ebaa0e988d98119a4fead51a26da83a.r42.cf2.rackcdn.com/pyohio-2014/2838_Digging_into_Abstract_Syntax_Trees_for_analyzing_a.webm" length="None" type="video/webm"></enclosure><media:group><media:content url="http://964bdd2f965bbc4ca8f5-3ebaa0e988d98119a4fead51a26da83a.r42.cf2.rackcdn.com/pyohio-2014/2838_Digging_into_Abstract_Syntax_Trees_for_analyzing_a.webm" mime_type="video/webm"></media:content><media:content url="http://youtu.be/wyJZBwY6EEo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/wyJZBwY6EEo/hqdefault.jpg"></media:thumbnail></item></channel></rss>