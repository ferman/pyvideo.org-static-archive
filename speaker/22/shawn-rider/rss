<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Shawn Rider</title><link>http://www.pyvideo.org/speaker/22/shawn-rider/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/22/shawn-rider/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 11 Mar 2016 12:26:32 -0000</lastBuildDate><ttl>500</ttl><item><title>Massaging the Pony: Message Queues and You</title><link>http://www.pyvideo.org/video/39/djangocon-2010--massaging-the-pony--message-queue</link><description>&lt;p&gt;Description&lt;/p&gt;
Massaging the Pony: Message Queues and You

Presented by Shawn Rider

Message queues are a potential solution for any site that needs to facilitate
robust asynchronous operations on your website including carrying out
intensive or long-running actions or synchronizing off-site services. We will
look at how PBS has used Celery and RabbitMQ to provide more reliable service
and how to set up a robust message queue solution in a cloud hosting
environment.

Abstract

In maintaining several different site projects written in Django over the past
four years, the PBS Education team repeatedly found the need for the ability
to create asynchronous processes that could handle long-running actions and
mission-critical synchronization. We needed a way to handle tasks such as
generating reports on large data sets and executing remote processes on fussy
third-party services. The clear solution to the problems we encountered was to
implement a robust message queue solution.

Message queues allow sites to execute processes outside the normal HTTP
request cycle and then deliver the results of those processes in a variety of
ways. After a survey of all available message queue solutions we settled on a
combination of Celery and RabbitMQ to create a reliable, always-available
system that can handle mission-critical tasks. We can easily develop against a
message queue in our development builds, and we have an infrastucture based in
a cloud hosting service that allows us to rely on the message queue without
reservation.

In this talk will will look at what a message queue does for your site, how to
implement a message queue in your Django code, and how to set up a reliable
message queue infrastructure on your servers. We will show examples from some
of our sites at PBS so it is clear how message queues work and to present some
common use cases that warrant a message queue solution. We will also discuss
some of the design patterns that made it easy to switch to message queue based
processing for discreet tasks, as well as some of the things we learned that
have made the solution even easier to implement for new tasks.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shawn Rider</dc:creator><guid>http://www.pyvideo.org/video/39/djangocon-2010--massaging-the-pony--message-queue</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/djangocon-2010/39_massaging-the-pony-message-queues-and-you.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Robertlofthouse-MassagingThePonyMessageQueuesAndYou879.png"></media:thumbnail></item><item><title>Teaching an Old Pony New Tricks: Maintaining and Updating an Aging Django Project</title><link>http://www.pyvideo.org/video/65/djangocon-2010--teaching-an-old-pony-new-tricks--</link><description>&lt;p&gt;Description&lt;/p&gt;
Teaching an Old Pony New Tricks: Maintaining and Updating an Aging Django
Project

Presented by Shawn Rider

PBS began development on its first Django project in 2006 using Django 0.96.
PBS TeacherLine launched in 2007 and continues to run today. This talk will
discuss the process for designing the PBS TeacherLine codebase, how new
advanced features were added over the years, and pitfalls you can avoid when
planning projects for longevity and easy maintenance.

Abstract

PBS chose Django after seeing a presentation by Jacob Kaplan-Moss and Adrian
Holovaty at OSCON 2006. That Fall, PBS Education began work on a new version
of the PBS TeacherLine website. The site most users see when they visit PBS
TeacherLine is essentially a brochure and catalog that allows educators to
purchase seats in online professional development courses. However, behind the
scenes is an administrative infrastructure that allows over 50 PBS stations
and PBS national staff members to administrate hundreds of course sections and
over ten thousand learners every year. There are robust features for
accounting, reporting, student and staff management just to name a few.

The TeacherLine website was initially written using Django 0.96. The site is
currently running Django 1.2 and has had major upgrades made to some of the
core systems including the implementation of a robust message queue solution
to handle the most intense administrative functions. Over the past four years,
the PBS Education Technology Team has learned many lessons about system
design, best practices, handling upgrades, and creating Django-based code that
is flexible and easy to maintain.

In this discussion we will look at some of the more interesting points in the
history of PBS TeacherLine, including design patterns, workarounds that were
eventually made obsolete by improvements in the Django framework, and the
process of iteratively improving functionality and features. We will discuss
successes and failures, including the pitfalls we avoided and (perhaps more
interestingly) those we did not.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shawn Rider</dc:creator><guid>http://www.pyvideo.org/video/65/djangocon-2010--teaching-an-old-pony-new-tricks--</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/djangocon-2010/65_teaching-an-old-pony-new-tricks-maintaining-and-updating-an-aging-django-project.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Robertlofthouse-TeachingAnOldPonyNewTricksMaintainingAndUpdatingAnAgin531-41.jpg"></media:thumbnail></item></channel></rss>