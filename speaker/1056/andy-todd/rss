<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Andy Todd</title><link>http://www.pyvideo.org/speaker/1056/andy-todd/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1056/andy-todd/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 06 Jul 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Why I use py.test and maybe you should too</title><link>http://www.pyvideo.org/video/2231/why-i-use-pytest-and-maybe-you-should-too</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Have you tried unit testing? Always meant to add tests to your project but didn't know where to start? This presentation will provide a gentle introduction to unit testing your module, package or entire project.

The standard library comes with the unit test module but a great alternative is py.test. Py.test makes starting to test your project as easy as possible. When you need them it has a full set of tools and testing capabilities. 

This presentation will provide an overview of unit testing and then show how easy it is to get started using py.test.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Todd</dc:creator><pubDate>Sat, 06 Jul 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2231/why-i-use-pytest-and-maybe-you-should-too</guid><enclosure url="http://s3.us.archive.org/ndvpyconau2013/Why_I_use_pytest_and_maybe_you.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/ndvpyconau2013/Why_I_use_pytest_and_maybe_you.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=P-AhpukDIik" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/P-AhpukDIik/hqdefault.jpg"></media:thumbnail></item></channel></rss>