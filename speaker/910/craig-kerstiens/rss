<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Craig Kerstiens</title><link>http://www.pyvideo.org/speaker/910/craig-kerstiens/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/910/craig-kerstiens/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 13 Apr 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Postgres Performance for Humans</title><link>http://www.pyvideo.org/video/2641/postgres-performance-for-humans</link><description>&lt;p&gt;Abstract&lt;/p&gt;
To many developers the database is a black box. You expect to be able to put data into your database, have it to stay there, and get it out when you query it... hopefully in a performant manner. When its not performant enough the two options are usually add some indexes or throw some hardware at it. We'll walk through a bit of a clearer guide of how you can understand and manage DB performance.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Craig Kerstiens</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2641/postgres-performance-for-humans</guid><enclosure url="http://www.youtube.com/watch?v=MpH8W5hce9I" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/MpH8W5hce9I/hqdefault.jpg"></media:thumbnail></item></channel></rss>