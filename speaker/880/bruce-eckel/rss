<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Bruce Eckel</title><link>http://www.pyvideo.org/speaker/880/bruce-eckel/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/880/bruce-eckel/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 15 Mar 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Rethinking Errors: Learning from Scala and Go</title><link>http://www.pyvideo.org/video/1683/rethinking-errors-learning-from-scala-and-go</link><description>&lt;p&gt;Abstract&lt;/p&gt;
C++ brought exceptions to mainstream programming; Java goes further with checked exceptions. But are exceptions the one way to report all errors? Scala and Go suggest there is more than one kind of error, so there should be more than one kind of error reporting, and different responses to errors. Iâ€™ll show the Scala and Go approaches to the error problem, and how to apply this to Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Eckel</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1683/rethinking-errors-learning-from-scala-and-go</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Rethinking_Errors_Learning_fro.mp4?Signature=EZ6mdwaJjmmcnW2B12FIOph62pI%3D&amp;Expires=1364767018&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Rethinking_Errors_Learning_fro.mp4?Signature=EZ6mdwaJjmmcnW2B12FIOph62pI%3D&amp;Expires=1364767018&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=REOL1AV_PCg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/REOL1AV_PCg/hqdefault.jpg"></media:thumbnail></item></channel></rss>