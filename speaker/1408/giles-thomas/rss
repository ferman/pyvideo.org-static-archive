<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Giles Thomas</title><link>http://www.pyvideo.org/speaker/1408/giles-thomas/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1408/giles-thomas/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Wed, 23 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>An HTTP request's journey through a platform-as-a-service</title><link>http://www.pyvideo.org/video/2994/an-http-requests-journey-through-a-platform-as-a</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PythonAnywhere hosts tens of thousands of Python web applications, with traffic ranging from a couple of hits a week to dozens of hits a second.  Hosting this many sites reliably at a reasonable cost requires a well-designed infrastructure, but it uses the same standard components as many other Python-based websites.  We've built our stack on GNU/Linux, nginx, uWSGI, Redis, and Lua -- all managed with Python.  In this talk we'll give a high-level overview of how it all works, by tracing how a request goes from the browser to the Python application and its response goes back again.  As well as showing how a fairly large deployment works, we'll give tips on scaling and share a few insights that may help people running smaller sites discover how they can speed things up.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giles Thomas</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2994/an-http-requests-journey-through-a-platform-as-a</guid><enclosure url="http://www.youtube.com/watch?v=ZRCjfSIVMNA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/ZRCjfSIVMNA/hqdefault.jpg"></media:thumbnail></item></channel></rss>