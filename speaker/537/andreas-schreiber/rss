<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Andreas Schreiber</title><link>http://www.pyvideo.org/speaker/537/andreas-schreiber/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/537/andreas-schreiber/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 26 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Quantified Self: Analyzing the Big Data of our Daily Life</title><link>http://www.pyvideo.org/video/3077/quantified-self-analyzing-the-big-data-of-our-da</link><description>&lt;p&gt;Description&lt;/p&gt;
Applications for self tracking that collect, analyze, or publish personal and medical data are getting more popular. This includes either a broad variety of medical and healthcare apps in the fields of telemedicine, remote care, treatment, or interaction with patients, and a huge increasing number of self tracking apps that aims to acquire data form from people’s daily life. The Quantified Self movement goes far beyond collecting or generating medical data. It aims in gathering data of all kinds of activities, habits, or relations that could help to understand and improve one’s behavior, health, or well-being. Both, health apps as well as Quantified Self apps use either just the smartphone as data source (e.g., questionnaires, manual data input, smartphone sensors) or external devices and sensors such as ‘classical’ medical devices (e.g,. blood pressure meters) or wearable devices (e.g., wristbands or eye glasses). The data can be used to get insights into the medical condition or one’s personal life and behavior. This talk will provide an overview of the various data sources and data formats that are relevant for self tracking as well as strategies and examples for analyzing that data with Python. The talk will cover:

Accessing local and distributed sources for the heterogeneous Quantified Self data. That includes local data files generated by smartphone apps and web applications as well as data stored on cloud resources via APIs (e.g., data that is stored by vendors of self tracking hardware or data of social media channels, weather data, traffic data etc.)

Homogenizing the data. Especially, covering typical problems of heterogeneous Quantified Self data, such as missing data or different and non-standard data formatting.

Analyzing and visualizing the data. Depending on the questions one has, the data can be analyzed with statistical methods or correlations. For example, to get insight into one's personal physical activities, steps data form activity trackers can be correlated to location data and weather information. The talk covers how to conduct this and other data analysis tasks with tools such as pandas and how to visualize the results.

The examples in this talk will be shown as interactive IPython sessions.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3077/quantified-self-analyzing-the-big-data-of-our-da</guid><enclosure url="http://video.ep14.c3voc.de/20231.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://video.ep14.c3voc.de/20231.mp4" mime_type="video/mp4"></media:content><media:content url="http://www.youtube.com/watch?v=tSyQ36Zbkc0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/tSyQ36Zbkc0/hqdefault.jpg"></media:thumbnail></item><item><title>Die Dinge im Internet der Dinge mit Python verbinden...</title><link>http://www.pyvideo.org/video/2418/die-dinge-im-internet-der-dinge-mit-python-verbin</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Das Internet der Dinge besteht aus kleinen, manchmal intelligenten, Geräten und Sensoren, die über das Internet verbunden sind. Typische Sensoren sind Wettermessgeräte oder medizinische Geräte. Das Internet der Dinge wird nun bald real da sein, was durch günstige kleine Einplatinencomputer wie Raspberry Pi oder Arduino mit beeinflusst wird. Allerdings haben diese Geräte nicht viel Rechenleistung. Außerdem sind sie in machen Umgebungen auch nur mit eingeschränkter Netzwerkbandbreite angebunden. Um nun (viele) solche Geräte zu verbinden und Daten austauschen zu lassen sind sehr leichtgewichtige Protokolle und Implementierungen notwendig.

Der Vortrag ist über das Protokoll [Message Queuing Telemetry Transport](http://mqtt.org/) (MQTT), ein sehr geeignetes Protokoll zum Verbinden kleiner Geräte und Sensoren. MQTT basiert auf einer Publish/Subscribe-Architektur. Es eignet sich gut zum Schicken von Daten von Sensoren zu anderen Geräten. Zum Beispiel lassen sich Temperaturmesswerte von einem Temperaturfühler ohne viel Overhead zu einem Server schicken oder zu einem Smartphone als Push-Nachricht übermitteln. Ein andere Anwendung von MQTT sind Chat-Systeme, z.B. ist das [Facebook-Messaging](https://www.facebook.com/messages/) auf Basis von MQTT implementiert.

In dem Vortrag geht es vor allem um Open-Source-Implementierungen von MQTT. Speziell wird der freie MQTT-Broker [Mosquitto](http://mosquitto.org/) und dessen Python-Client-Bibliothek vorgestellt. Mosquitto ist eine leichtgewichtige Implementierung die effizient auf günstigen Einplatinenrechnern oder Smartphones läuft. An ein paar Bespielen in Python wird im Vortrag verdeutlicht wie leicht sich Anwendungen auf Basis von MQTT realisieren lassen: Die Übertragung von Temperaturmesswerten per Raspberry Pi zu einem Server, das Senden von Push-Nachrichten zu Android-Smartphones und das Senden von Smartphones aus einer Kivy-App heraus.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Thu, 17 Oct 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2418/die-dinge-im-internet-der-dinge-mit-python-verbin</guid><enclosure url="https://www.youtube.com/watch?v=TM7lO_B-BPw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/TM7lO_B-BPw/hqdefault.jpg"></media:thumbnail></item><item><title>Grundlagen des Open-Source-Lizenzrechts</title><link>http://www.pyvideo.org/video/1426/grundlagen-des-open-source-lizenzrechts</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Ein kompakter Überblick über die rechtlichen Aspekte von Open-Source-Software.
Neben den rechtlichen Grundlagen werden die wesentlichen Eigenschaften von
Open-Source-Lizenzen vorgestellt. Außerdem werden einige verbreitete Lizenzen
detaillierter erläutert.

Inhalt:

- Rechtliche Grundlagen: Urheberrecht und Lizenzrecht

- Open-Source-Software: Lizenzarten von Software, Definition Open-Source-Software, Open-Source-Lizenzmodelle, Copyleft vs. Non-Copyleft

- Ausgewählte Open-Source-Lizenzen: Apache License, GPL, AGPL, LGPL, BSD License, Eclipse Public License, ...

- Praktische Nutzung von Open-Source-Software: Lizenzkompatibilität, Nutzung von Open-Source-Software in eigenen Programmen, Auswahl einer Open-Source-Lizenz für eigene Programme

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Tue, 30 Oct 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1426/grundlagen-des-open-source-lizenzrechts</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyconde/pyconde2012/Vortrag_Grundlagen_des_OpenSourceLizenzrechts.mp4?Signature=VQ2PgoX3gzgtMQSG3rvef%2BH4ujM%3D&amp;Expires=1351778443&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyconde/pyconde2012/Vortrag_Grundlagen_des_OpenSourceLizenzrechts.mp4?Signature=VQ2PgoX3gzgtMQSG3rvef%2BH4ujM%3D&amp;Expires=1351778443&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=lzs7fc8Xe8U" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/lzs7fc8Xe8U/hqdefault.jpg"></media:thumbnail></item><item><title>Programming mobile apps with python</title><link>http://www.pyvideo.org/video/1331/programming-mobile-apps-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2012] Andreas Schreiber - 3 JULY 2012 in "Track Tagliatelle"


&lt;p&gt;Description&lt;/p&gt;
Apps for smartphones and tablet PCs are getting the most relevant kind of
software. The numbers of apps in app markets for Android, iOS and Windows
Phone simply explodes. Unfortunately, almost none of them are developed with
Python which is a bit of shame. This talk covers the various mobile platforms
and explains current solutions for programming apps with Python. It shows
todays problems as well as possibilities, so that every listener can decide
whether Python is already ready for his mobile app project.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Wed, 04 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1331/programming-mobile-apps-with-python</guid><enclosure url="http://www.youtube.com/watch?v=S8Y1eN-34eY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/S8Y1eN-34eY/hqdefault.jpg"></media:thumbnail></item><item><title>Ein eigener "SourceForge" mit Allura</title><link>http://www.pyvideo.org/video/2917/ein-eigener-sourceforge-mit-allura</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Allura ist die Implementierung eines Software-Forge, d.h. einer Web-Plattform zum gemeinschaftlichen Entwickeln von Software. Im Vortrag wird die Architektur von Allura vorgestellt und die Installation zum Betrieb eigener Software-Forges beschrieben. Anhand eines Beispiels wird erläutert, wie Allura an die eigene Firma oder Organisation angepasst werden kann.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Fri, 07 Oct 2011 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2917/ein-eigener-sourceforge-mit-allura</guid><enclosure url="http://www.youtube.com/watch?v=6YbBmqUnoQM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/6YbBmqUnoQM/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Informatik für die Welt von Morgen</title><link>http://www.pyvideo.org/video/2910/keynote-informatik-fur-die-welt-von-morgen</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In ingenieurwissenschaftlichen Forschungseinrichtungen werden in vielen Bereichen Technologien für unsere Welt von Morgen entwickelt. Beispielsweise im DLR für Mobilität auf der Erde, in der Luft und im Weltraum und für den Erhalt unserer Umwelt. Informatik spielt dabei eine wichtige Rolle.  Dabei ist wichtig, dass Informatik und spezielle Softwaretechnologie die Arbeit der Ingenieure effektiv unterstützen und voranbringen, ohne sie in ihrer wissenschaftlichen Freiheit und Kreativität zu behindern.  Dies erreicht man durch benutzbare, einfach zugängliche und nahtlos in die existierende Arbeitsumgebung integrierbare Softwaretechnologien. Beispielsweise problem-spezifische Benutzeroberflächen, leicht zu erlernende Programmiersprachen oder übersichtliche High-Level-APIs für Anwendungen und Bibliotheken. Als eine Standardsprache im wissenschaftlichen Bereich findet insbesondere Python immer größere Verbreitung. Zusammen mit leistungsfähigen Bibliotheken wie NumPy, wird Python zunehmend ein Ersatz für etablierte ingenieurwissenschaftliche Standardtools wie MATLAB.  Damit kann man bereits viele Aufgaben bewältigen. Im Vortrag werden dazu Beispiele für einen erfolgreichen Einsatz von Python gezeigt, zum Beispiel High-Perfomance-Computing-Anwendugen. Zusätzlich aber auch die existierenden Lücken und Schwächen angesprochen.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Fri, 07 Oct 2011 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2910/keynote-informatik-fur-die-welt-von-morgen</guid><enclosure url="http://www.youtube.com/watch?v=EtDb3A14BJM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/EtDb3A14BJM/hqdefault.jpg"></media:thumbnail></item><item><title>Python for High Performance and Scientific Computing</title><link>http://www.pyvideo.org/video/1107/python-for-high-performance-and-scientific-comput</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2011] Andreas Schreiber - 23 June 2011 in "Track Lasagne"


&lt;p&gt;Description&lt;/p&gt;
Python is an accepted high-level scripting language with a growing community
in academia and industry. It is used in a lot of scientific applications in
many different scientific fields and in more and more industries, for example,
in engineering or life science). In all fields, the use of Python for high-
performance and parallel computing is increasing. Several organizations and
companies are providing tools or support for Python development. This includes
libraries for scientific computing, parallel computing, and MPI. Python is
also used on many core architectures and GPUs, for which specific Python
interpreters are being developed. A related topic is the performance of the
various interpreter and compiler implementations for Python. The talk gives an
overview of Python’s use in HPC and Scientific Computing and gives information
on many topics, such as Python on massively parallel systems, GPU programming
with Python, scientific libraries in Python, and Python interpreter
performance issues. The talk will include examples for scientific codes and
applications from many domains.

[Slides](http://bit.ly/k94rC4)

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Schreiber</dc:creator><pubDate>Wed, 13 Jul 2011 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1107/python-for-high-performance-and-scientific-comput</guid><enclosure url="http://www.youtube.com/watch?v=q3hAFI8iaqg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/q3hAFI8iaqg/hqdefault.jpg"></media:thumbnail></item></channel></rss>