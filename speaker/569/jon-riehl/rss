<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Jon Riehl</title><link>http://www.pyvideo.org/speaker/569/jon-riehl/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/569/jon-riehl/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 13 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Scientific Knowledge Management with Web of Trails</title><link>http://www.pyvideo.org/video/2808/scientific-knowledge-management-with-web-of-trail</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Do you hate repeating yourself?  Want to know when your publication is repeating someone else?  The Web of Trails project is a solution to knowledge management that empowers users to quickly find repetition of key phrases.  Using syntactic indexing, as opposed to lexical techniques, this approach is capable of representing the literature using less space while providing high value results.
&lt;p&gt;Description&lt;/p&gt;
Web of Trails (WOT) is an open source project that uses context-free grammars (CFG's) as the basic building block for search. Current search technology relies upon the presence of words on a page, sometimes augmented with statistical correlations among words. Even with these restrictions, maintenance of an index requires storage much greater than the input size (a polynomial function of it). CFG's have been used for decades in compilation and language tools, and more recently in data compression.

The primary advantage of this CFG approach, based upon the Sequitur algorithm, is that it indexes content in linear-space, not polynomial-space. The secondary advantage is that combined with research in inference, grammars can express human concepts and connections rather than just correlations. This project uses grammar and syntactic analysis to replace lexical and word-based approaches to the problem of searching collections of digital artifacts. Benchmarking in web content indexing will be shown relative to popular alternatives such Apache Lucene and Amazon Cloud Search.

In addition to implementing content indexing with Sequitur, this project will enable domain-specific extensions of WOT. Once complete, we will research novel techniques for generalizing the grammars inferred by Sequitur. As this fundamental research develops, it will inform later framework development and increase search precision. This is a big leap in the state of the art, as text artifacts are no longer represented as bags of words, but as bags on non-terminals in a growing and adapting grammar.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Riehl</dc:creator><pubDate>Sun, 13 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2808/scientific-knowledge-management-with-web-of-trail</guid><enclosure url="http://www.youtube.com/watch?v=oEkKxHQb8iA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/oEkKxHQb8iA/hqdefault.jpg"></media:thumbnail></item><item><title>Numba Python bytecode to LLVM translator</title><link>http://www.pyvideo.org/video/1194/numba-python-bytecode-to-llvm-translator</link><description>&lt;p&gt;Description&lt;/p&gt;
Numba is a Python bytecode to LLVM translator that allows creation of fast,
machine code from Python functions. The Low Level Virtual Machine (LLVM)
project is rapidly becoming a hardware-industry standard for the intermediate
representation (IR) of compiled codes. Numba's high-level translator to the
LLVM IR provides Python the ability to take advantage of the machine code
generated by the hardware manufacturers contributions to LLVM. Numba
translates a Python function comprised of a subset of Python syntax to machine
code using simple type inference and the creation of multiple machine-code
versions. In this talk, I will describe the design of Numba, illustrate its
applications to multiple domains and discuss the enhancements to NumPy and
SciPy that can benefit from this tool.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Riehl,Travis Oliphant</dc:creator><pubDate>Wed, 18 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1194/numba-python-bytecode-to-llvm-translator</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/Numba_Python_bytecode_to_LLVM_translator.mp4?Signature=%2BcA8gDrQZWjn5rWICbp4KcUZpyk%3D&amp;Expires=1346379038&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/enthought/scipy_2012/Numba_Python_bytecode_to_LLVM_translator.mp4?Signature=%2BcA8gDrQZWjn5rWICbp4KcUZpyk%3D&amp;Expires=1346379038&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="http://youtube.com/watch?v=WYi1cymszqY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/WYi1cymszqY/hqdefault.jpg"></media:thumbnail></item></channel></rss>