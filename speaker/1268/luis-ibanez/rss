<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Luis Ibanez</title><link>http://www.pyvideo.org/speaker/1268/luis-ibanez/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1268/luis-ibanez/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Mon, 14 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>SimpletITK: Advanced Image Analysis for Python</title><link>http://www.pyvideo.org/video/2763/simpletitk-advanced-image-analysis-for-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
SimpleITK brings advanced image analysis capabilities to Python. In particular, it provides support for 2D/3D and multi-components images with physical. SimpleITK exposes a large collection of image processing filters from ITK, including image segmentation and registration. SimpleITK is freely available as an open source package under the Apache 2.0 License.
&lt;p&gt;Description&lt;/p&gt;
SimpleITK provides scientific image analysis, processing, segmentation and registration for biomedical, microscopy and other scientific fields by supporting multi-dimensional images with physical locations [1]. It's is a layer build upon the Insight Segmentation and Registration Toolkit (ITK) [2].

While there are many Python packages to process 2D photographic images, scientific image analysis adds additional requirements.  Images encountered in these domains often have anisotropic pixel spacing, or spatial orientations, and calculations are best performed in physical space as opposed to pixel space. 

SimpleITK brings to Python a plethora of capabilities for performing image analysis. Although SimpleITK was developed by the biomedical imaging community, it is also used for generic image processing. It differentiates from OpenCV in offering 3D images and multi-component images, and it differentiates from scipy by offering the abstraction of image classes and their associated data structures. This applies to images modalities such as CT scans, MRI, fMRI, ultrasound, and in microscopy modalities such as confocal, SEM, TEM, and traditional bright and dark field.

Among the key functionalities supported by SimpleITK are over 260 advanced image filtering and segmentation algorithms as well as access to scientific image file formats, including specialized formats such as DICOM, Nifti, NRRD, VTK and other formats that preserve 3D metadata. Example algorithms include Level Sets Segmentation including multi-phase, Label Maps, Region Growing, Statistical Classification, Advanced Thresholding, Geometrical Transformations, Deconvolution, Anti-Aliasing, Edge Detection, Mathematical Morphology on both labels and grayscale images and Fourier Analysis [4,5]. 

SimpleITK is an open source project with an active community, that builds upon the large amount of image analysis experience of the ITK community [3] working in biomedical images analysis since 1999, and that continues to grow year by year, aggregating state of the art algorithms .

SimpleITK development is sponsored by the US National Library of Medicine.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bradley Lowekamp,Luis Ibanez,Matthew McCormick</dc:creator><pubDate>Mon, 14 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2763/simpletitk-advanced-image-analysis-for-python</guid><enclosure url="http://www.youtube.com/watch?v=1cX3DQ5w6F0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/1cX3DQ5w6F0/hqdefault.jpg"></media:thumbnail></item><item><title>Reproducible Science: Walking the Walk Part 1</title><link>http://www.pyvideo.org/video/2742/reproducible-science-walking-the-walk-part-1</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will train reproducible research warriors on the practices and tools that make experimental verification possible with an end-to-end data analysis workflow.  The tutorial will expose attendees to open science methods during data gathering, storage, analysis up to publication into a reproducible article.  Attendees are expected to have basic familiarity with scientific Python and Git.
&lt;p&gt;Description&lt;/p&gt;
The tutorial will cover four hours with the following topics


* Introduction (10min)
   * History of scientific societies and publications
      * Leeuwenhoek was the Man !
      * The Invisible College 
      * Nullius in Verba
* Replication of the early microscope experiments by Leeuwenhoek[a][b]
   * Image Acquisition (15 min)
      * Hands on: Cell camera phone microscope 
         * With drop of water
      * Hands on: Each pair acquires images
   * Data Sharing (45min)
      * Image gathering, storage, and sharing (15min)
         * GitHub (www.github.com)
         * Figshare (www.figshare.com)
         * Midas (www.midasplatform.com) 
         * Hands on: Upload the images
      * Metadata Identifiers (15 min)
         * Citable
         * Machine Readable
         * Hands on: Create data citation and machine readable metadata
      * Hands on: Download data via RESTful API (15min)
         * Provenance and 
         * Python scripts
         * Hands on: Download the data via HTTP
   * Break (10min)
   * Local processing (60min)
      * Replication Enablement (20min)
         * Package versioning
         * Virtual Machines
         * Docker
         * Cloud services
         * Hands on: 
            * Create a virtualenv
            * Run our tutorial package verification script
      * Revision Control with Git (20min)
         * Keeping track of changes
         * Unique hashes
         * Hands on:
            * Forking a repository in GitHub
            * Cloning a repository
            * Creating a branch
            * Making a commit
            * Pushing a branch
            * Diffing
            * Merging 
            * Pushing again        
            * Create pull request
      * Python scripts (20min)
         * Data analysis, particle counting.
         * Hands on:
            * Run scripts on new data
            * Generate histogram for the data
   * Testing (30min)
      * Unit testing with known data
      * Regression testing with known data
      * Hands on: 
         * Run tests
         * Add coverage for another method to the unit tests
   * Break (10min)
   * Publication Tools (30min)
      * Article generation 
      * RST to HTML
      * GitHub replication and sharing
      * Hands on: 
         * Run dexy to generate the document
   * Reproducibility Verification (30min)
      * Reproducing Works
      * Publication of Positive and Negative results
      * Hands on:
         * Create Open Science Framework (OSF) project
         * Connect Figshare and Github to OSF project
         * Fork or link another group’s project in the OSF to run dexy on their work


Infrastructure:

Attendees will use software installed in their laptops to gather and  process data, then publish and share a reproducible report.

They will access repositories in GitHub, upload data to a repository and publish materials necessary to replicate their data analysis.

We expect that wireless network will be have moderate bandwidth to allow all attendees to move data, source code and publications between their laptops and hosting servers.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aashish Chaudhary,Ana Nelson,Arfon Smith,Jean-Christophe Fillion-Robin,Luis Ibanez,Matthew McCormick</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2742/reproducible-science-walking-the-walk-part-1</guid><enclosure url="http://www.youtube.com/watch?v=EzX7MN_bzqg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/EzX7MN_bzqg/hqdefault.jpg"></media:thumbnail></item><item><title>Reproducible Science: Walking the Walk Part 2</title><link>http://www.pyvideo.org/video/2737/reproducible-science-walking-the-walk-part-2</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will train reproducible research warriors on the practices and tools that make experimental verification possible with an end-to-end data analysis workflow.  The tutorial will expose attendees to open science methods during data gathering, storage, analysis up to publication into a reproducible article.  Attendees are expected to have basic familiarity with scientific Python and Git.
&lt;p&gt;Description&lt;/p&gt;
The tutorial will cover four hours with the following topics


* Introduction (10min)
   * History of scientific societies and publications
      * Leeuwenhoek was the Man !
      * The Invisible College 
      * Nullius in Verba
* Replication of the early microscope experiments by Leeuwenhoek[a][b]
   * Image Acquisition (15 min)
      * Hands on: Cell camera phone microscope 
         * With drop of water
      * Hands on: Each pair acquires images
   * Data Sharing (45min)
      * Image gathering, storage, and sharing (15min)
         * GitHub (www.github.com)
         * Figshare (www.figshare.com)
         * Midas (www.midasplatform.com) 
         * Hands on: Upload the images
      * Metadata Identifiers (15 min)
         * Citable
         * Machine Readable
         * Hands on: Create data citation and machine readable metadata
      * Hands on: Download data via RESTful API (15min)
         * Provenance and 
         * Python scripts
         * Hands on: Download the data via HTTP
   * Break (10min)
   * Local processing (60min)
      * Replication Enablement (20min)
         * Package versioning
         * Virtual Machines
         * Docker
         * Cloud services
         * Hands on: 
            * Create a virtualenv
            * Run our tutorial package verification script
      * Revision Control with Git (20min)
         * Keeping track of changes
         * Unique hashes
         * Hands on:
            * Forking a repository in GitHub
            * Cloning a repository
            * Creating a branch
            * Making a commit
            * Pushing a branch
            * Diffing
            * Merging 
            * Pushing again        
            * Create pull request
      * Python scripts (20min)
         * Data analysis, particle counting.
         * Hands on:
            * Run scripts on new data
            * Generate histogram for the data
   * Testing (30min)
      * Unit testing with known data
      * Regression testing with known data
      * Hands on: 
         * Run tests
         * Add coverage for another method to the unit tests
   * Break (10min)
   * Publication Tools (30min)
      * Article generation 
      * RST to HTML
      * GitHub replication and sharing
      * Hands on: 
         * Run dexy to generate the document
   * Reproducibility Verification (30min)
      * Reproducing Works
      * Publication of Positive and Negative results
      * Hands on:
         * Create Open Science Framework (OSF) project
         * Connect Figshare and Github to OSF project
         * Fork or link another group’s project in the OSF to run dexy on their work


Infrastructure:

Attendees will use software installed in their laptops to gather and  process data, then publish and share a reproducible report.

They will access repositories in GitHub, upload data to a repository and publish materials necessary to replicate their data analysis.

We expect that wireless network will be have moderate bandwidth to allow all attendees to move data, source code and publications between their laptops and hosting servers.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aashish Chaudhary,Ana Nelson,Arfon Smith,Jean-Christophe Fillion-Robin,Luis Ibanez,Matthew McCormick</dc:creator><pubDate>Wed, 09 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2737/reproducible-science-walking-the-walk-part-2</guid><enclosure url="http://www.youtube.com/watch?v=HCyHn_by3N0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/HCyHn_by3N0/hqdefault.jpg"></media:thumbnail></item></channel></rss>