<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Luke Lee</title><link>http://www.pyvideo.org/speaker/918/luke-lee/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/918/luke-lee/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 05 Oct 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>How to write dumber tests</title><link>http://www.pyvideo.org/video/3200/how-to-write-dumber-tests</link><description>&lt;p&gt;Description&lt;/p&gt;
Writing and debugging code is hard, but testing shouldn't be.  This talk will discuss common techniques for writing simpler tests that still exercise your production code while preventing you from spending time debugging test code.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Lee</dc:creator><pubDate>Sun, 05 Oct 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3200/how-to-write-dumber-tests</guid><enclosure url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3200_How_to_write_dumber_tests.webm" length="None" type="video/webm"></enclosure><media:group><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3200_How_to_write_dumber_tests.webm" mime_type="video/webm"></media:content><media:content url="http://64966d3674e0a64d8f4a-47c94b14ef8e1f83d5390cdb0629c6ed.r53.cf2.rackcdn.com/pytexas-2014/3200_How_to_write_dumber_tests.mp4" mime_type="video/mp4"></media:content><media:content url="http://youtu.be/Xjv8ZwZf-h4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Xjv8ZwZf-h4/hqdefault.jpg"></media:thumbnail></item><item><title>Building full-stack scientific applications in Python</title><link>http://www.pyvideo.org/video/1751/building-full-stack-scientific-applications-in-py</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has a large collection of tools for scientific computing.  However,
finding the right pieces and assembling them into a fast and scale-able app can
be a daunting task.  This talk will explore common requirements of scientific
apps and how to fulfill those from the Python ecosystem.  It will also provide a
blueprint for building apps using tools like PyQt, PyQwt, numpy, and HDF5.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Lee</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1751/building-full-stack-scientific-applications-in-py</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_fullstack_scientific_.mp4?Signature=UiaN0L3QQMRfPIxd2pzo9KlV%2Fdg%3D&amp;Expires=1363809374&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_fullstack_scientific_.mp4?Signature=UiaN0L3QQMRfPIxd2pzo9KlV%2Fdg%3D&amp;Expires=1363809374&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=dQHPV6sVlls" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/dQHPV6sVlls/hqdefault.jpg"></media:thumbnail></item></channel></rss>