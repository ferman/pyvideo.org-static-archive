<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Jyrki Pulliainen</title><link>http://www.pyvideo.org/speaker/670/jyrki-pulliainen/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/670/jyrki-pulliainen/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Thu, 24 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Packaging in packaging: dh-virtualenv</title><link>http://www.pyvideo.org/video/2958/packaging-in-packaging-dh-virtualenv</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Deploying your software can become a tricky task, regardless of the
language. In the spirit of the Python conferences, every conference
needs at least one packaging talk.

This talk is about dh-virtualenv. It's a Python packaging tool aimed
for Debian-based systems and for deployment flows that already take
advantage of Debian packaging with Python virtualenvs
&lt;p&gt;Description&lt;/p&gt;
[Dh-virtualenv][1] is an open source tool developed at Spotify. We use it
to ease deploying our Python software to production. We built dh-virtualenv as a tool that fits our existing continuous integration flow with a dedicated sbuild server.
As we were already packaging software in Debian packages, the
aim of dh-virtualenv was to make transition to virtualenv based installations as smooth as possible.

This talk covers how you can use dh-virtualenv to help you deploy your
software to production, where you are already running a Debian-based system, such as Ubuntu, and what are the advantages and disadvantages of the approach over other existing and
popular techniques. We will discuss the deploying as a problem in
general, look into building a dh-vritualenv-backed package, and in the
end, look into how dh-virtualenv was actually made.

Goal is that after this presentation you know how to make your Debian/Ubuntu deployments easier!

[dh-virtualenv][1] if fully open sourced, production tested software,
licensed under GPLv2+ and available in Debian testing and unstable.

More information of it is also available in our [blogpost][2].


Talk outline:

1. Introduction &amp; overview (3min)
    * Who am I?
    * Why am I fiddling with Python packaging?
    * What do you get out of this talk?
2.  Different shortcomings of Python deployments (5min)
    * Native system packages
    * Virtualenv based installations
    * Containers, virtual machine images
3. dh-virtualenv (10 min)
    * What is dh-virtualenv?
    * Thought behind dh-virtualenv
    * Advantages over others
    * Requirements for your deployment flow
    * Short intro to packaging Sentry with dh-virtualenv
4. How is it built? (10 min)
    * Debian package building flow primer
    * How dh-virtualenv fits that flow
    * What does it do build time and why?

[1]:http://github.com/spotify/dh-virtualenv
[2]:http://labs.spotify.com/2013/10/10/packaging-in-your-packaging-dh-virtualenv/
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jyrki Pulliainen</dc:creator><pubDate>Thu, 24 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2958/packaging-in-packaging-dh-virtualenv</guid><enclosure url="http://www.youtube.com/watch?v=d_jqe1O31X8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/d_jqe1O31X8/hqdefault.jpg"></media:thumbnail></item><item><title>Spotify: Ask us anything</title><link>http://www.pyvideo.org/video/1291/spotify-ask-us-anything</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2012] Jyrki Pulliainen - 4 JULY 2012 in "Track Spaghetti"

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jyrki Pulliainen</dc:creator><pubDate>Thu, 05 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1291/spotify-ask-us-anything</guid><enclosure url="http://www.youtube.com/watch?v=G2MfIP7GT4M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/G2MfIP7GT4M/hqdefault.jpg"></media:thumbnail></item><item><title>Spotify, pipelining your music</title><link>http://www.pyvideo.org/video/1320/spotify-pipelining-your-music</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[EuroPython 2012] Jyrki Pulliainen - 3 JULY 2012 in "Track Spaghetti"


&lt;p&gt;Description&lt;/p&gt;
Spotify’s current catalog contains 15 million songs. Original storage of audio
and metadata is over 500 terabytes and we’re transcoding 500 000 new audio
streams a day. At it’s best the system can make an album playable just few
minutes after it’s delivery. This talk is about building the music pipeline,
all the way from the labels, who deliver music and metadata XML to our system,
to the clients. Problems here are the concurrency, massive amount of data,
enriching the metadata to provide better quality and to actually deliver 100
gigabytes of indexes daily.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jyrki Pulliainen</dc:creator><pubDate>Wed, 04 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1320/spotify-pipelining-your-music</guid><enclosure url="http://www.youtube.com/watch?v=OH4Q9db0xFw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/OH4Q9db0xFw/hqdefault.jpg"></media:thumbnail></item></channel></rss>