<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Amjith Ramanujam</title><link>http://www.pyvideo.org/speaker/737/amjith-ramanujam/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/737/amjith-ramanujam/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 13 Apr 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Introduction to Docker</title><link>http://www.pyvideo.org/video/2629/introduction-to-docker</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Docker is a tool for sandboxing entire application environments using Linux containers. Docker's feature set includes versioning, sharing etc. They are light-weight and fast, you can recreate a deployment environment in development or push your development containers to production. Imagine never having to worry about fragmentation of servers or syncing the versions of different libraries.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amjith Ramanujam</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2629/introduction-to-docker</guid><enclosure url="http://www.youtube.com/watch?v=9bvdc55xYdo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/9bvdc55xYdo/hqdefault.jpg"></media:thumbnail></item><item><title>Python Profiling</title><link>http://www.pyvideo.org/video/1770/python-profiling</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will give a tour of different profiling techniques available for Python applications. We'll cover specific modules in Python for doing function profiling and line level profiling. We'll show the short comings of such mechanisms in production and discuss how to do sampled profiling of specific functions. We'll finish with statistical profilers that use thread stack interrogation.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amjith Ramanujam</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1770/python-profiling</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Profiling.mp4?Signature=7dWpd488pit7wBeXv32RdMJYDAg%3D&amp;Expires=1363667329&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Profiling.mp4?Signature=7dWpd488pit7wBeXv32RdMJYDAg%3D&amp;Expires=1363667329&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=QJwVYlDzAXs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/QJwVYlDzAXs/hqdefault.jpg"></media:thumbnail></item><item><title>Debugging Live Python Web Applications</title><link>http://www.pyvideo.org/video/1395/debugging-live-python-web-applications</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Monitoring tools record the result of what happened to your web application
when a problem arises, but for some classes of problems, monitoring systems
are only a starting point. Sometimes it is necessary to take more intrusive
steps to plan for the unexpected by embedding mechanisms that will allow you
to interact with a live deployed web application and extract even more
detailed information.


&lt;p&gt;Description&lt;/p&gt;
This talk will go over some of the ways in which a monitoring system such as
New Relic can be used to focus in on where problems are arising in a Python
web application using a framework such as Django. It will also describe how
you can then use that information to drill down even further by applying
separate debugging tools and techniques rather than monitoring systems.
Debugging tools aren't generally associated with production systems however
and even mentioning them in relation to production systems often makes DevOps
people rather nervous.

The main purpose of the talk therefore is to look at a range of debugging
tools and techniques which can be applied to web applications but also
separate them into what might and might not be realistically used on live
production web applications. It will then describe the use of an embedded
interactive console port as a gateway into a live web application, how one may
setup a set of predefined commands that could be issued against a live web
application, or for the brave, how it could be used to fire up an embedded
Python interpreter prompt or pdb session.

Topics to be touched on would include:

  * Browser viewable error pages.
  * Browser based debuggers.
  * Python interactive debuggers.
  * Post-mortem exception analysis.
  * Methods for dumping Python stack traces
  * Methods for dumping C stack traces.
  * Methods for analyzing thread utilization.
  * Interactive process introspection tools.
  * Error reporting and logging services.
  * Performance monitoring services.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amjith Ramanujam</dc:creator><pubDate>Tue, 04 Sep 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1395/debugging-live-python-web-applications</guid><enclosure url="http://www.youtube.com/watch?v=YM4F6sSAu9k" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/YM4F6sSAu9k/hqdefault.jpg"></media:thumbnail></item></channel></rss>