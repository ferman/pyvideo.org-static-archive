<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Kenneth Love</title><link>http://www.pyvideo.org/speaker/738/kenneth-love/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/738/kenneth-love/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 11 Jul 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Give a Python a Pony</title><link>http://www.pyvideo.org/video/3660/give-a-python-a-pony</link><description>&lt;p&gt;Description&lt;/p&gt;
A couple of years ago, I was faced with one of the scariest situations there is for a self-employed developer: I was burned out. The blinking cursor in Vim was taunting me and no number of GitHub issues could motivate me to churn out more than a few lines of code in a day. This burnout, though, led me back to an early love: I started teaching full time.&lt;br/&gt;&lt;br/&gt;This is a talk in two parts. In part one, I’ll talk about some of the teaching triumphs I’ve had and witnessed thanks to a new career, the Python and Django worlds, and my employer, Treehouse (and others!). In the second part, I’ll share ways you can start teaching in your own communities and using your own talents, so we can all make the world better through learning.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Love</dc:creator><pubDate>Sat, 11 Jul 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3660/give-a-python-a-pony</guid><enclosure url="http://youtu.be/5k122tiMpFA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5k122tiMpFA/hqdefault.jpg"></media:thumbnail></item><item><title>Getting Started with Django, a crash course</title><link>http://www.pyvideo.org/video/2562/getting-started-with-django-a-crash-course</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Getting Started With Django is a well-established series of videos teaching best practices and common approaches for building web apps to people new to Django. This tutorial combines the first few lessons into a single lesson. Attendees will follow along as I start and build an entire simple web app and, network permitting, deploy it to Heroku.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Love</dc:creator><pubDate>Fri, 11 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2562/getting-started-with-django-a-crash-course</guid><enclosure url="http://www.youtube.com/watch?v=KZHXjGP71kQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/KZHXjGP71kQ/hqdefault.jpg"></media:thumbnail></item><item><title>Views can be Classy!</title><link>http://www.pyvideo.org/video/1397/views-can-be-classy</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An overview of what class-based views (CBVs) are, which ones are available,
and how to use them in your projects. I'll also cover creating mixins, where
function-based views still make sense, and how to test CBVs. As part of this,
I'll be covering my django-braces (https://crate.io/packages/django-braces/)
package.


&lt;p&gt;Description&lt;/p&gt;
It seems like most people in the Django community either don't have any idea
how class-based views work or are scared to try them out. I want to help with
a solid introduction to the technology.

  * The usual "who I am" bit.
  * Most other things in Django are classes.
  *     * models
  *     * forms
  *     * even templates
  * Views should be classes, too.
  * What view classes are provided by Django.
  * How to create your own mixins to clean up pain points
  * Where function-based views are still handy.
  * Example CBVs for common use cases
  *     * handling form input for more than one form
  *     * serving different content based on users

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Love</dc:creator><pubDate>Tue, 04 Sep 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1397/views-can-be-classy</guid><enclosure url="http://www.youtube.com/watch?v=yr9HOLipPXc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/yr9HOLipPXc/hqdefault.jpg"></media:thumbnail></item></channel></rss>