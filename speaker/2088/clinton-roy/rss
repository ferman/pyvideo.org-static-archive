<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Clinton Roy</title><link>http://www.pyvideo.org/speaker/2088/clinton-roy/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/2088/clinton-roy/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Tue, 04 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Lrparsing, when regular expressions aren't enough</title><link>http://www.pyvideo.org/video/3955/lrparsing-when-regular-expressions-arent-enough</link><description>&lt;p&gt;Description&lt;/p&gt;
Lrparsing is a fast, well documented and tested parsing infrastructure for Python. Parsing infrastructures are used when the input to be parsed is too complex to be done by regular expressions alone. Parsing infrastructures are ideally suited to parsing programming languages and configuration files. Lrparsing is roughly equivalent to the combination of Flex and Bison, except completely implemented in Python, and is thus very Pythonic.

The rest of the abstract uses the following Python snippet as an example:

1 if option else 2

lrparsing provides both a lexer (which breaks the input down into tokens, e.g.:

 ['1', 'if' , 'option',  'else', '2']

and a parser generator, which produces a concrete parse tree:

(«ternary», («bool», 'option'), («expr», '1')), («expr», '2')))

 Lrparsing provides Pythonic syntax support to easily construct parsers for programming languages, Domain Specific Languages and configuration file formats.

Lrparsing is very well suited to constructing Concrete Parse Trees but has little support for creating Abstract Syntax Trees (AST), which are much easier to use: My work has added Abstract Syntax Tree support to lrparsing, yielding exactly the same AST nodes that the Python AST module supports:

IfExp(condition, 1, 2)

This talk will give an overview of the major features of Lrparsing, then look at my work to add AST support. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clinton Roy</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3955/lrparsing-when-regular-expressions-arent-enough</guid><enclosure url="https://www.youtube.com/watch?v=9PQsCmOeYwU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/9PQsCmOeYwU/hqdefault.jpg"></media:thumbnail></item></channel></rss>