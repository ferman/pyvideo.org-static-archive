<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Graeme Cross</title><link>http://www.pyvideo.org/speaker/463/graeme-cross/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/463/graeme-cross/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Tue, 04 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Python for less than $7</title><link>http://www.pyvideo.org/video/3954/python-for-less-than-7</link><description>&lt;p&gt;Description&lt;/p&gt;
You can now run Python 3.4 on microcontrollers that cost less than a cup of coffee (in a up-market Parisian restaurant :)

MicroPython (http://www.micropython.org/) is a very active port of Python 3 to low-end microcontrollers with minimal RAM (eg. 192k RAM, yes: "k", as in kilobytes) but lots of useful I/O.

Learn how to set up a very cheap microcontroller with wifi and a range of I/O and then program it with MicroPython.

The live demos are guaranteed to fail in spectacular ways as all live demos do, but will hopefully show enough blinking lights to tempt you to leave your i7 hyperthreaded clusters and join the cute but very practical world of cheap, embedded Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graeme Cross</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3954/python-for-less-than-7</guid><enclosure url="https://www.youtube.com/watch?v=7BGAHFsnDXA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/7BGAHFsnDXA/hqdefault.jpg"></media:thumbnail></item><item><title>Modules 101: how to avoid spaghetti, big balls of mud and houses of straw!</title><link>http://www.pyvideo.org/video/2206/modules-101-how-to-avoid-spaghetti-big-balls-of</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This introductory tutorial will teach you how to effectively use modules and packages so your code is easier to read, test, package, deploy, reuse and maintain.

We will cover the basics of structuring your code with modules and packages, ways of using the import statement, how to document modules and packages, and a number of tips to ensure your code is less likely to end up a tangled mess that collapses when you need to modify or extend it.

This talk is compatible with Python 2 and 3.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graeme Cross</dc:creator><pubDate>Sat, 06 Jul 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2206/modules-101-how-to-avoid-spaghetti-big-balls-of</guid><enclosure url="http://s3.us.archive.org/ndvpyconau2013/Modules_101_how_to_avoid_spagh.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/ndvpyconau2013/Modules_101_how_to_avoid_spagh.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=72lahT9Umtg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/72lahT9Umtg/hqdefault.jpg"></media:thumbnail></item><item><title>Ah! I see you have the machine that goes "BING"!</title><link>http://www.pyvideo.org/video/993/ah-i-see-you-have-the-machine-that-goes-bing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Whirrr, buzz, squelch, click, smash, bing! Python is so much more than a
language for Web 2.0 and system administration: Python can also be used for
interfacing into the real world. Learn how to connect Python up to stepper
motors, micro-fluidic pumps, A/D sensors, switches, solenoids, vacuum/pressure
valves and XYZ robots, with simple off-the-shelf control hardware.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graeme Cross</dc:creator><pubDate>Mon, 22 Aug 2011 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/993/ah-i-see-you-have-the-machine-that-goes-bing</guid><enclosure url="http://www.youtube.com/watch?v=nzCvomTixzU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/nzCvomTixzU/hqdefault.jpg"></media:thumbnail></item></channel></rss>