<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Bruce Merry</title><link>http://www.pyvideo.org/speaker/2075/bruce-merry/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/2075/bruce-merry/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 02 Oct 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>How I learnt to stop worrying and love Boost.Python</title><link>http://www.pyvideo.org/video/3933/how-i-learnt-to-stop-worrying-and-love-boostpyth</link><description>&lt;p&gt;Description&lt;/p&gt;
The Zen of Python dictates that there should be one - and preferably only one - obvious way to do something. However, when it comes to interoperation with C and C++, there is a multitude of options: the Python C API, Boost.Python, ctypes, cffi, Cython. I will describe my quest to find the **holy grail**^W^W **right interface** for a high-performance networking library.

The talk is largely a case study in applying Boost.Python, and will look at some issues such as the Global Interpreter Lock, handling KeyboardInterrupt cleanly, and managing object lifetime. I will briefly mention some of the alternative tools to explain why I settled on Boost.Python. It is not a complete Boost.Python tutorial, but rather aims to give a sense of the flavour and show how it's used in a real application.

For obvious reasons, this talk will have a lot of C++ code in it, and some familiarity with C++ will be useful.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Merry</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3933/how-i-learnt-to-stop-worrying-and-love-boostpyth</guid><enclosure url="http://youtu.be/2urUj9NRqFc" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/2urUj9NRqFc/hqdefault.jpg"></media:thumbnail></item><item><title>Thursday Lightning Talks</title><link>http://www.pyvideo.org/video/3941/thursday-lightning-talks</link><description>&lt;p&gt;Description&lt;/p&gt;
* [(0:00:00)](http://youtu.be/DiaE9GCJ0nM?t=0h0m0s) **Racy interrupt handling** by Bruce Merry
* [(0:06:00)](http://youtu.be/DiaE9GCJ0nM?t=0h6m0s) **Vulture in Python** by Philip Sterne
* [(0:11:09)](http://youtu.be/DiaE9GCJ0nM?t=0h11m9s) **Edx** by Carl Dawson
* [(0:17:39)](http://youtu.be/DiaE9GCJ0nM?t=0h17m39s) **AST linting** by Bryn Divey
* [(0:24:33)](http://youtu.be/DiaE9GCJ0nM?t=0h24m33s) **Numpy in Anger! ** by Laura Richter
* [(0:29:28)](http://youtu.be/DiaE9GCJ0nM?t=0h29m28s) **How to screw up loading CSVs in Python ** by James Saunders
* [(0:33:34)](http://youtu.be/DiaE9GCJ0nM?t=0h33m34s) **PyQuery** by Nicholas Spagnoletti
* [(0:37:27)](http://youtu.be/DiaE9GCJ0nM?t=0h37m27s) **Debian Python moves kicking and screaming to Git** by Stefano Rivera</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Merry,Bryn Divey,Carl Dawson,James Saunders,Laura Richter,Nicholas Spagnoletti,Philip Sterne,Stefano Rivera</dc:creator><pubDate>Thu, 01 Oct 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3941/thursday-lightning-talks</guid><enclosure url="http://youtu.be/DiaE9GCJ0nM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/DiaE9GCJ0nM/hqdefault.jpg"></media:thumbnail></item></channel></rss>