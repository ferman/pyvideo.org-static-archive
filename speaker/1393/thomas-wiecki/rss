<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Thomas Wiecki</title><link>http://www.pyvideo.org/speaker/1393/thomas-wiecki/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1393/thomas-wiecki/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 26 Jul 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Algorithmic Trading with Zipline</title><link>http://www.pyvideo.org/video/3068/algorithmic-trading-with-zipline</link><description>&lt;p&gt;Description&lt;/p&gt;
PyData Berlin 2014 - Python is quickly becoming the glue language which holds together data science and related fields like quantitative finance. Zipline is a BSD-licensed quantitative trading system which allows easy backtesting of investment algorithms on historical data. The system is fundamentally event-driven and a close approximation of how live-trading systems operate. Moreover, Zipline comes "batteries included" as many common statistics like moving average and linear regression can be readily accessed from within a user-written algorithm. Input of historical data and output of performance statistics is based on Pandas DataFrames to integrate nicely into the existing Python eco-system. Furthermore, statistic and machine learning libraries like matplotlib, scipy, statsmodels, and sklearn integrate nicely to support development, analysis and visualization of state-of-the-art trading systems. Zipline is currently used in production as the backtesting engine powering Quantopian.com -- a free, community-centered platform that allows development and real-time backtesting of trading algorithms in the web browser.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Wiecki</dc:creator><pubDate>Sat, 26 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3068/algorithmic-trading-with-zipline</guid><enclosure url="http://video.ep14.c3voc.de/20250.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://video.ep14.c3voc.de/20250.mp4" mime_type="video/mp4"></media:content><media:content url="http://www.youtube.com/watch?v=Qva7uxmOZuA" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Qva7uxmOZuA/hqdefault.jpg"></media:thumbnail></item><item><title>Probabilistic Programming in Python</title><link>http://www.pyvideo.org/video/2967/probabilistic-programming-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Probabilistic Programming allows flexible specification of statistical models to gain insight from data. The high interpretability and ease by which different sources can be combined has huge value for Data Science. PyMC3 features next generation sampling algorithms, an intuitive model specification syntax, and just-in-time compilation for speed, to allow estimation of large-scale probabilistic models.
&lt;p&gt;Description&lt;/p&gt;
Probabilistic Programming allows flexible specification of statistical models to gain insight from data. Estimation of best fitting parameter values, as well as uncertainty in these estimations, can be automated by sampling algorithms like Markov chain Monte Carlo (MCMC). The high interpretability and flexibility of this approach has lead to a huge paradigm shift in scientific fields ranging from Cognitive Science to Data Science and Quantitative Finance.

PyMC3 is a new Python module that features next generation sampling algorithms and an intuitive model specification syntax. The whole code base is written in pure Python and Just-in-time compiled via Theano for speed.

In this talk I will provide an intuitive introduction to Bayesian statistics and how probabilistic models can be specified and estimated using PyMC3.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Wiecki</dc:creator><pubDate>Thu, 24 Jul 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2967/probabilistic-programming-in-python</guid><enclosure url="http://www.youtube.com/watch?v=WESld11iNcQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/WESld11iNcQ/hqdefault.jpg"></media:thumbnail></item></channel></rss>