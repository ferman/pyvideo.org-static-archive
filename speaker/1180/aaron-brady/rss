<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Aaron Brady</title><link>http://www.pyvideo.org/speaker/1180/aaron-brady/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/1180/aaron-brady/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Thu, 09 Jan 2014 00:00:00 -0600</lastBuildDate><ttl>500</ttl><item><title>Garbage Collection w/ Ref. Cycles</title><link>http://www.pyvideo.org/video/2555/garbage-collection-w-ref-cycles</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Reference counting is very useful but it has an odd problem.  We employ a technique from graphs to approach it.  The solution works but it's a bit slow.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Brady</dc:creator><pubDate>Thu, 09 Jan 2014 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/2555/garbage-collection-w-ref-cycles</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/chipy/2555_Garbage_Collection_w_Ref_Cycles.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/chipy/2555_Garbage_Collection_w_Ref_Cycles.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=VCeENPxyZJw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/VCeENPxyZJw/hqdefault.jpg"></media:thumbnail></item></channel></rss>