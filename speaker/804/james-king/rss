<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of James King</title><link>http://www.pyvideo.org/speaker/804/james-king/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/804/james-king/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sat, 12 Apr 2014 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Castle Anthrax: Dungeon Generation Techniques</title><link>http://www.pyvideo.org/video/2582/castle-anthrax-dungeon-generation-techniques</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Come and learn the techniques used for generating random dungeon-like levels for games. You don't have to know what Rogue is to enjoy this talk. Prepare yourself for a plethora of Monty Python references and we'll have some fun.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2582/castle-anthrax-dungeon-generation-techniques</guid><enclosure url="http://www.youtube.com/watch?v=DZl2ebl_Pnw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/DZl2ebl_Pnw/hqdefault.jpg"></media:thumbnail></item><item><title>Hy: A Lisp That Compiles to Python</title><link>http://www.pyvideo.org/video/2328/hy-a-lisp-that-compiles-to-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Hy is a Lisp that compiles to Python AST.  It has full interoperability with Python and macros!  This talk introduces Hy and will dig into the compiler and demonstrate how dynamically generating Python ASTs can be fun and useful.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sun, 11 Aug 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/2328/hy-a-lisp-that-compiles-to-python</guid><enclosure url="http://www.youtube.com/watch?v=n8i2f6X0SkU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i1.ytimg.com/vi/n8i2f6X0SkU/hqdefault.jpg"></media:thumbnail></item><item><title>Distributed Programming in Python: A Model for Strong, Eventual Consistency</title><link>http://www.pyvideo.org/video/1570/distributed-programming-in-python-a-model-for-st</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Starting with the theory behind eventual consistency we'll dive into a
practical toolkit, knockblock, for programming these types of systems.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James King</dc:creator><pubDate>Sat, 10 Nov 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/1570/distributed-programming-in-python-a-model-for-st</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyconca/pyconca2012/Distributed_Programming_in_Python_A_Model_for_Strong_Eventual_Consistency.mp4?Signature=LAsq6Ggq3gMJRed4C5IOwysLAw4%3D&amp;Expires=1352829160&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyconca/pyconca2012/Distributed_Programming_in_Python_A_Model_for_Strong_Eventual_Consistency.mp4?Signature=LAsq6Ggq3gMJRed4C5IOwysLAw4%3D&amp;Expires=1352829160&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=B1iAGfe6-UI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/B1iAGfe6-UI/hqdefault.jpg"></media:thumbnail></item></channel></rss>