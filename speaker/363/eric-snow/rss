<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Eric Snow</title><link>http://www.pyvideo.org/speaker/363/eric-snow/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/363/eric-snow/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 17 Mar 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Namespaces in Python</title><link>http://www.pyvideo.org/video/1749/namespaces-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In the infamous words of Tim Peters, "Namespaces are one honking great idea -- let's do more of those!" (PEP 20)  Python's type system is built on the basis of well-bounded namespaces.  Come look behind the curtain and you'll see Python in a whole new light.  We'll also talk about how to put this knowledge to use whenever you write modules, classes, and functions.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1749/namespaces-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Namespaces_in_Python.mp4?Signature=SayVC9MR98QOqoOJiN1l3Q3nyrE%3D&amp;Expires=1363822400&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Namespaces_in_Python.mp4?Signature=SayVC9MR98QOqoOJiN1l3Q3nyrE%3D&amp;Expires=1363822400&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=tApwHoxAEQI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/tApwHoxAEQI/hqdefault.jpg"></media:thumbnail></item><item><title>Getting the Most Out of Python Imports</title><link>http://www.pyvideo.org/video/671/getting-the-most-out-of-python-imports</link><description>&lt;p&gt;Abstract&lt;/p&gt;
To really take advantage of Python you must understand how imports work and
how to use them effectively. In this talk we'll discuss both of these. After a
short introduction to imports, we'll dive right in and look at how customizing
import behavior can make all your wildest dreams come true.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/671/getting-the-most-out-of-python-imports</guid><enclosure url="https://www.youtube.com/watch?v=kdZuUIj4lMo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/kdZuUIj4lMo/hqdefault.jpg"></media:thumbnail></item><item><title>Interfaces and Python</title><link>http://www.pyvideo.org/video/882/interfaces-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In 2.6, Python introduced the Abstract Base Classes. Before that we had
"protocols" (and we still do). In this talk we'll look at how the general
concept of interfaces fits into today's Python. We'll also look at some of the
alternate proposals of the past, some of the controversies around ABCs, and
the direction interfaces might go in the future.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/882/interfaces-and-python</guid><enclosure url="https://www.youtube.com/watch?v=4-TwdBuTR1A" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/4-TwdBuTR1A/hqdefault.jpg"></media:thumbnail></item></channel></rss>