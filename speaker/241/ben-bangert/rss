<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of Ben Bangert</title><link>http://www.pyvideo.org/speaker/241/ben-bangert/rss</link><description></description><atom:link href="http://www.pyvideo.org/speaker/241/ben-bangert/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 17 Mar 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Distributed Coordination with Python</title><link>http://www.pyvideo.org/video/1708/distributed-coordination-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Processes in a cluster can require controlled access to shared resources, tracking available processes, and sharing state. Unfortunately most tools in this category are oriented around Java. In this talk I cover how to use Python to interact with Apache Zookeeper -- a fault-tolerant consistent data-store -- to write coordinated distributed fault-tolerant applications in Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Bangert</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1708/distributed-coordination-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Distributed_Coordination_with_.mp4?Signature=J%2Bqr0P8RCHZlM%2FixEYDLHyoE9lE%3D&amp;Expires=1363824370&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Distributed_Coordination_with_.mp4?Signature=J%2Bqr0P8RCHZlM%2FixEYDLHyoE9lE%3D&amp;Expires=1363824370&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=v33PWLK_1HM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/v33PWLK_1HM/hqdefault.jpg"></media:thumbnail></item><item><title>Dispatch Magic</title><link>http://www.pyvideo.org/video/1696/dispatch-magic</link><description>&lt;p&gt;Abstract&lt;/p&gt;
One of the most common tasks in modern web frameworks is to ease the task of writing bits of code that are then called by the framework. Handling this task is the first major undertaking of any web framework, and the part that most web frameworks have in common.

How do frameworks locate this code? 
What basic patterns apply to all frameworks?
How does this make me be a better web programmer?</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Bangert</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1696/dispatch-magic</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dispatch_Magic.mp4?Signature=I1dRj2zCJ56E8xCaL3%2BN7gqpgU4%3D&amp;Expires=1363653930&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dispatch_Magic.mp4?Signature=I1dRj2zCJ56E8xCaL3%2BN7gqpgU4%3D&amp;Expires=1363653930&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=wcqlGPWFHpk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/wcqlGPWFHpk/hqdefault.jpg"></media:thumbnail></item><item><title>State of Pylons/TurboGears 2/repoze.bfg</title><link>http://www.pyvideo.org/video/446/pycon-2011--state-of-pylons-turbogears-2-repoze-b</link><description>&lt;p&gt;Description&lt;/p&gt;
State of Pylons/TurboGears 2/repoze.bfg

Presented by Chris McDonough, Ben Bangert, and Mark Ramm

A three-for-one talk by the main developers of three popular Python web
frameworks! We'll (very) briefly cover the state of each of our individual
frameworks and communities, and then we'll describe the results of our efforts
to work together and share code.

Abstract

Pylons is a popular, lightweight Python web framework.

TurboGears 2 is a full-stack framework built atop Pylons.

repoze.bfg is a moderately popular, lightweight Python web framework.

The main developers and community leaders of these frameworks have been
working together and sharing as much as possible over the course of roughly
the last year. We'll very briefly describe to the audience the states of our
individual efforts, then we'll discuss how we intend to move forward and share
more code and effort in the year to come. The talk will be more socially-
oriented than technical.

It's unusual for open source code and communities to bridge minor perceived
differences in scope and style and to start sharing code and ideas openly. If
you're a user of any of these frameworks, you'll want to be present for this
talk.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Bangert,Chris McDonough,Mark Ramm</dc:creator><pubDate>Fri, 11 Mar 2011 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/446/pycon-2011--state-of-pylons-turbogears-2-repoze-b</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2011/446_state-of-pylons-turbogears-2-repoze-bfg.mp4" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pycon-PyCon2011StateOfPylonsTurboGears2repozebfg818.png"></media:thumbnail></item></channel></rss>