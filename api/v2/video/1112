{"category": "EuroPython 2011", "language": "English", "slug": "python-103-mmmm-understanding-pythons-memor-0", "speakers": ["wesley chun"], "tags": ["debugging", "exceptions", "memory", "scripts"], "related_urls": [], "id": 1112, "state": 1, "title": "Python 103: Mmmm... Understanding Python's Memory Model, Mutability, and Methods", "summary": "[EuroPython 2011] wesley chun - 22 June 2011 in \"Track Lasagne\"\n\n", "description": "In Python 101, you learned basic Python syntax, what its flow control\nmechanisms and basic data types are and how they work. You learned how to\nwrite functions and developed executable Python scripts that actually work!\nYou probably also learned how to create files, how to open, read from or write\nto them, and close them. Perhaps you've even learned a little bit of object-\noriented programming, developed a couple of Python classes, most with user-\ndefined methods, and have no problems creating instances to use in your\napplications.\n\nIn Python 102 (or equivalent in experience), you explored further, using\ndefault values and variable arguments for functions, discovered how to catch\nexceptions and write handlers for them\u2026 perhaps you've even created your own\nexceptions. You have found some useful Python standard library modules and\nusing them actively in your own applications. You've quite comfortable with\nOOP, creating classes and using instances regularly in your programs. In fact,\nyou've been coding Python for 6 months to a couple of years now. You're much\nmore serious about Python now because you're no longer a \"beginner.\" You've\neven taken notice at the growing number of jobs requesting or requiring Python\nskills.\n\nAs an aspiring Python developer, you are starting to be more aware of the\nentire ecosystem around you, and think you may be ready for \"prime-time\" and\nfeel able to take on a full-time position as a Python programmer. However, if\nyou have experienced one or more of the below questions or problems, this talk\nmay be for you:\n\n  * Throughout this time, you've experienced strange bugs in your code. In particular, you notice that things don't always behave the way you expect and have spent a good amount of time debugging various parts of your software that you thought were actually correct - you work around them but are disturbed and don't have the time nor committment to fully investigate.\n\n  * You've created classes and objects just fine but wish that you could use some of Python's operators (like +, in, len(), etc.) with your objects, which feel like they're \"2nd-class\" citizens compared to the standard data types.\n\n  * Do you know what functional evaluation strategy means? Have you been asked or considered whether Python is \"call-by-value\" or \"call-by-reference\"? It is important to you, and can you clearly explain your answer?\n\n  * What does \"mutability\" mean? What is the difference between mutable and immutable objects? Which Python objects are mutable and which aren't?\n\n  * Can you clearly explain both the output in the two code snippets below, and even more importantly, _why_ the output is the way it is?\n\nSNIPPET A x = 42 y = x x += 1 print x print y\n\nSNIPPET B x = [1, 2, 3] y = x x[0] = 4 print x print y\n\n  * Have you seen odd behavior in container or collection objects like lists or dictionaries? For example, you may have copied those types of objects and discovered weird things happening to both the original and the copy, or that you seen something not quite right if you loop through it and remove items from it. \n\nThis is what Python 103 is for\u2026 to fill in all the missing gaps, to answer all\nthe questions (including those above) that do not seem to have easy-to-find\nanswers on Google, but only if you have the desire to learn more about the\ninterpreter to take your Python skills to the next level.\n\n", "quality_notes": "", "copyright_text": "Standard YouTube License", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/34LcNUrFe30?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/34LcNUrFe30?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i.ytimg.com/vi/34LcNUrFe30/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": null, "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": null, "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": null, "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": null, "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=34LcNUrFe30", "whiteboard": "", "recorded": "2011-07-13", "added": "2012-08-30T21:02:34", "updated": "2014-04-08T20:28:27.868"}