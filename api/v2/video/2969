{"category": "EuroPython 2014", "language": "English", "slug": "scikit-learn-to-learn-them-all", "speakers": ["Valerio Maggio"], "tags": [], "related_urls": [], "id": 2969, "state": 1, "title": "Scikit-learn to \"learn them all\"", "summary": "**Scikit-learn** is a powerful library, providing implementations for \r\nmany of the most popular machine learning algorithms. \r\nThis talk will provide an overview of the \"batteries\" included in \r\nScikit-learn, along with working code examples and internal insights, in order to \r\nget the best for our machine learning code.", "description": "**Machine Learning** is about *using the right features, to build the right \r\nmodels, to achieve the right tasks* [[Flach, 2012]][0]\r\nHowever, to come up with a definition of what actually means **right** for \r\nthe problem at the hand, it is required to analyse \r\nhuge amounts of data, and to evaluate the performance of different algorithms \r\non these data.\r\n\r\nHowever, deriving a working machine learning solution for a given problem \r\nis far from being a *waterfall* process. \r\nIt is an iterative process where continuous refinements are required for the \r\ndata to be used (i.e., the *right features*), and the algorithms to apply \r\n(i.e., the *right models*).\r\n\r\nIn this scenario, Python has been found very useful for practitioners and \r\nresearchers: its high-level nature, in combination with available tools and \r\nlibraries, allows to rapidly implement working machine learning code \r\nwithout *reinventing the wheel*.\r\n\r\n[**Scikit-learn**](http://scikit-learn.org/stable/) is an actively \r\ndeveloping Python library, built on top of the solid `numpy` and `scipy` \r\npackages.\r\n\r\nScikit-learn (`sklearn`) is an *all-in-one* software solution, providing \r\nimplementations for several machine learning methods, along with datasets and \r\n(performance) evaluation algorithms.\r\n\r\nThese \"batteries\" included in the library, in combination with a nice and intuitive\r\nsoftware API, have made scikit-learn to become one of the most popular Python \r\npackage to write machine learning code.\r\n\r\nIn this talk, a general overview of scikit-learn will be presented, along with \r\nbrief explanations of the techniques provided out-of-the-box by the library.\r\n\r\nThese explanations will be supported by working code examples, and insights on \r\nalgorithms' implementations aimed at providing hints on \r\nhow to extend the library code.\r\n\r\nMoreover, advantages and limitations of the `sklearn` package will be discussed \r\naccording to other existing machine learning Python libraries\r\n(e.g., [`shogun`](http://shogun-toolbox.org \"Shogun Toolbox\"), \r\n[`pyML`](http://pyml.sourceforge.net \"PyML\"), \r\n[`mlpy`](http://mlpy.sourceforge.net \"MLPy\")).\r\n\r\nIn conclusion, (examples of) applications of scikit-learn to big data and \r\ncomputational intensive tasks will be also presented.\r\n\r\nThe general outline of the talk is reported as follows (the order of the topics may vary):\r\n\r\n*   Intro to Machine Learning\r\n    *   Machine Learning in Python\r\n    *   Intro to Scikit-Learn\r\n*   Overview of Scikit-Learn\r\n    *   Comparison with other existing ML Python libraries\r\n*   Supervised Learning with `sklearn`\r\n    *   Text Classification with SVM and Kernel Methods\r\n*   Unsupervised Learning with `sklearn`\r\n    *   Partitional and Model-based Clustering (i.e., k-means and Mixture Models)\r\n*   Scaling up Machine Learning\r\n    *   Parallel and Large Scale ML with `sklearn`\r\n\r\nThe talk is intended for an intermediate level audience (i.e., Advanced).\r\nIt requires basic math skills and a good knowledge of the Python language.\r\n\r\nGood knowledge of the `numpy` and `scipy` packages is also a plus.\r\n\r\n[0]: http://goo.gl/BnhoHa \"Machine Learning: The Art and Science of Algorithms that Make Sense of Data, *Peter Flach, 2012*\"", "quality_notes": "", "copyright_text": "http://creativecommons.org/licenses/by/3.0/", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/zVPfVkC5qDk?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/zVPfVkC5qDk?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i.ytimg.com/vi/zVPfVkC5qDk/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": "", "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": "", "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": "", "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=zVPfVkC5qDk", "whiteboard": "", "recorded": "2014-07-24", "added": "2014-07-31T00:46:27.255", "updated": "2014-07-31T23:04:48.769"}