{"category": "SciPy 2013", "language": "English", "slug": "cython-speed-up-python-and-numpy-pythonize-c-c-9", "speakers": [], "tags": ["Tech"], "related_urls": [], "id": 2164, "state": 1, "title": "Cython: Speed up Python and NumPy, Pythonize C, C++, and Fortran, SciPy2013 Tutorial, Part 3 of 4", "summary": "Presenter: Kurt Smith\n\nDescription\nCython is a flexible and multi-faceted tool that brings down the barrier between Python and other languages. With cython, you can add type information to your Python code to yield dramatic performance improvements. Cython also allows you to wrap C, C++ and Fortran libraries to work with Python and NumPy. It is used extensively in research environments and in end-user applications.\n\nThis hands-on tutorial will cover Cython from the ground up, and will include the newest Cython features, including typed memoryviews.\n\nTarget audience:\n\nDevelopers, researchers, scientists, and engineers who use Python and NumPy and who routinely hit bottlenecks and need improved performance.\n\nC / C++ / Fortran users who would like their existing code to work with Python.\n\nExpected level of knowledge:\n\nIntermediate and / or regular user of Python and NumPy. Have used Python's decorators, exceptions, and classes. Knowledge of NumPy arrays, array views, fancy indexing, and NumPy dtypes. Have programmed in at least one of C, C++, or Fortran.\n\nSome familiarity with the Python or NumPy C-API a plus. Familiarity with memoryviews and buffers a plus. Familiarity with OpenMP a plus. Array-based inter-language programming between Python and C, C++, or Fortran a plus.\n\nRequired Packages\n\nAll necessary packages are available with an academic / full EPD installation, Anaconda, easy_install, or pip.\n\nUsers must have Cython v 0.16 or better for the course.\n\nThe tutorial material (slides, exercises & demos) will be available for download and on USB drives.\n\nDocumentation\n\nBasic slide content is based on Enthought's Cython training slides. These slides will be reworked significantly for this tutorial. In particular, the NumPy buffer declarations will be taken out and replaced with the typed memoryview content listed in the outline. Other content (an IPython notebook with the start of the capstone project) is available as well:\n\nhttp://public.enthought.com/~ksmith/scipy2013_cython/", "description": "", "quality_notes": "", "copyright_text": "http://www.youtube.com/t/terms", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/6ukI-NlIzqY?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/6ukI-NlIzqY?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i1.ytimg.com/vi/6ukI-NlIzqY/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": null, "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": null, "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": null, "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": null, "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=6ukI-NlIzqY", "whiteboard": "needs editing", "recorded": "2013-06-27", "added": "2013-07-04T10:09:05", "updated": "2014-04-08T20:28:26.465"}