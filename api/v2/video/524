{"category": "PyOhio 2011", "language": "English", "slug": "pyohio-2011-squinting-at-python-objects", "speakers": ["Brandon Rhodes"], "tags": ["descriptors", "getattr", "getattribute", "optimizing", "properties", "pyohio", "pyohio2011"], "related_urls": [], "id": 524, "state": 1, "title": "PyOhio 2011: Squinting at Python Objects", "summary": "", "description": "Squinting at Python Objects\n\nPresented by Brandon Craig Rhodes\n\nPython classes can gain attributes as if by magic. Thanks to properties,\ndescriptors, and (if all else fails) __getattr__() and __getattribute__(), the\nattempt to access obj.something can result in arbitrary code execution. If you\nare wondering how your Python program is using memory, this can result in a\nproblem: each time you look to see if something is there, it **is**, because\nit is pulled in dynamically the moment you look for it. In this talk, you will\nlearn how to prod Python objects gently, and hopefully learn their secrets -\nand their memory usage - without actually invoking code.\n\n", "quality_notes": "", "copyright_text": "Creative Commons Attribution 2.0", "embed": "", "thumbnail_url": "http://a.images.blip.tv/Pyohio-SquintingAtPythonObjects698.png", "duration": null, "video_ogv_length": 276597561, "video_ogv_url": null, "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/524_pyohio-2011-squinting-at-python-objects.m4v", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": "", "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": null, "video_flv_download_only": false, "source_url": "", "whiteboard": "", "recorded": null, "added": "2012-02-23T04:20:00", "updated": "2014-04-08T20:28:25.878"}