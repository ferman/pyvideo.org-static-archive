{"category": "EuroPython 2014", "language": "English", "slug": "statistics-101-for-system-administrators", "speakers": ["Roberto Polli"], "tags": ["Tech"], "related_urls": [], "id": 3040, "state": 1, "title": "Statistics 101 for System Administrators", "summary": "Python allows every sysadmin to run  (and learn) basic statistics on system data, replacing sed, awk, bc and gnuplot with an unique, reusable and interactive framework. The talk is a case study where python allowed us to highlight some network performance points in minutes using itertools, scipy and matplotlib. The presentation includes code snippets and a brief plot discussion.", "description": "#Statistics 101 for System Administrators\r\n\r\n## Agenda\r\n * A latency issue\r\n * Data distribution\r\n * 30 seconds correlation with pearsonr\r\n * Combinating data\r\n * Plotting and the power of color\r\n\r\n## An use case \r\n - Network latency issues\r\n - Correlate latency with other events \r\n    \r\n## First statistics \r\n - we created our parsing library \r\n - [using various recipes](http://chimera.labs.oreilly.com/books/1230000000393/ch06.html)\r\n - Having the data in a dict like\r\n\r\n        > table = {\r\n        >   'time': [ 1,2,3, ..],\r\n        >   'elapsed': [ 0.12, 12.43, ..],\r\n        >   'error': [ 2, 0, ..],\r\n        >   'size': [123,3223, ..],\r\n        >   'peers': [2313, 2303, ..],\r\n\r\n - It's easy to get max, min and standard deviation\r\n\r\n        > print [k, max(v), min(v), stats.mean(v) ] for k,v in table.items() ]\r\n\r\n## Distribution \r\n - A distribution shows event frequency \r\n\r\n        > from matplotlib import pyplot\r\n        > pyplot.hist(table['elapsed'])\r\n\r\n - Time and Size distributions\r\n\r\n## (Linear) Correlation \r\n - What's correlation\r\n - What's not correlation\r\n - pearsonr and probability\r\n - catch for linear correlation\r\n\r\n        > from scipy.stats.stats import pearsonr\r\n        > a, b = range(0,10), range(0,20, 2)\r\n        > c = [randint(0,10) for x in a]\r\n        > pearsonr(a, b), pearsonr(a,c)\r\n        > (1.0, 0.0), (0.43, 0.2)\r\n\r\n## Combinations \r\n - using itertools.combinations\r\n - netfishing correlation\r\n\r\n        >from itertools import combination\r\n        >for f1, f2 in combinations(table, 2):\r\n        >        r, p_value = pearsonr(table[f1], table[f2])\r\n        >        print(\"the correlation between %s and %s is: %s\" % (f1, f2, r))\r\n        >        print(\"the probability of a given distribution (see manual) is: %s\" % p_value)\r\n\r\n## Plot always \r\n\r\n - pearsonr finds *only* linear correlation\r\n - our eyes work better :P\r\n - so...plot always!\r\n - color is the 3d dimension of a plot!\r\n\r\n        > from pyplot import scatter, title, xlabel, ylabel, legend\r\n        > from pyplot import savefig, close as closefig\r\n        >\r\n        > for f1, f2 in combinations(table, 2):\r\n        >    scatter(table[f1], table[2], label=\"%s_%s\" % (f1,f2))\r\n        >    # add legend and other labels\r\n        >    r, p = pearsonr(table[f1], table[f2])\r\n        >    title(\"Correlation: %s v %s, %s\" % (f1, f2, r))\r\n        >    xlabel(f1), ylabel(f2)\r\n        >    legend(loc='upper left') # show the legend in a suitable corner\r\n        >    savefig(f1 + \"_\" + f2 + \".png\")\r\n        >    closefig()\r\n\r\n \r\n## Wrap Up! \r\n - do not use pearsonr to *exclude* relation between events\r\n - plots may serve better\r\n - scatter plot can show a system thruput and exclude correlation between fields A and fields B\r\n - continue collecting results\r\n \r\n\r\n", "quality_notes": "", "copyright_text": "http://creativecommons.org/licenses/by/3.0/", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/2oPevmFcZxI?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/2oPevmFcZxI?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i.ytimg.com/vi/2oPevmFcZxI/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": "", "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": "", "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": "", "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=2oPevmFcZxI", "whiteboard": "needs editing 22", "recorded": "2014-07-22", "added": "2014-07-31T00:46:35.232", "updated": "2014-08-02T11:36:44.898"}