{"category": "SciPy 2014", "language": "English", "slug": "a-python-framework-for-3d-gamma-ray-imaging", "speakers": ["Andrew Haefner", "Ross Barnowski"], "tags": [], "related_urls": [], "id": 2804, "state": 1, "title": "A Python Framework for 3D Gamma Ray Imaging", "summary": "A system capable of imaging gamma rays in 3D in near real time has been developed. A flexible software framework has been developed using Python to acquire, analyze, and finally visualize data from multiple sensors, including novel gamma ray imaging detectors and a Microsoft Kinect.", "description": "**Introduction and Motivation**\r\n\r\nGamma-rays are photons with energies typically thousands to millions of\r\ntimes greater than the energy of visible light photons. The vastly higher\r\nenergies of gamma-rays means that they interact differently with matter,\r\nnecessitating new sensors and imaging methods to localize gamma ray sources.\r\nMany sensors and imaging approaches have been developed to image gamma-rays\r\nin 2D, as in a conventional camera, with applications in astronomy, medical\r\nimaging, and nuclear security.  We have developed a mobile gamma-ray imaging\r\nsystem that merges data from both visual and gamma-ray imaging sensors to\r\ngenerate a visualization of the 3D gamma-ray distribution in real-time. This\r\ncreates 3D maps of the physical environment and correlates that with the\r\nobjects emitting gamma-rays. We have used Python to develop a flexible\r\nsoftware framework for acquiring data from the multiple sensors, analyzing\r\nand merging data streams, and finally visualizing the resulting 3D gamma-ray\r\nmaps. \r\n\r\n**Methods**\r\n\r\nThe system consists of a cart that contains a state-of-the art gamma-ray\r\nimaging system, called a Compton Imager, coupled with an RGB-D imaging\r\nsystem, a Microsoft Kinect. The software package has three main tasks:\r\ngamma-ray acquisition and processing, visual data processing, and finally\r\nthe merger of these two streams. The gamma-ray data processing pipeline\r\ninvolves many computationally intensive tasks, thus a threaded structure\r\nbuilt with multiprocessing forms the basis of the gamma-ray imaging\r\nframework. Furthermore, many other Pythonic tools have been used to meet our\r\nreal-time goal; including numexpr, cython, and even the Python/C API.\r\nSeveral GUI frontends, built with TraitsUI or PySide for example, are used\r\nto monitor and control how the acquired data is processed in real-time,\r\nwhile a suite of real-time diagnostics are displayed with matplotlib. The\r\nvisual pipeline is based on an open-source implementation of RGBDSLAM\r\n(http://wiki.ros.org/rgbdslam), which is built on the Robot Operating System\r\n(ROS) framework. Finally, these two data streams are sent to a laptop\r\ncomputer via pyzmq, where the final merger and imaging (by solving a\r\nstatistical inversion problem constrained by the visual data) is\r\naccomplished. The results are then displayed as they are produced by the\r\nimaging algorithm using mayavi.\r\n\r\n**Results**\r\n\r\nLink to Video: [Moving Cart 3D scene](https://www.dropbox.com/s/1w5yrqwepjcbpt1/Moving%20Cart%203D%20scene.mov)\r\n\r\nThis system has been used to demonstrate real-time volumetric gamma ray\r\nimaging for the first time [1]. The results from a typical run are shown in\r\nthe above video. The red line indicates the movement of the system through\r\nthe environment, while the blue arrows represent an aspect of the gamma-ray\r\ndata. The 3D point-cloud provided by RGBDSLAM appear incrementally as the\r\nsystem traverses the environment. In the end, the location of a small\r\ngamma-ray emitting source is correctly identified with the hotspot in the\r\nimage.\r\n\r\n[1] [https://www.nss-mic.org/2013/ConferenceRecord/Details.asp?PID=N25-4]\r\n", "quality_notes": "", "copyright_text": "http://www.youtube.com/t/terms", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/I_YpsekEhhg?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/I_YpsekEhhg?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i1.ytimg.com/vi/I_YpsekEhhg/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": "", "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": "", "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": "", "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=I_YpsekEhhg", "whiteboard": "", "recorded": "2014-07-13", "added": "2014-07-15T22:45:41.376", "updated": "2014-07-16T11:43:07.046"}