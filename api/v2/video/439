{"category": "PyCon US 2011", "language": "English", "slug": "pycon-2011--http-in-python--which-library-for-wha", "speakers": ["Augie Fackler"], "tags": ["httplib", "pycon", "pycon2011", "pycurl", "urllib"], "related_urls": [], "id": 439, "state": 1, "title": "HTTP in Python: which library for what task?", "summary": "", "description": "HTTP in Python: which library for what task?\n\nPresented by Augie Fackler\n\nHTTP is the lingua franca of the web, and many things done in Python depend on\nit, yet HTTP in Python isn't always as good as one would expect. It's well\nworth knowing the options and tradeoffs available.\n\nAbstract\n\nHTTP in Python is very much a mixed bag of available technology. What's\nimplemented mostly works well, but there are some frustrating gaps in\ndifferent libraries that are poorly documented. I've gone wading through every\nHTTP library I can find for Python while trying to fix an obscure bug in\nMercurial and decided to write my own. I'll cover what's available today and\nwhy I'm starting from scratch with a completely new implementation.\n\n", "quality_notes": "", "copyright_text": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0", "embed": "", "thumbnail_url": "http://a.images.blip.tv/Pycon-PyCon2011HTTPInPythonWhichLibraryForWhatTask758.png", "duration": null, "video_ogv_length": 84877399, "video_ogv_url": null, "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-us-2011/439_http-in-python-which-library-for-what-task.mp4", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": null, "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": null, "video_flv_download_only": false, "source_url": "", "whiteboard": "", "recorded": "2011-03-11", "added": "2012-02-23T04:20:00", "updated": "2014-04-08T20:28:27.990"}