{"category": "DjangoCon 2012", "language": "English", "slug": "between-where-the-tutorials-end-the-wild-west-b", "speakers": ["Julia Grace"], "tags": ["django"], "related_urls": [], "id": 1390, "state": 1, "title": "Between where the Tutorials end & the Wild West begins: bringing new devs up to speed on Django", "summary": "4 months ago I had never even seen a Django template. But I'm an engineer;\ncoming up to speed couldn't be that hard, right? Wrong. Doing so efficiently\nand effectively was tough. I went from zero to production ready code used by\nhundreds of users everyday. I'll present my missteps and victories, laying out\nhow other teams can quickly bring new team members, who don't know Django, up\nto speed fast.\n\n", "description": "This is a rough outline of how I learned Django; 4 months ago I was a total\noutsider. Through this process I made mistakes, I had breakdowns, but I walked\naway with a very solid understanding of Django and have proudly have written\nthousands of lines of Python that are in production today. You'll leave this\ntalk with lessons on how to bring new developers to your team up speed on\nDjango.\n\n  1. Read the Django docs (obviously, right?)\n  2. Follow along building the sample application (Polls, Choices, yada yada).\n  3. Decide to jump into writing production ready code. Have a breakdown. Feel like you're trying to boil the ocean with a lighter.\n  4. Realize that building the sample app was cute but nothing compared to writing a real world application with real users and real constraints.\n  5. Re-read the docs.\n  6. Build a real Django app -- no more Polls. I decided to build a single-sign on application that allowed Etsy sellers to login and view all the photos of their all their listings in one place. I will give background as to why I chose this app, how I built it, and what it taught me.\n  7. Start biting off small pieces of production code to figure out what the hell is going on. Learn about commonly used Django packages such as django-registration, django-profiles, taggit, etc. - and what happens when you need to modify the code of those packages.\n  8. Attempt to boil the ocean, again. I needed to do a massive re- architecture of our application, combining several independent Django applications into a single, unified Django project. My first attempt totally failed. I will discuss why this was and key novice mistakes.\n  9. Key realization that knowing Django != knowing Python\n  10. \"When you bang your head enough against the wall, eventually the wall comes down\" -- me. I built a pretty kick ass Django application and I'm quite proud of.\n  11. Celebrate (with lessons learned)!\n\n", "quality_notes": "", "copyright_text": "Creative Commons Attribution license (reuse allowed", "embed": "<object width=\"640\" height=\"390\"><param name=\"movie\" value=\"http://youtube.com/v/OV5akJtAjgE?version=3&amp;hl=en_US\"></param><param name=\"allowFullScreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://youtube.com/v/OV5akJtAjgE?version=3&amp;hl=en_US\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"390\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed></object>", "thumbnail_url": "http://i.ytimg.com/vi/OV5akJtAjgE/hqdefault.jpg", "duration": null, "video_ogv_length": null, "video_ogv_url": null, "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": null, "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": null, "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": null, "video_flv_download_only": false, "source_url": "http://www.youtube.com/watch?v=OV5akJtAjgE", "whiteboard": "needs editing", "recorded": "2012-09-05", "added": "2012-10-08T17:39:49", "updated": "2014-04-08T20:28:26.983"}