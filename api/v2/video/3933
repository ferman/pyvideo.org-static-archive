{"category": "PyCon ZA 2015", "language": "English", "slug": "how-i-learnt-to-stop-worrying-and-love-boostpyth", "speakers": ["Bruce Merry"], "tags": ["Room 215"], "related_urls": [], "id": 3933, "state": 1, "title": "How I learnt to stop worrying and love Boost.Python", "summary": "", "description": "The Zen of Python dictates that there should be one - and preferably only one - obvious way to do something. However, when it comes to interoperation with C and C++, there is a multitude of options: the Python C API, Boost.Python, ctypes, cffi, Cython. I will describe my quest to find the **holy grail**^W^W **right interface** for a high-performance networking library.\r\n\r\nThe talk is largely a case study in applying Boost.Python, and will look at some issues such as the Global Interpreter Lock, handling KeyboardInterrupt cleanly, and managing object lifetime. I will briefly mention some of the alternative tools to explain why I settled on Boost.Python. It is not a complete Boost.Python tutorial, but rather aims to give a sense of the flavour and show how it's used in a real application.\r\n\r\nFor obvious reasons, this talk will have a lot of C++ code in it, and some familiarity with C++ will be useful.", "quality_notes": "", "copyright_text": "", "embed": "", "thumbnail_url": "https://i.ytimg.com/vi/2urUj9NRqFc/hqdefault.jpg", "duration": 2137, "video_ogv_length": null, "video_ogv_url": "", "video_ogv_download_only": false, "video_mp4_length": null, "video_mp4_url": "", "video_mp4_download_only": false, "video_webm_length": null, "video_webm_url": "", "video_webm_download_only": false, "video_flv_length": null, "video_flv_url": "", "video_flv_download_only": false, "source_url": "http://youtu.be/2urUj9NRqFc", "whiteboard": "", "recorded": "2015-10-02", "added": "2015-09-30T02:45:38.128", "updated": "2015-10-04T10:23:32.542"}