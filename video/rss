<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Newly posted videos</title><link>http://www.pyvideo.org/video/rss</link><description></description><atom:link href="http://www.pyvideo.org/video/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Mon, 17 Aug 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Stop and smell the Djangos</title><link>http://www.pyvideo.org/video/4066/stop-and-smell-the-djangos</link><description>&lt;p&gt;Description&lt;/p&gt;
A great strength of Django is how much functionality there is baked in without the developer doing anything to obtain it.

A corollary of this is that there’s a great deal of functionality in Django which the average developer is hardly aware exists. The happy dev is pleased to ignore the problems that have been solved for them as their requests rush in and their responses rush out.

There's Middleware, Signals, Authentication, Caching, Internationalization, Serialization and ... a lot more and that's just the core framework.

In this talk we’re going to stop and admire the view .

We’ll demonstrate the effects that these core aspects of Django have on a request - response cycle by reviewing how they work and feeling the pain of what life would be like without them.

My talk is aimed at the average Django dev who has been happy to ignore what goes on under the hood. By better understanding the machinery that Django relies on it gives us all the opportunity to exploit it in our work and, of course, to impress our colleagues!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Shea</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4066/stop-and-smell-the-djangos</guid><enclosure url="https://www.youtube.com/watch?v=tl0wkY78jk4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/tl0wkY78jk4/hqdefault.jpg"></media:thumbnail></item><item><title>Why Salt?</title><link>http://www.pyvideo.org/video/4065/why-salt</link><description>&lt;p&gt;Description&lt;/p&gt;
DevOps is a growing movement in the tech community, and configuration management is a huge necessity for doing DevOps well.
In this talk, we'll be talking about why you should use the SaltStack configuration management platform in your environment, versus the other major platforms of Puppet and Chef.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">aurynn shaw</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4065/why-salt</guid><enclosure url="https://www.youtube.com/watch?v=q86LUTxCDPg" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/q86LUTxCDPg/hqdefault.jpg"></media:thumbnail></item><item><title>Using Flask and Python Anywhere in the Classroom</title><link>http://www.pyvideo.org/video/4064/using-flask-and-python-anywhere-in-the-classroom</link><description>&lt;p&gt;Description&lt;/p&gt;
Flask is a python web server and web framework that makes server-side programming using Python easy. Flask has less 'magic' than Django and therefore makes server requests and responses easier to understand for students. Python Anywhere is a cloud server that allows you to easily set up a live Flask or Django application. Students can develop and debug code online without the hassle of installing and configuring their development environments. This session will look at how Flask and Python Anywhere was used in the classroom with a year 12 student cohort.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brad Nielsen</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4064/using-flask-and-python-anywhere-in-the-classroom</guid><enclosure url="https://www.youtube.com/watch?v=pIh7G8RG6JM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/pIh7G8RG6JM/hqdefault.jpg"></media:thumbnail></item><item><title>An End-to-End Machine Learning Ecosystem in a Quarter</title><link>http://www.pyvideo.org/video/4063/an-end-to-end-machine-learning-ecosystem-in-a-qua</link><description>&lt;p&gt;Description&lt;/p&gt;
Building a machine learning model is hard. Building and serving individual machine learning models for thousands of customers every single day is harder. Model training time must be kept to a minimum, memory constraints are exacerbated and the love and insight that one would usually apply to refining a single model must be automated and scaled. At Zendesk we successfully use pandas, scikit-learn, flask and hadoop to run a machine learning ecosystem that builds, tunes and serves account specific models via an API for many of our customers. This talk is about what we learnt building it and how Python's data stack let us get it to production really really fast.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Hausler</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4063/an-end-to-end-machine-learning-ecosystem-in-a-qua</guid><enclosure url="https://www.youtube.com/watch?v=of6pHdSbtOM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/of6pHdSbtOM/hqdefault.jpg"></media:thumbnail></item><item><title>Using PyCharm Educational Edition</title><link>http://www.pyvideo.org/video/4062/using-pycharm-educational-edition</link><description>&lt;p&gt;Description&lt;/p&gt;
Late last year, JetBrains released a new version of their PyCharm IDE - the Educational Edition. This version has an integrated Python console, Debugger and Version Control System, along with educational features like the ability to create and deliver "fill in the missing code" exercises.
This talk highlights my experiences using PyCharm Lessons to teach beginners Python. 
As a fairly new piece of software, there are a number of bugs that can cause a lot of pain when first starting out. This talk will demonstrate the steps to creating lessons and tests, publishing them and sharing them with students, while avoiding problems with the system. 
I will also share thoughts on using an IDE with beginners, how students have reacted and what kind of lessons have been successful.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thea Koutsoukis</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4062/using-pycharm-educational-edition</guid><enclosure url="https://www.youtube.com/watch?v=kGJVDOaBkKU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/kGJVDOaBkKU/hqdefault.jpg"></media:thumbnail></item><item><title>Predicting sports winners using data analytics with pandas and scikit-learn</title><link>http://www.pyvideo.org/video/4061/predicting-sports-winners-using-data-analytics-wi</link><description>&lt;p&gt;Description&lt;/p&gt;
The pandas and scikit-learn packages combine together to produce a powerful toolkit for data analytics. In this talk, we will be using them together to analyse the outcome of NBA games, trying to predict the winner of a match. There is plenty of data out there to allow us to create good predictions – the key is getting it in the right format and building the right model.

In this talk we will go through importing data from the net, cleaning it up, creating new features, and building a predictive model. We then evaluate how well we did, using recent NBA data. The model we use will be a decision tree ensemble called a random forest.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Layton</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4061/predicting-sports-winners-using-data-analytics-wi</guid><enclosure url="https://www.youtube.com/watch?v=k7hSD_-gWMw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/k7hSD_-gWMw/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote: Designed for education: a Python solution</title><link>http://www.pyvideo.org/video/4059/keynote-designed-for-education-a-python-solutio</link><description>&lt;p&gt;Description&lt;/p&gt;
The problem of introducing children to programming and computer science has seen growing attention in the past few years. Initiatives like Raspberry Pi, Code Club, code.org, (and many more) have been created to help solve this problem. With the introduction of a national computing curriculum in the UK, teachers have been searching for a text based programming language to help teach computational thinking as a follow on from visual languages like Scratch.

The educational community has been served well by Python, benefiting from its straight-forward syntax, large selection of libraries, and supportive community. Education-focused summits are now a major part of most major Python Conferences. Assistance in terms of documentation and training is invaluable, but perhaps there are technical means of improving the experience of those using Python in education. Clearly the needs of teachers and their students are different to those of the seasoned programmer. Children are unlikely to come to their teachers with frustrations about the Global Interpreter Lock! But issues such as usability of IDEs or comprehensibility of error messages are of utmost importance.

In this keynote, Carrie Anne will discuss existing barriers to Python becoming the premier language of choice for teaching computer science, and how learning Python could be helped immensely through tooling and further support from the Python developer community.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carrie Anne Philbin</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4059/keynote-designed-for-education-a-python-solutio</guid><enclosure url="https://www.youtube.com/watch?v=gaFk0Sya_HI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/gaFk0Sya_HI/hqdefault.jpg"></media:thumbnail></item><item><title>Rapid prototyping with teenagers</title><link>http://www.pyvideo.org/video/4058/rapid-prototyping-with-teenagers</link><description>&lt;p&gt;Description&lt;/p&gt;
This is teamwork and rapid prototyping challenges on steroids. Imagine 15 high school kids, most of whom have only just learned to program, working together to design and build a fully functional social networking site in 3 days. 

This project is done as part of the NCSS (National Computer Science School) summer program. NCSS has been running for 20 years, and I've been involved in the last 7, so that's 6 different social networking sites (we used to build search engines, but apparently they're not cool anymore).

I'll go through the technical details, the tools we use, how the site functions, and how we structure the different pieces to come together. I'll also show off some extra fun projects we throw at the advanced kids, like building their own Django-like template engine, and secure hashing of passwords.

A lot of the challenge of this undertaking is inevitably also project management and coordination of the team. These students have never written tests before, don't know what version control is and don't understand what it means to agree on an API. Hilarity and frustration can (and does) ensue, especially during the last night, which is an all-nighter.

Come along to learn how to do project management with the least experienced team possible and how to hack together a functional prototype webapp with minimum effort.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Bell</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4058/rapid-prototyping-with-teenagers</guid><enclosure url="https://www.youtube.com/watch?v=gOnnjPQzXg8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/gOnnjPQzXg8/hqdefault.jpg"></media:thumbnail></item><item><title>OpenStack Lightning Talks</title><link>http://www.pyvideo.org/video/4057/openstack-lightning-talks</link><description></description><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4057/openstack-lightning-talks</guid><enclosure url="https://www.youtube.com/watch?v=eox2gqRlqZU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/eox2gqRlqZU/hqdefault.jpg"></media:thumbnail></item><item><title>Teaching Programming for the fun of IT</title><link>http://www.pyvideo.org/video/4056/teaching-programming-for-the-fun-of-it</link><description>&lt;p&gt;Description&lt;/p&gt;
The teaching of programming concepts has come a long way in terms of tools and pedagogies but the underlying concepts appear timeless. In this session we will look at the place of programming in schools in the junior school through National Curriculum imperatives like Digital Technologies and the Information Processing and Technology perspectives and how Python can have a place here.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Whitehouse</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4056/teaching-programming-for-the-fun-of-it</guid><enclosure url="https://www.youtube.com/watch?v=cnX5MGmWpXg" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/cnX5MGmWpXg/hqdefault.jpg"></media:thumbnail></item><item><title>Automated Scientific Pipelines With Doit</title><link>http://www.pyvideo.org/video/4055/automated-scientific-pipelines-with-doit</link><description>&lt;p&gt;Description&lt;/p&gt;
Doit is a Python library for task management and automation. It provides a straightforward Python approach to manage and execute any series of interrelated tasks, such as in scientific data analysis. Doit can be used as a command line substitute for Make to drive existing tools/applications, or can be integrated directly with your application at the Python level. Task automation can be as simple as manually specifying a dictionary of dependencies, target files and actions, or as complex as automatically determining dependencies and whether a task is up to date using arbitrary Python expressions. This talk will give an overview of why and how to use doit for your project.

This talk assumes no particular background except some familiarity with Python, but is geared towards a scientific computing audience and will touch on automated data analysis as a motivating example.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Hames</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4055/automated-scientific-pipelines-with-doit</guid><enclosure url="https://www.youtube.com/watch?v=ccFqbCwcLko" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ccFqbCwcLko/hqdefault.jpg"></media:thumbnail></item><item><title>PostgreSQL in Django 1.8</title><link>http://www.pyvideo.org/video/4054/postgresql-in-django-18</link><description>&lt;p&gt;Description&lt;/p&gt;
Django 1.8 adds a whole bunch of cool new features that are specifically designed for PostgreSQL. We'll take a quick tour through them, and show when and how you can use them in real-world applications. We'll also talk about how to get the best performance out of PostgreSQL when using the Django ORM.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christophe Pettus</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4054/postgresql-in-django-18</guid><enclosure url="https://www.youtube.com/watch?v=aSRk0L6D3Zs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/aSRk0L6D3Zs/hqdefault.jpg"></media:thumbnail></item><item><title>What Django can learn from Twisted</title><link>http://www.pyvideo.org/video/4053/what-django-can-learn-from-twisted</link><description>&lt;p&gt;Description&lt;/p&gt;
Web frameworks like Django are designed around the traditional request-response cycle — a request comes in, a response is generated, and that is delivered to the client. In the day of “single page” applications, where only sections of the page are updated through requests, doing real-time can be clunky. Twisted, and things that build off it, like Django Channels, might be worth thinking about, and this is what this talk will be about.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amber "Hawkie" Brown</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4053/what-django-can-learn-from-twisted</guid><enclosure url="https://www.youtube.com/watch?v=_HZR7_ZBkYY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/_HZR7_ZBkYY/hqdefault.jpg"></media:thumbnail></item><item><title>Fast-forward to today's Zaqar</title><link>http://www.pyvideo.org/video/4052/fast-forward-to-todays-zaqar</link><description>&lt;p&gt;Description&lt;/p&gt;
Zaqar is probably one of the projects that had been debated the most in OpenStack. Nonetheless, this service capable of providing multi-tenant messaging is now becoming a more relevant part of the OpenStack infrastructure. 

One feature at a time, it's achieving its goals and improving itself. From multi-tenantcy, to subscriptions and persistent transports. In this talk, I'll present the project and its goals, the current state of art, its capabilities and architecture, the tools available and the related maintenance cost.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Flavio Percoco</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4052/fast-forward-to-todays-zaqar</guid><enclosure url="https://www.youtube.com/watch?v=ZS9CRzgLNCE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ZS9CRzgLNCE/hqdefault.jpg"></media:thumbnail></item><item><title>Adventures in scikit-learn's Random Forest</title><link>http://www.pyvideo.org/video/4051/adventures-in-scikit-learns-random-forest</link><description>&lt;p&gt;Description&lt;/p&gt;
Scikit-learn's Random Forests are a great first choice for tackling a machine-learning problem. They are easy to use with only a handful of tuning parameters but nevertheless produce good results. Additionally, a separate cross-validation step can be avoided using the out-of-bag sample predictions generated during the construction of the forest, and finally they make it relatively easy to identify and extract the most important features of the sample data.

In this talk we’ll go through the process of using scikit-learn’s random forests using a financial data-set (of ASX equities) as an example. We’ll begin with a basic overview of the random forest algorithm and of the tuning parameters available and their impact on the effectiveness of the forest. Secondly we’ll go over the basic usage of scikit-learn’s random forests and in the process trouble-shoot some common problems such as dealing with missing sample data. Next we’ll discuss the use of out-of-bag sample predictions as a method for quickly performing cross-validation and optimising the tuning parameters. Finally we’ll look at how to extract information from the model that scikit-learn has generated, most notably the relative importances of the features in the sample data.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gregory Saunders</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4051/adventures-in-scikit-learns-random-forest</guid><enclosure url="https://www.youtube.com/watch?v=YkVscKsV_qk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/YkVscKsV_qk/hqdefault.jpg"></media:thumbnail></item><item><title>Practical Federated Identity</title><link>http://www.pyvideo.org/video/4050/practical-federated-identity</link><description>&lt;p&gt;Description&lt;/p&gt;
Federated Identity was once again a highlight of the OpenStack summit in Vancouver this time with the announcement of keystone to keystone federation that will pave the  way for inter-cloud workloads. 

In the past I have done presentations on what Federated Identity is, however in this talk we delve into the more practical requirements of connecting to an IdP, discuss the changes in workflow required to authenticate your applications, how to configure web single sign on with horizon, what is possible today and the pain points you may encounter using federation.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamie Lennox</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4050/practical-federated-identity</guid><enclosure url="https://www.youtube.com/watch?v=YYzJdxI_g6g" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/YYzJdxI_g6g/hqdefault.jpg"></media:thumbnail></item><item><title>Using benchmarks to understand how WSGI servers work</title><link>http://www.pyvideo.org/video/4049/using-benchmarks-to-understand-how-wsgi-servers-w</link><description>&lt;p&gt;Description&lt;/p&gt;
During the development of a Python web application the inbuilt development web server provided by the web framework is often what is used. When moving to a production environment, one has to choose a more capable production grade WSGI deployment mechanism. Which of the various WSGI servers available is going to be the most suitable is going to depend on a range of criteria related to your specific web applications requirements.

Unfortunately, rather than look at the bigger picture and what would be the most suitable across such criteria, many people will simply rush to trying to run an overly simplistic benchmark on the various WSGI servers and make the decision based purely on perceptions of whether one WSGI server is faster than the alternatives. Worse, they don't even attempt to do the benchmarks themselves and instead rely on benchmarks published on some public blog site.

Such public benchmarks as are available are often flawed, or cover such a narrow use case as to in no way be relevant to that users own specific situation.

A further problem with such benchmarks is that they try and evaluate the performance of a WSGI server as if they are a black box. As such, there is no attempt to try and work out what is actually going on within the WSGI server and why it is exhibiting the behaviour it is.

The purpose of this talk is to explore a number of different micro benchmarks, using them to work out what is actually going on within a WSGI server when they are run. The analysis will delve down into, and look at the different ways that WSGI servers are implemented and deployed. The behaviour under the different benchmarks will be determined using fine grained metrics captured from hooking instrumentation into the WSGI servers themselves.

As there are many factors which could be investigated, the talk cannot be entirely comprehensive, but selected benchmarks drawing from a sub set of the following areas will be presented:

* multithreading
* CPU intensive tasks
* long running requests
* combination of short and long running requests
* large request content uploads
* large amounts of response content
* blocking on back end services
* slow HTTP clients

The tests will look not just at response times, but also server capacity utilisation, CPU and memory utilisation.

Although the discussion will primarily revolve around WSGI servers, a comparison will also be made for some tests were one instead to use an ASYNC web application framework alone, or in conjunction with a WSGI adapter.

To conclude, an attempt will be made to summarise what you should be looking at in a WSGI server to determine if it is the right choice for your use case.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4049/using-benchmarks-to-understand-how-wsgi-servers-w</guid><enclosure url="https://www.youtube.com/watch?v=SGleKfigMsk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/SGleKfigMsk/hqdefault.jpg"></media:thumbnail></item><item><title>Orchestration and CI/CD with Ansible and OpenStack</title><link>http://www.pyvideo.org/video/4048/orchestration-and-cicd-with-ansible-and-openstac</link><description>&lt;p&gt;Description&lt;/p&gt;
This project will demonstrate how to leverage CI/CD pipelines, to deploy and rollback applications in the Openstack Cloud. Best-practices allow to automate tasks and achieve high-degree of repeatability and robustness.

Jenkins will be used to implement continuous integration and continuous delivery jobs and pipelines. Packer will create images of disposable systems, being containers and Cloud servers.
Ansible will be used to both create images with Packer, and eventually orchestrate provisioning of systems in staging and production environments in a blue-green fashion.

Deep knowledge of deployment and workflow allows to continuously refine the process, adapt it to custom requirements, and make it smoother.

The following technologies will be presented:

- Ansible
- Docker on CoreOS cluster
- Git repository
- Jenkins
- Openstack
- Packer
- Vagrant</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simone Soldateschi</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4048/orchestration-and-cicd-with-ansible-and-openstac</guid><enclosure url="https://www.youtube.com/watch?v=QFPtArm4Wc0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/QFPtArm4Wc0/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote: Consequences of an Insightful Algorithm</title><link>http://www.pyvideo.org/video/4047/keynote-consequences-of-an-insightful-algorithm</link><description>&lt;p&gt;Description&lt;/p&gt;
We have ethical responsibilities when coding. We’re able to extract remarkably precise intuitions about an individual. But do we have a right to know what they didn’t consent to share, even when they willingly shared the data that leads us there? A major retailer’s data-driven marketing accidentally revealed to a teen’s family that she was pregnant. Eek.

What are our obligations to people who did not expect themselves to be so intimately known without sharing directly? How do we mitigate against unintended outcomes? For instance, an activity tracker carelessly revealed users’ sexual activity data to search engines. A social network’s algorithm accidentally triggered painful memories for grieving families who’d recently experienced death of their child and other loved ones.

We design software for humans. Balancing human needs and business specs can be tough. It’s crucial that we learn how to build in systematic empathy.

In this talk, we’ll delve into specific examples of uncritical programming, and painful results from using insightful data in ways that were benignly intended. You’ll learn ways we can integrate practices for examining how our code might harm individuals. We’ll look at how to flip the paradigm, netting consequences that can be better for everyone.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carina C. Zona</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4047/keynote-consequences-of-an-insightful-algorithm</guid><enclosure url="https://www.youtube.com/watch?v=NheE6udjfGI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/NheE6udjfGI/hqdefault.jpg"></media:thumbnail></item><item><title>To AST and Beyond</title><link>http://www.pyvideo.org/video/4046/to-ast-and-beyond</link><description>&lt;p&gt;Description&lt;/p&gt;
Follow my journey of building a super fast templating engine which turns your markup into Python code through AST.

Uncover the power available in Python's Abstract Syntax Tree module for building and manipulating code ... in your code!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Maloney</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4046/to-ast-and-beyond</guid><enclosure url="https://www.youtube.com/watch?v=N_Q3i3oaZ6w" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/N_Q3i3oaZ6w/hqdefault.jpg"></media:thumbnail></item><item><title>Moby and the Beanstalk</title><link>http://www.pyvideo.org/video/4045/moby-and-the-beanstalk</link><description>&lt;p&gt;Description&lt;/p&gt;
The popularity of Docker these days is incredible and a lot of people are already using it for their production systems. Although it makes a lot of things much simpler, it's not a silver bullet and comes with some caveats of it's own. This talk will describe the journey of my team at Mobify from a self-hosted VM to a AWS-backed web app deployed using Docker.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Vetter</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4045/moby-and-the-beanstalk</guid><enclosure url="https://www.youtube.com/watch?v=LPfMlOBB5VQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/LPfMlOBB5VQ/hqdefault.jpg"></media:thumbnail></item><item><title>A Scientific Game Engine in the Cloud</title><link>http://www.pyvideo.org/video/4044/a-scientific-game-engine-in-the-cloud</link><description>&lt;p&gt;Description&lt;/p&gt;
Azrael is a game engine for engineers. Unlike traditional engines it emphasises
accurate physics, runs in the Cloud, offers a language agnostic API, and is written in (mostly) Python.

Its main purpose is to make it easy for engineers to build, study, and control
complex physical systems, for instance how to auto pilot a space ship; or a fleet
thereof; in formation; through an Asteroid belt...

I will show a live demo to illustrate the concept. It uses a simple control
algorithm to manoeuvre an object to a pre defined position in space. Once there
it will maintain that position despite random collisions with other objects.

For more information and demo videos please visit https://olitheolix.com/azrael.
The code is available at https://github.com/olitheolix/azrael.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Oliver Nagy</dc:creator><pubDate>Fri, 07 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4044/a-scientific-game-engine-in-the-cloud</guid><enclosure url="https://www.youtube.com/watch?v=JG8-yurFBXM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/JG8-yurFBXM/hqdefault.jpg"></media:thumbnail></item><item><title>Blaze: crunching data in different formats through a single API</title><link>http://www.pyvideo.org/video/4043/blaze-crunching-data-in-different-formats-throug</link><description>&lt;p&gt;Description&lt;/p&gt;
Blaze allows you to use a pandas/numpy like interface to query your data, whether it be in CSV format, SQL database, noSQL database.

Odo allows you to easily migrate your data between most formats, be it JSON, SQL database, CSV, python data structures with just a few lines of code.

Come learn about these exciting new parts of the python data ecosystem.
Learn how to crunch your data, and not necessarily have to learn SQL or mongodb to do so.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lex Hider</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4043/blaze-crunching-data-in-different-formats-throug</guid><enclosure url="https://www.youtube.com/watch?v=Ie7XdxTL5MY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Ie7XdxTL5MY/hqdefault.jpg"></media:thumbnail></item><item><title>Integrating Django with Identity Management Systems</title><link>http://www.pyvideo.org/video/4042/integrating-django-with-identity-management-syste</link><description>&lt;p&gt;Description&lt;/p&gt;
Most Django developers are familiar with authentication and
authorisation on the open web, but the requirements and technologies
used inside companies and large organisations are different:

- Identities and groups are probably stored in an external identity
  management system's directory rather than in an application's
  database tables.

- Authorisation decisions will be based on group membership and
  policies that are defined outside the application.

- Users may be expected or required to use a *single sign-on*
  technology such as Kerberos or SAML to authenticate to applications.

This talk will familiarise the audience with these technologies
and demonstrate how Django applications can be integrated
with an identity management system to meet business
requirements while providing a positive user experience.  Particular
technologies covered will include:

- FreeIPA: an open-source identity management solution, for defining
  users, groups and authorisation policies

- mod_auth_gssapi / mod_auth_kerb: Apache modules for Kerberos
  authentication

- mod_lookup_identity: Apache module to retrieve user information
  from a directory

The talk will conclude with discussion about upcoming Kerberos
features, techniques for dealing with multiple authentication
methods, and progress in making identity management integration
easier for Django developers.

People developing or deploying Django applications in business
environments or for large open source projects with centralised
identity management will get the most out of this talk.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fraser Tweedale</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4042/integrating-django-with-identity-management-syste</guid><enclosure url="https://www.youtube.com/watch?v=HhcotmeioT8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/HhcotmeioT8/hqdefault.jpg"></media:thumbnail></item><item><title>The Future of Identity (Keystone) in OpenStack</title><link>http://www.pyvideo.org/video/4041/the-future-of-identity-keystone-in-openstack</link><description>&lt;p&gt;Description&lt;/p&gt;
Since the Essex release, the OpenStack Identity Project (Keystone) has seen significant numbers of improvements. Some of these improvement include the addition of the V3 API, PKI Tokens, Trusts, Federated Identity, Non-Persistent Tokens, etc.

This talk will discuss the most recent developments for Keystone and what is being planned for Identity during Liberty and beyond.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Morgan Fainberg</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4041/the-future-of-identity-keystone-in-openstack</guid><enclosure url="https://www.youtube.com/watch?v=BiFUDT4aGFk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/BiFUDT4aGFk/hqdefault.jpg"></media:thumbnail></item><item><title>Karaage Gardening</title><link>http://www.pyvideo.org/video/4040/karaage-gardening</link><description>&lt;p&gt;Description&lt;/p&gt;
Karaage is an open source Python/Django application for managing users and projects on HPC clusters. It is being used in production in a number of sites across Australia. This talk will discuss turning a messy legacy software base into a modern software platform that is much a cleaner mess ("gardening"). I will also talk about some of the lessons learnt along the way, including things that went well, and things that could have been handled better.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian May</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4040/karaage-gardening</guid><enclosure url="https://www.youtube.com/watch?v=9yiiwcntx5M" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/9yiiwcntx5M/hqdefault.jpg"></media:thumbnail></item><item><title>Open edX: An edX partner perspective</title><link>http://www.pyvideo.org/video/4039/open-edx-an-edx-partner-perspective</link><description>&lt;p&gt;Description&lt;/p&gt;
Open edX is an open source MOOC platform. It powers courses on edx.org and those of the many adopters of the Open edX platform. Open edX is a complex platform with many interconnected parts, but the largest components are Python Django apps. 
This presentation will describe the experiences of developers at The University of Queensland's UQx project from 2013 when UQ joined the edX consortium through to the present and the future. Your presenters are John Zornig, Director UQx (former Senior Architect) and Andrew Dekker Senior Developer.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Zornig</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4039/open-edx-an-edx-partner-perspective</guid><enclosure url="https://www.youtube.com/watch?v=8BUuq0KVXm0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/8BUuq0KVXm0/hqdefault.jpg"></media:thumbnail></item><item><title>OpenStack Miniconf Opening</title><link>http://www.pyvideo.org/video/4038/openstack-miniconf-opening</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joshua Hesketh,Robert Collins</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4038/openstack-miniconf-opening</guid><enclosure url="https://www.youtube.com/watch?v=6aSKs4_WdkI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/6aSKs4_WdkI/hqdefault.jpg"></media:thumbnail></item><item><title>Education Miniconf Closing Keynote</title><link>http://www.pyvideo.org/video/4037/education-miniconf-closing-keynote</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anne Philbin</dc:creator><pubDate>Mon, 17 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4037/education-miniconf-closing-keynote</guid><enclosure url="https://www.youtube.com/watch?v=2e9dMr5sErs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/2e9dMr5sErs/hqdefault.jpg"></media:thumbnail></item><item><title>Don't be afraid to search</title><link>http://www.pyvideo.org/video/4036/dont-be-afraid-to-search</link><description>&lt;p&gt;Description&lt;/p&gt;
Creating a good search experience for your website is perceived as hard when it doesn't have to be so.

Starting with what is a search engine and how it works we will introduce the tools and techniques to help you design a search functionality that will make your users happy.

From tips on how to structure your data and tune your settings and queries to improve relevancy to features like faceted navigation and search-as-you-type autocomplete.

All examples will be shown using Elasticsearch and Django, though it should be applicable to other technologies as well.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Honza Král</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/4036/dont-be-afraid-to-search</guid><enclosure url="https://www.youtube.com/watch?v=1KHM7WvNeL4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/1KHM7WvNeL4/hqdefault.jpg"></media:thumbnail></item></channel></rss>