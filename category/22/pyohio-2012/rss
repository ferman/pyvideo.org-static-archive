<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyOhio 2012</title><link>http://www.pyvideo.org/category/22/pyohio-2012/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/22/pyohio-2012/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 29 Jul 2012 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Beyond the PIL: alternative solutions for working with images and video.</title><link>http://www.pyvideo.org/video/1375/beyond-the-pil-alternative-solutions-for-working</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Python Imaging Library is the go-to when you need to deal with images in
Python. But sometimes it falls short. Some formats (PDF) are write-only. Some
implementations (TIFF reading) are slow, or limited (TIFF writing). And what
do you do about video data? This talk explores some alternative options,
looking at strategies for using GraphicsMagick, ImageMagick, and ffmpeg from
Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Costlow</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1375/beyond-the-pil-alternative-solutions-for-working</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Beyond_the_PIL_alternative_solutions_for_working_with_images_and_video.mp4?Signature=UtYD0nS8vx66QeU8T%2FJEUvbqv04%3D&amp;Expires=1346593691&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Beyond_the_PIL_alternative_solutions_for_working_with_images_and_video.mp4?Signature=UtYD0nS8vx66QeU8T%2FJEUvbqv04%3D&amp;Expires=1346593691&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ZTjiDStstmc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/ZTjiDStstmc/hqdefault.jpg"></media:thumbnail></item><item><title>Deleting Code Is Hard And You Should Do It</title><link>http://www.pyvideo.org/video/1378/deleting-code-is-hard-and-you-should-do-it</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Adding code is easy. Everyone gets their start by cut-n-pasting some else's
code. But every line of code you don't need is a burden. Delete that s++t.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Diederich</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1378/deleting-code-is-hard-and-you-should-do-it</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Deleting_Code_Is_Hard_And_You_Should_Do_It.mp4?Signature=6OV5naqLAOPAS62DXVd1hA6%2FHD0%3D&amp;Expires=1346595913&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Deleting_Code_Is_Hard_And_You_Should_Do_It.mp4?Signature=6OV5naqLAOPAS62DXVd1hA6%2FHD0%3D&amp;Expires=1346595913&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Ajln82vwycs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/Ajln82vwycs/hqdefault.jpg"></media:thumbnail></item><item><title>django-cms: Friends don’t let friends use Drupal.</title><link>http://www.pyvideo.org/video/1377/django-cms-friends-dont-let-friends-use-drupal</link><description>&lt;p&gt;Abstract&lt;/p&gt;
There are literally thousands of CMS options out there, so why not choose one
that’s built with Python and on the amazing Django web framework. In this talk
we’ll discuss the basics of django-cms and how to use it to build a great CMS
solution for your clients. We’ll go over templates, menus, settings, user
permissions, asset management, plugins and extending the CMS with your own
Django apps.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Schoen</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1377/django-cms-friends-dont-let-friends-use-drupal</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/djangocms_Friends_dont_let_friends_use_Drupal.mp4?Signature=AmGR91dzkmDN0q75tHk4u3VQ8NM%3D&amp;Expires=1348898760&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/djangocms_Friends_dont_let_friends_use_Drupal.mp4?Signature=AmGR91dzkmDN0q75tHk4u3VQ8NM%3D&amp;Expires=1348898760&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ynsBhCXm5Jk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/ynsBhCXm5Jk/hqdefault.jpg"></media:thumbnail></item><item><title>Effective Django</title><link>http://www.pyvideo.org/video/1376/effective-django</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Django is a popular, powerful web framework for Python. It has lots of
"batteries" included, and makes it easy to get up and going. But all of the
power means you can write low quality code that still seems to work. Effective
Django development means building applications that are testable,
maintainable, and scalable. This talk-torial will cover the skills needed to
effective use Django.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1376/effective-django</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Effective_Django.mp4?Signature=Wa7Duc3ag3CumGD9JbTZAn0UOOQ%3D&amp;Expires=1346610845&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Effective_Django.mp4?Signature=Wa7Duc3ag3CumGD9JbTZAn0UOOQ%3D&amp;Expires=1346610845&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=T0_yaDz8Kd4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/T0_yaDz8Kd4/hqdefault.jpg"></media:thumbnail></item><item><title>Exploring Python Code Objects</title><link>http://www.pyvideo.org/video/1372/exploring-python-code-objects</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python is an interpreted language, right? Wrong! In this talk, dive deep into
Python bytecode, and learn what actually happens in everyone's favorite Python
program, 'print "Hello world"'. Learn to use the compile() and exec statement,
understand what your Python code is doing with the dis and compiler modules,
and discover new ways to explore and enjoy Python at a low level.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1372/exploring-python-code-objects</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Exploring_Python_Code_Objects.mp4?Signature=y2iaUtEQLiqc%2FfzEO5cBHIxgbqk%3D&amp;Expires=1346606955&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Exploring_Python_Code_Objects.mp4?Signature=y2iaUtEQLiqc%2FfzEO5cBHIxgbqk%3D&amp;Expires=1346606955&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=uO7kLb5rVTM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/uO7kLb5rVTM/hqdefault.jpg"></media:thumbnail></item><item><title>Fun Observational Science with Python and a Webcam</title><link>http://www.pyvideo.org/video/1373/fun-observational-science-with-python-and-a-webca</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk is a "how I did it" talk about how I took an idea, a web cam,
Python, Django, and the Python Imaging Library and created art, explored
science, and illustrated concepts that our ancestors knew by watching the sky
but we have lost.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Floehr</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1373/fun-observational-science-with-python-and-a-webca</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Fun_Observational_Science_with_Python_and_a_Webcam.mp4?Signature=gCpp%2BD41lCMK66Tubl1PrBvrpvU%3D&amp;Expires=1346592354&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Fun_Observational_Science_with_Python_and_a_Webcam.mp4?Signature=gCpp%2BD41lCMK66Tubl1PrBvrpvU%3D&amp;Expires=1346592354&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Wlkhy8rXOjE" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/Wlkhy8rXOjE/hqdefault.jpg"></media:thumbnail></item><item><title>Learn Python TDD Style with Python Koans</title><link>http://www.pyvideo.org/video/1371/learn-python-tdd-style-with-python-koans</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This is a hands-on workshop for learning Python, mixed into a Test Driven
Development setting.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Malcolm</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1371/learn-python-tdd-style-with-python-koans</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Learn_Python_TDD_Style_with_Python_Koans.mp4?Signature=3dJiGPzNhWYV3wKFx7ib6cmNkMw%3D&amp;Expires=1346604211&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Learn_Python_TDD_Style_with_Python_Koans.mp4?Signature=3dJiGPzNhWYV3wKFx7ib6cmNkMw%3D&amp;Expires=1346604211&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=M64aoqgVsMM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/M64aoqgVsMM/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks</title><link>http://www.pyvideo.org/video/1352/lightning-talks-0-1</link><description></description><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1352/lightning-talks-0-1</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Opening_Remarks.mp4?Signature=bhXiKZP9vsbKJxSOVoZBP3vCSyg%3D&amp;Expires=1348901814&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Opening_Remarks.mp4?Signature=bhXiKZP9vsbKJxSOVoZBP3vCSyg%3D&amp;Expires=1348901814&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=7cQ9B13PIx8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/7cQ9B13PIx8/hqdefault.jpg"></media:thumbnail></item><item><title>Python Design Patterns 1</title><link>http://www.pyvideo.org/video/1369/python-design-patterns-1</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Python community has learned a lot about how to use our language since we
started back in the 1990s, and this talk will use simple one-slide programs to
illustrate the crucial refactorings that can help make a large real-life
application far more testable and maintainable while making its code easier to
re-use. This will not be a re-hash of Gang-of-Four refactorings, but specific
to Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1369/python-design-patterns-1</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_Design_Patterns_1.mp4?Signature=S%2FuouH40XJF1DLFhdK%2F5BrfTc3I%3D&amp;Expires=1346601744&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_Design_Patterns_1.mp4?Signature=S%2FuouH40XJF1DLFhdK%2F5BrfTc3I%3D&amp;Expires=1346601744&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Er5K_nR5lDQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/Er5K_nR5lDQ/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Educators</title><link>http://www.pyvideo.org/video/1370/python-for-educators</link><description>&lt;p&gt;Abstract&lt;/p&gt;
  1. Why Python is a good first language for teaching. 
  2. How Python is readily adaptable to project based learning. Demonstration of some simple programs to motivate students in a programming language program (1) simple chatbot, (2) simple web search engine, (3) using Python with Finch robot. 
  3. How Python is readily extensible, for example creating games with Python 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Rehner</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1370/python-for-educators</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_for_Educators.mp4?Signature=isu70of%2Bhycehl%2B2cZ9PDkJsWF0%3D&amp;Expires=1346590498&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_for_Educators.mp4?Signature=isu70of%2Bhycehl%2B2cZ9PDkJsWF0%3D&amp;Expires=1346590498&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=7b-TYWWSIho" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/7b-TYWWSIho/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Humans</title><link>http://www.pyvideo.org/video/1374/python-for-humans</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Unfortunately, solving simple problems with Python isn't always 'import
antigravity'. Best practices are sometimes far from obvious. This talk will
analyze the high barriers of entry that clutter the Python landscape. We'll
discuss ways to make Python more accessible for newcomers and less of a
headache for seasoned veterans.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Reitz</dc:creator><pubDate>Sun, 29 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1374/python-for-humans</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_for_Humans.mp4?Signature=pcQtPx7Lz213DWChlkZ8G8V7xU8%3D&amp;Expires=1346608612&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_for_Humans.mp4?Signature=pcQtPx7Lz213DWChlkZ8G8V7xU8%3D&amp;Expires=1346608612&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=v2M2SquTHhc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/v2M2SquTHhc/hqdefault.jpg"></media:thumbnail></item><item><title>An Introduction to the ZODB</title><link>http://www.pyvideo.org/video/1367/an-introduction-to-the-zodb</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Zope Object Database is an object database that allows you to store and
retrieve your Python objects directly, without an intermediary layer. It's
fully ACID-compliant and features multiple backends. This talk will
familiarize the audience with ZODB programming and it's use cases.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nolan Brubaker</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1367/an-introduction-to-the-zodb</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/An_Introduction_to_the_ZODB.mp4?Signature=gKT7bxVFK%2B%2BgBbpY%2BxkKZwKyjp8%3D&amp;Expires=1346587224&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/An_Introduction_to_the_ZODB.mp4?Signature=gKT7bxVFK%2B%2BgBbpY%2BxkKZwKyjp8%3D&amp;Expires=1346587224&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=vnZ6dj_1c14" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/vnZ6dj_1c14/hqdefault.jpg"></media:thumbnail></item><item><title>An Introduction to Tkinter</title><link>http://www.pyvideo.org/video/1364/an-introduction-to-tkinter</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Python standard library provides a cross-platform toolkit for building
graphical user interfaces using Tcl/Tk. This toolkit, however, is often
avoided to being somewhat ugly on many popular platforms. This talk will
provide an introduction to working with modern Tkinter on Python 2.7 and 3.x,
focusing on building not-so-ugly, cross-platform desktop applications using
the toolkit.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Armstrong</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1364/an-introduction-to-tkinter</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/An_Introduction_to_Tkinter.mp4?Signature=y7HxKuwfJae442ieWhSVag3Obew%3D&amp;Expires=1346582190&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/An_Introduction_to_Tkinter.mp4?Signature=y7HxKuwfJae442ieWhSVag3Obew%3D&amp;Expires=1346582190&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=6isuF_bBiXs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/6isuF_bBiXs/hqdefault.jpg"></media:thumbnail></item><item><title>Coding for everyone</title><link>http://www.pyvideo.org/video/1359/coding-for-everyone</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Programming is hard, let's keep it simple. This is a reminder of some common
sense things we can do better, as well as observations and examples of where
we can improve our code for the next guy, even if the next guy is you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin W. Smith</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1359/coding-for-everyone</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Coding_for_everyone.mp4?Signature=TTumeDPI%2F8qKco9gd%2F4ZmRyK8EY%3D&amp;Expires=1346570827&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Coding_for_everyone.mp4?Signature=TTumeDPI%2F8qKco9gd%2F4ZmRyK8EY%3D&amp;Expires=1346570827&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=--7sgx4Cd8I" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/--7sgx4Cd8I/hqdefault.jpg"></media:thumbnail></item><item><title>Develop Games with Panda3D and Python</title><link>http://www.pyvideo.org/video/1361/develop-games-with-panda3d-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In the brief amount of time available, this tutorial will take a simple game
concept and implement a multi-player game. Game development with Panda3D will
consist of writing a Python program that controls the Panda3D library.
Computer lab projects will provide hands-on experience investigating the
various components of a network game.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Carswell</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1361/develop-games-with-panda3d-and-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Develop_Games_with_Panda3D_and_Python.mp4?Signature=JjKczmFhJhZKwN4BQ4tfuFesNGs%3D&amp;Expires=1346577061&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Develop_Games_with_Panda3D_and_Python.mp4?Signature=JjKczmFhJhZKwN4BQ4tfuFesNGs%3D&amp;Expires=1346577061&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Qou-6d5qEw4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/Qou-6d5qEw4/hqdefault.jpg"></media:thumbnail></item><item><title>Devops or: How I Learned to Stop Worrying and Love the Ops Team</title><link>http://www.pyvideo.org/video/1357/devops-or-how-i-learned-to-stop-worrying-and-lov</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Communication and a few engineering techniques can help greatly to ease the
burden on an operations team and make applications easier to deploy, maintain
and scale. Given from a developer's perspective this talk focuses on some
engineering techniques that will help to make applications more robust and
more operations friendly.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Crute</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1357/devops-or-how-i-learned-to-stop-worrying-and-lov</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Devops_or_How_I_Learned_to_Stop_Worrying_and_Love_the_Ops_Team.mp4?Signature=TsjD3DCOnQGCSAkGIPDwVVW%2FRCM%3D&amp;Expires=1346565365&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Devops_or_How_I_Learned_to_Stop_Worrying_and_Love_the_Ops_Team.mp4?Signature=TsjD3DCOnQGCSAkGIPDwVVW%2FRCM%3D&amp;Expires=1346565365&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=wuxMTBW6CCs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/wuxMTBW6CCs/hqdefault.jpg"></media:thumbnail></item><item><title>Does Python have the secret sauce to be web scale?</title><link>http://www.pyvideo.org/video/1363/does-python-have-the-secret-sauce-to-be-web-scale</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this talk we will understand async, evented, non-blocking style of
programming. We will look some of the popular libraries and web frameworks
that are built around this style.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pradeep Gowda</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1363/does-python-have-the-secret-sauce-to-be-web-scale</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Does_Python_have_the_secret_sauce_to_be_web_scale.mp4?Signature=CFE%2FBk0kYnPuaqb9Yyz%2FDgyXc4M%3D&amp;Expires=1346580415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Does_Python_have_the_secret_sauce_to_be_web_scale.mp4?Signature=CFE%2FBk0kYnPuaqb9Yyz%2FDgyXc4M%3D&amp;Expires=1346580415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=GQhm1DZOrE8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/GQhm1DZOrE8/hqdefault.jpg"></media:thumbnail></item><item><title>Drive-in Double-header: Datetimes and Log analysis</title><link>http://www.pyvideo.org/video/1358/drive-in-double-header-datetimes-and-log-analysi</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What you need to know about datetimes: time, datetime, and calendar from the
standard library are a bit messy. Find out what to use where and how
(particularly when you have users in many timezones), and what extra modules
you might want to look into.

Log analysis for web applications: Use iPython, matplotlib, and some custom
functions to slice, dice, and visualise your app through its logs.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1358/drive-in-double-header-datetimes-and-log-analysi</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Drivein_Doubleheader_Datetimes_and_Log_analysis.mp4?Signature=3PdB3VPZkQcitHaJE92zsS8oPmY%3D&amp;Expires=1346567801&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Drivein_Doubleheader_Datetimes_and_Log_analysis.mp4?Signature=3PdB3VPZkQcitHaJE92zsS8oPmY%3D&amp;Expires=1346567801&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=_daLhu-HnAY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/_daLhu-HnAY/hqdefault.jpg"></media:thumbnail></item><item><title>Family Project: Three Keys and a Boss</title><link>http://www.pyvideo.org/video/1365/family-project-three-keys-and-a-boss</link><description>&lt;p&gt;Abstract&lt;/p&gt;
One family's project experience programming with Python. From conception
through programming through execution.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katina Mooneyham</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1365/family-project-three-keys-and-a-boss</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Family_Project_Three_Keys_and_a_Boss.mp4?Signature=9W74cuJY6jeFo1XbnUj7v4d30ws%3D&amp;Expires=1346582878&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Family_Project_Three_Keys_and_a_Boss.mp4?Signature=9W74cuJY6jeFo1XbnUj7v4d30ws%3D&amp;Expires=1346582878&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ZHgZA_6X9iQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/ZHgZA_6X9iQ/hqdefault.jpg"></media:thumbnail></item><item><title>Leo: A paradigm shifting IDE</title><link>http://www.pyvideo.org/video/1362/leo-a-paradigm-shifting-ide</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Leo is a pure python, open source outliner, often used as an IDE. As a project
manager, it handles all your files, no matter what language(s) you're using.
Uniquely, it lets you to organize your projects below the file level,
(elsewhere only doable informally with section comments). Using outlines
supports thinking &amp; organizing, allowing big/little picture focus shifts. Its
great for code study.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Fetherston</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1362/leo-a-paradigm-shifting-ide</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Leo_A_paradigm_shifting_IDE.mp4?Signature=YTvIkdsnQ9XcG0qwrIGa5RVSfZM%3D&amp;Expires=1346578867&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Leo_A_paradigm_shifting_IDE.mp4?Signature=YTvIkdsnQ9XcG0qwrIGa5RVSfZM%3D&amp;Expires=1346578867&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=JgJ89ekGj-s" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/JgJ89ekGj-s/hqdefault.jpg"></media:thumbnail></item><item><title>Python 101/102</title><link>http://www.pyvideo.org/video/1356/python-101102</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Are you completely new to Python? Have you been wanting to learn Python but
haven't had the time? Well give you a crash course on the basics of Python.
We'll start off with why Python is unique compared to other languages and then
quickly start into basic syntax, data types, and the Python philosophy for
coding.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Yanovich</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1356/python-101102</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_101102.mp4?Signature=Q0bkJuGjtbu9y4FtsdYDiOVQblc%3D&amp;Expires=1346563536&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_101102.mp4?Signature=Q0bkJuGjtbu9y4FtsdYDiOVQblc%3D&amp;Expires=1346563536&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=-jZKAlW0hpg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/-jZKAlW0hpg/hqdefault.jpg"></media:thumbnail></item><item><title>Python Testing Fundamentals</title><link>http://www.pyvideo.org/video/1366/python-testing-fundamentals</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial imparts the basics of testing Python code using assert,
unittest, and doctest.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Calloway</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1366/python-testing-fundamentals</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_Testing_Fundamentals.mp4?Signature=Cdw5dKg8INBZcQ1TaLsZX%2F%2FD3vQ%3D&amp;Expires=1346585819&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Python_Testing_Fundamentals.mp4?Signature=Cdw5dKg8INBZcQ1TaLsZX%2F%2FD3vQ%3D&amp;Expires=1346585819&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=jTJHQ-zQMk4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/jTJHQ-zQMk4/hqdefault.jpg"></media:thumbnail></item><item><title>Really good logging</title><link>http://www.pyvideo.org/video/1360/really-good-logging</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Really good logging means when something goes wrong in the middle of the
night, you know about it, and you have enough information to fix it even if
the problem never repeats. At the same time, really good logging doesn't raise
false alarms and doesn't require finding needles in a haystack. Logging is
important, but we usually do it wrong. Let's stop doing that.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">W. Matthew Wilson</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1360/really-good-logging</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Really_good_logging.mp4?Signature=YxkRHZWGxZvcZuAQudbnULbB2Dg%3D&amp;Expires=1346572937&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Really_good_logging.mp4?Signature=YxkRHZWGxZvcZuAQudbnULbB2Dg%3D&amp;Expires=1346572937&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=tJqA6FgqJXs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/tJqA6FgqJXs/hqdefault.jpg"></media:thumbnail></item><item><title>Starting your project right: setup and automation for all</title><link>http://www.pyvideo.org/video/1354/starting-your-project-right-setup-and-automation</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Everyone starts hacking on their little Python library or application, with
one goal in mind: Hacking Code! However, you need to do a little work to
prepare your project for success. We'll discuss project layout, automation
with Make, and 3rd party services to help your project appear more organized,
accessible, and dare I say, professional!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Harding</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1354/starting-your-project-right-setup-and-automation</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Starting_your_project_right_setup_and_automation_for_all.mp4?Signature=ptYcZSzQz8WO7CbjjVLZXD%2Fo3Vg%3D&amp;Expires=1346554799&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Starting_your_project_right_setup_and_automation_for_all.mp4?Signature=ptYcZSzQz8WO7CbjjVLZXD%2Fo3Vg%3D&amp;Expires=1346554799&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=VNSIDCwJxAg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/VNSIDCwJxAg/hqdefault.jpg"></media:thumbnail></item><item><title>Using Python on Android</title><link>http://www.pyvideo.org/video/1368/using-python-on-android</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Join Ben Rousch as he takes you a journey of exploration through the many ways
of using Python to program on and for Android.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Rousch</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1368/using-python-on-android</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Using_Python_on_Android.mp4?Signature=ymHgM8oQq76Bu9aOhdxv3dWUJjw%3D&amp;Expires=1349111612&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Using_Python_on_Android.mp4?Signature=ymHgM8oQq76Bu9aOhdxv3dWUJjw%3D&amp;Expires=1349111612&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=GV9fNzGMw04" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/GV9fNzGMw04/hqdefault.jpg"></media:thumbnail></item><item><title>Video Production Strategies Using Image Sequences</title><link>http://www.pyvideo.org/video/1355/video-production-strategies-using-image-sequences</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Major production houses sometimes work with digital video not in non-linear
editor format, but as large collections of image sequences in folders. Using
Python to produce video this way can be very simple and natural once you
starting thinking in image sequences. Using a series of small scripts, I'll
demonstrate using PyCairo or PySVG as well as ImageMagick and FFMPEG to make
1080P HD video.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Winningham</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1355/video-production-strategies-using-image-sequences</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Video_Production_Strategies_Using_Image_Sequences.mp4?Signature=tnDVms00QJDdWJj%2BDJwYojsa65E%3D&amp;Expires=1346557642&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/Video_Production_Strategies_Using_Image_Sequences.mp4?Signature=tnDVms00QJDdWJj%2BDJwYojsa65E%3D&amp;Expires=1346557642&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=NgEcwYE_Fzo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/NgEcwYE_Fzo/hqdefault.jpg"></media:thumbnail></item><item><title>You Used Python for What?!</title><link>http://www.pyvideo.org/video/1353/you-used-python-for-what</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Taking a break from his usual web development, James will give an overview of
some of the more unusual things he's done with Python: from implementing other
programming languages to analyzing piano performances; from emulating an Apple
][ to the beginnings of an operating system written in Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Tauber</dc:creator><pubDate>Sat, 28 Jul 2012 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1353/you-used-python-for-what</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/You_Used_Python_for_What.mp4?Signature=l3FyP2qi%2Bfphe76sBKPBXeU%2BTZU%3D&amp;Expires=1346552312&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/pyohio/pyohio_2012/You_Used_Python_for_What.mp4?Signature=l3FyP2qi%2Bfphe76sBKPBXeU%2BTZU%3D&amp;Expires=1346552312&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=NLRWUQDaApw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/NLRWUQDaApw/hqdefault.jpg"></media:thumbnail></item></channel></rss>