<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyCon AU 2010</title><link>http://www.pyvideo.org/category/8/pycon-au-2010/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/8/pycon-au-2010/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 11 Mar 2016 12:09:51 -0000</lastBuildDate><ttl>500</ttl><item><title>PyConAU 2010: An Introduction to Processing</title><link>http://www.pyvideo.org/video/457/pyconau-2010--an-introduction-to-processing</link><description>&lt;p&gt;Description&lt;/p&gt;
An Introduction to Processing

Presented by Clinton J Roy (University of Queensland)

Processing is an Open Source language designed to make interactive graphics
and animation programming easier than traditional GUI toolkits. Processing is
used to prototype systems and create interactive data visualisations.

[NOTES: Missing first 2 minutes of audio, then camera microphone for first
section.]

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clinton J Roy</dc:creator><guid>http://www.pyvideo.org/video/457/pyconau-2010--an-introduction-to-processing</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/457_pyconau-2010-an-introduction-to-processing.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-AnIntroductionToProcessing388.png"></media:thumbnail></item><item><title>PyConAU 2010: App Engine 101</title><link>http://www.pyvideo.org/video/458/pyconau-2010--app-engine-101</link><description>&lt;p&gt;Description&lt;/p&gt;
App Engine 101

Presented by Brian K Quinlan (Google)

App Engine lets you run your Python web applications on Google's
infrastructure.

This tutorial will provide an overview on how to create, configure and deploy
applications on App Engine using a simple (but useful!) example application.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian K Quinlan</dc:creator><guid>http://www.pyvideo.org/video/458/pyconau-2010--app-engine-101</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/458_pyconau-2010-app-engine-101.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-AppEngine101534.png"></media:thumbnail></item><item><title>PyConAU 2010: Building the Wave Robots API: Behind the Scenes</title><link>http://www.pyvideo.org/video/459/pyconau-2010--building-the-wave-robots-api--behin</link><description>&lt;p&gt;Description&lt;/p&gt;
Building the Wave Robots API: Behind the Scenes

Presented by Pamela S Fox (Google)

The Google Wave robots protocol involves JSON-RPC messages that are sent
between the Wave server and the robot, communicating events to process and
operations to perform. The Python Robots API abstracts on top of that JSON-RPC
service, allowing developers to interact with waves using event callbacks,
python classes, and chained functions. In this talk, we'll explain the JSON-
RPC protocol, talk about how we designed the API to sit on top of that
protocol, and show how developers can use the API.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pamela S Fox</dc:creator><guid>http://www.pyvideo.org/video/459/pyconau-2010--building-the-wave-robots-api--behin</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/459_pyconau-2010-building-the-wave-robots-api-behind-the-scenes.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-BuildingTheWaveRobotsAPIBehindTheScenes216.png"></media:thumbnail></item><item><title>PyConAU 2010: Displaying Australian datasets with Django</title><link>http://www.pyvideo.org/video/477/pyconau-2010--displaying-australian-datasets-with</link><description>&lt;p&gt;Description&lt;/p&gt;
Displaying Australian datasets with Django

Presented by Malcolm Tredinnick

The last 18 months or so in Australia have seen an increased number of
government and public sector organisations releasing datasets to the public
under reasonable reuse terms (often Creative Commons license). This talk will
take a couple of those local real-world datasets and create a minimal website
for remixing them, using Django as the underlying framework. The goals are to
provide a short walk through the process of importing and extracting such data
in practice, show how to incorporate Django's GIS features into an
application, as well as highlighting that real world is messy and so is the
data it produces. Working with datasets for journalism or research purposes,
or simply fun, requires a certain attention to detail.

Basic knowledge of Django is assumed, although the GIS components will be
introduced carefully as they are less familiar to many developers.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Malcolm Tredinnick</dc:creator><guid>http://www.pyvideo.org/video/477/pyconau-2010--displaying-australian-datasets-with</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/477_pyconau-2010-displaying-australian-datasets-with-django.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-DisplayingAustralianDatasetsWithDjango920.png"></media:thumbnail></item><item><title>PyConAU 2010: Don't Break It: Continuous Integration &amp;amp; Deployment</title><link>http://www.pyvideo.org/video/461/pyconau-2010--don--39-t-break-it--continuous-inte</link><description>&lt;p&gt;Description&lt;/p&gt;
Don't Break It: Continuous Integration &amp; Deployment

Presented by Benno Rice

So you've developed your application, it appears to work and you may even have
some tests to back that up. Now what?

One part of software development that tends to receive not nearly enough
attention is the process of deploying, supporting and maintaining your code in
production. This demonstration will give an overview of using tools such as
Hudson, nose, stdeb and freshen to automate the testing, packaging, deployment
and verification of production software.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benno Rice</dc:creator><guid>http://www.pyvideo.org/video/461/pyconau-2010--don--39-t-break-it--continuous-inte</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/461_pyconau-2010-don-t-break-it-continuous-integration-amp-deployment.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-DontBreakItContinuousIntegrationDeployment397.png"></media:thumbnail></item><item><title>PyConAU 2010: Esky: keep your frozen apps fresh</title><link>http://www.pyvideo.org/video/470/pyconau-2010--esky--keep-your-frozen-apps-fresh</link><description>&lt;p&gt;Description&lt;/p&gt;
Esky: keep your frozen apps fresh

Presented by Ryan F Kelly

Esky ([http://pypi.python.org/pypi/esky/](http://pypi.python.org/pypi/esky/))
is an auto-update framework for frozen Python applications, designed to be
simple to use while guaranteeing the safety of your app in case of failed or
partial updates. It provides easy support for differential updates and is
compatible with py2exe, py2app, cx-freeze and bbfreeze.

This talk will give an overview of esky's features, and show how to extend an
existing frozen application with auto-update support.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan F Kelly</dc:creator><guid>http://www.pyvideo.org/video/470/pyconau-2010--esky--keep-your-frozen-apps-fresh</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/470_pyconau-2010-esky-keep-your-frozen-apps-fresh.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-EskyKeepYourFrozenAppsFresh588.png"></media:thumbnail></item><item><title>PyConAU 2010: Fast Engineering Computation in with Boost::Python and Numarray</title><link>http://www.pyvideo.org/video/479/pyconau-2010--fast-engineering-computation-in-wit</link><description>&lt;p&gt;Description&lt;/p&gt;
Fast Engineering Computation in with Boost::Python and Numarray

Presented by Filip Zalio (NEC Australia)

In the 3G Mobile Research and Development Division in NEC Australia
(www.nec.com.au) we have been using Python based environment since 2005. We
run digital signal processing simulations of 3G and 4G mobile phone radio
links. Our simulations are CPU-bound, where efficient and fast interfacing
between C++ and Python is one of the keys to the growing success of Python
within NEC. In this short presentation, we describe our current framework
which achieves the fast processing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Filip Zalio</dc:creator><guid>http://www.pyvideo.org/video/479/pyconau-2010--fast-engineering-computation-in-wit</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/479_pyconau-2010-fast-engineering-computation-in-with-boost-python-and-numarray.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-FastEngineeringComputationInWithBoostPythonAndNumarray677.png"></media:thumbnail></item><item><title>PyConAU 2010: Genropy - a framework for creating complex applications deployed on the web</title><link>http://www.pyvideo.org/video/482/pyconau-2010--genropy---a-framework-for-creating-</link><description>&lt;p&gt;Description&lt;/p&gt;
Genropy - A framework for creating complex applications deployed on the web

Presented by Jeff B Edwards (Goodsoftware)

[Genropy](http://blog.genropy.org/) is the python implementation of Genro, and
is an application framework quite different from the standard (django,
cherrypy, turbogears), for building powerful database applications deployed
from the browser. Many differences and advantages between this framework and
traditional python application frameworks are explained. Genropy is a suitable
for creating complex 'applications' as opposed to 'sites'. The differentiation
is that an application is something an operator uses all day, has trained
users, that have to 'squeeze' all the power from it available. Conversely, a
'site' is basically public and not necessarily powerful as a user spends a
relatively small amount of time on it. Genropy is the framework for creation
applications. It is used for attendee registration and sales in pycon italy,
the larger national conference in Europe (Florence, Italy).

This session will demonstrate how to create a simple application (3 tables)
and demonstrate the ease and power of using python for the model view and
controller on the client. It demonstrates how one api- being the genro Bag -
is used to create the model, to map the sql to objects, to create the GUI and
communicate all data. So all of it can be done in python instead of having to
use many different technologies and languages.

Jeff Edwards from Goodsoftware is strategic partner of Sofwell who is the
author of Genropy.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff B Edwards</dc:creator><guid>http://www.pyvideo.org/video/482/pyconau-2010--genropy---a-framework-for-creating-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/482_pyconau-2010-genropy-a-framework-for-creating-complex-applications-deployed-on-the-web.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-GenropyAFrameworkForCreatingComplexApplicationsDeployed301.png"></media:thumbnail></item><item><title>PyConAU 2010: Getting started with Apache/mod_wsgi</title><link>http://www.pyvideo.org/video/468/pyconau-2010--getting-started-with-apache-mod-wsg</link><description>&lt;p&gt;Description&lt;/p&gt;
Getting started with Apache/mod_wsgi

Presented by Graham Dumpleton

An introduction to using Apache/mod_wsgi to host Python web applications
supporting the Python Web Server Gateway Interface (WSGI).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><guid>http://www.pyvideo.org/video/468/pyconau-2010--getting-started-with-apache-mod-wsg</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/468_pyconau-2010-getting-started-with-apache-mod-wsgi.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-GettingStartedWithApachemod_wsgi847.png"></media:thumbnail></item><item><title>PyConAU 2010: GLAMkit: a harder, better, faster, stronger way to write reusable Django code</title><link>http://www.pyvideo.org/video/472/pyconau-2010--glamkit--a-harder--better--faster--</link><description>&lt;p&gt;Description&lt;/p&gt;
GLAMkit: a harder, better, faster, stronger way to write reusable Django code

Presented by Dr. Greg Turner (the Interaction Consortium)

As part of our web development work for Galleries, Libraries, Archives and
Museums (the so-called GLAM sector), we have open-sourced the common tools and
design patterns that we have developed as a web framework called GLAMkit
([http://glamkit.org/](http://glamkit.org/)).

GLAMkit is based on Django, and is inspired by its design philosophy of
several apps which implement specific features. However, by looking at the
successes and challenges faced by other CMSes and collections of apps such as
Pinax, we have taken the philosophy a stage futher.

Rather than being a collection of Django apps, we have constructed GLAMkit as
a collection of optional and reusable Django 'toolkits' for implementing
common features. We leave the implementation details - the things that Django
already does brilliantly - to the application developers themselves.

In this talk, we will present the history of GLAMkit's development, with
particular focus on how our approach to reusability came about, and some
examples of that approach.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Greg Turner</dc:creator><guid>http://www.pyvideo.org/video/472/pyconau-2010--glamkit--a-harder--better--faster--</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/472_pyconau-2010-glamkit-a-harder-better-faster-stronger-way-to-write-reusable-django-code.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-GLAMkitABetterFasterStrongerWayToWriteReusableDjangoCo180.png"></media:thumbnail></item><item><title>PyConAU 2010: Hard Real-time Python, or, Giant Robots of Doom</title><link>http://www.pyvideo.org/video/481/pyconau-2010--hard-real-time-python--or--giant-ro</link><description>&lt;p&gt;Description&lt;/p&gt;
Hard Real-time Python, or, Giant Robots of Doom

Presented by Simon Wittber (Different Methods Pty Ltd)

Can you use Python to control a pair of 30 tonne robots as they spin at 72
kilometres per hour? Can you use Python to provide realtime collision
avoidance and fly-by-wire control?

Yes, you can. See how Perth based engineering company Transmin Pty Ltd
(www.transmin.com.au) used Python to deliver a safety-crticial robotic control
system in record time.

[NOTE: Missing first 2.5 minutes of talk, then camera audio for first section]

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simon Wittber</dc:creator><guid>http://www.pyvideo.org/video/481/pyconau-2010--hard-real-time-python--or--giant-ro</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/481_pyconau-2010-hard-real-time-python-or-giant-robots-of-doom.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-HardRealtimePythonOrGiantRobotsOfDoom180.png"></media:thumbnail></item><item><title>PyConAU 2010: Introducing Python to a Java shop</title><link>http://www.pyvideo.org/video/456/pyconau-2010--introducing-python-to-a-java-shop</link><description>&lt;p&gt;Description&lt;/p&gt;
Introducing Python to a Java shop

Presented by Juergen Brendel (MuleSoft)

There is a time and place for everything: For some applications Python is
perfect, for others a language like Java and its entire ecosystem is more
ideal. In this talk we see how Python was introduced to a Java shop as a
vehicle for rapid and dynamic prototyping of a new project. The talk then
explains how Jython/Java integration was used to translate this project step
by step from Python to Java. Going beyond the advocacy focus, the talk then
shows the interfaces to call Java from Python and vice versa and illustrates
those with examples. Furthermore, unit testing of Java classes via test cases
written in Python is also touched upon.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juergen Brendel</dc:creator><guid>http://www.pyvideo.org/video/456/pyconau-2010--introducing-python-to-a-java-shop</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/456_pyconau-2010-introducing-python-to-a-java-shop.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-IntroducingPythonToAJavaShop731.png"></media:thumbnail></item><item><title>PyConAU 2010: Keynote: Mark Pesce; &amp;quot;How Not To Be Seen&amp;quot;</title><link>http://www.pyvideo.org/video/483/pyconau-2010--keynote--mark-pesce---quot-how-not-</link><description>&lt;p&gt;Description&lt;/p&gt;
PyConAU 2010 KeyNote

Presented by Mark Pesce

Although Mark Pesce does know Python, he doesn't consider himself any sort of
expert so he won't be talking about Python, except to whinge that his friends
pick on him for choosing a language which uses whitespace as syntax. Try as he
might, he can't get his friends to see the logic of this - even though they
always pretty-print their own code, in whatever language they write. Go
figure. So, Mark will not be talking about that. What will Mark be talking
about? Well, um, err... (sound of shuffling papers) ...oh, yeah, here it is:
'Mark Pesce will be talking about stuff. And things. And how great it all is.
No, really. You'll see. Promise.' ? Mark is best-known as the co-inventor of
VRML, and as panelist/judge on ABC's "The New Inventors". The author of five
books and numerous articles, he has a monthly column in NETT magazine, is a
frequent contributor to ABC Unleashed, and is a sought-after commentator on
both radio and television. Since 2006, Pesce has held an Honorary Appointment
in the Digital Cultures Program at the University of Sydney.

[NOTES: ~10 secs lost audio at start]

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Pesce</dc:creator><guid>http://www.pyvideo.org/video/483/pyconau-2010--keynote--mark-pesce---quot-how-not-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/483_pyconau-2010-keynote-mark-pesce-quot-how-not-to-be-seen-quot.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-KeynoteMarkPesceHowNotToBeSeen121-838.jpg"></media:thumbnail></item><item><title>PyConAU 2010: Keynote: Nick Hodge; &amp;quot;IronPython &amp;amp; The Quest for the Holy Grail&amp;quot;</title><link>http://www.pyvideo.org/video/473/pyconau-2010--keynote--nick-hodge---quot-ironpyth</link><description>&lt;p&gt;Description&lt;/p&gt;
Keynote: Nick Hodge, "IronPython &amp; The Quest for the Holy Grail"

Presented by Nick Hodge

Language interoperability is one of the Holy Grails of programming languages.
Choose your language, choose your framework and freely exchange objects and
methods.

Is this Anarcho-syndicalism of application architecture? Are the serfs in the
fields of development teams rebelling against the rightful King of the Realm?

Is the Dynamic Language Runtime from Microsoft merely a French castle in the
Kingdom of England?

How does this all fit with the open source Knights of Ni that lurk in the
thickest of forests?

And the so-called Holy Hand Grenade of Antioch, Ruby, really a weapon of mass
destruction?

Find out in Nick Hodge's keynote.

A Professional Geek at Microsoft in Australia, Nick spends his time with open
source communities showing off Microsoft open source cool and shiny toys.
Prior to Microsoft, Nick spent many a weekend over 3 years building an
internal sales management tool using Python, Excel and SAP to counter-act the
evilness of being a sales manager. Please do not ask about these dark times in
polite conversations. More info about Nick may or may not be found at
[http://www.nickhodge.com/](http://www.nickhodge.com/).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Hodge</dc:creator><guid>http://www.pyvideo.org/video/473/pyconau-2010--keynote--nick-hodge---quot-ironpyth</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/473_pyconau-2010-keynote-nick-hodge-quot-ironpython-amp-the-quest-for-the-holy-grail-quot.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-KeynoteNickHodgeIronPythonTheQuestForTheHolyGrail836.png"></media:thumbnail></item><item><title>PyConAU 2010: Lightning talks - Saturday</title><link>http://www.pyvideo.org/video/471/pyconau-2010--lightning-talks---saturday</link><description>&lt;p&gt;Description&lt;/p&gt;
Lightning Talks - Saturday

  * 00:00 - Amy Maree: Talking about OLPC XO, Python and Pippy. 
  * 05:55 - Jurgen Brendel: Jython and writing performance critical parts in Java. 
  * 09:50 - Dave Claridge: Embedding Python and robots that play soccer. 
  * 15:10 - Paul Dyson: inflect.py 
  * 20:20 - Richard Jones: cocos2d, a python game library 
  * 25:40 - Brian Quinlan: Why you probably don't want to work for Google 
  * 30:50 - Nick Coghlan: Running Python scripts. 
  * 34:55 - Philip: How to introduce Python to a large organization 
  * 38:55 - Ryan Kelly: with hacks: re-usable tools for with-statement hackery 

PMC curator notes: Paul Dyson's demo at 18:28 is great.

If anyone know's Philip's last name (and/or if we spelled his first name
wrong, too), let us know in the comments.

</description><guid>http://www.pyvideo.org/video/471/pyconau-2010--lightning-talks---saturday</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/471_pyconau-2010-lightning-talks-saturday.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-LightningTalksSaturday403.png"></media:thumbnail></item><item><title>PyConAU 2010: Lightning talks - Sunday</title><link>http://www.pyvideo.org/video/455/pyconau-2010--lightning-talks---sunday</link><description>&lt;p&gt;Description&lt;/p&gt;
Lightning Talks - Sunday

  * 00:00 - Benno Rice: SOAP and SSL Certificate Authentication 
  * 02:50 - Brian Quinlan: Python Puzzlers 
  * 08:30 - Malti Marquarding: ASKAP Computing: Project Overview 
  * 14:25 - Brian Quinlan: Python Puzzlers (2) 
  * 20:05 - Peter Lovett: Python is Good 
  * 24:25 - Dylan Jay: [SyPy (Sydney Python)](http://sypy.org/), [repoze.BFG](http://bfg.repoze.org/)
  * 30:45 - Ryan Kelly: @inline (or: [promise](http://github.com/rfk/promise/) gets pushy) 

</description><guid>http://www.pyvideo.org/video/455/pyconau-2010--lightning-talks---sunday</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/455_pyconau-2010-lightning-talks-sunday.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-LightningTalksSunday233.png"></media:thumbnail></item><item><title>PyConAU 2010: Making your Python code fast</title><link>http://www.pyvideo.org/video/474/pyconau-2010--making-your-python-code-fast</link><description>&lt;p&gt;Description&lt;/p&gt;
Making your Python code fast

Presented by Andrew Bennetts (Canonical)

Before you can make your program faster you need to understand why it slow.
Andrew will show you some tools and techniques for investigating and analysing
your program's performance.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Bennetts</dc:creator><guid>http://www.pyvideo.org/video/474/pyconau-2010--making-your-python-code-fast</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/474_pyconau-2010-making-your-python-code-fast.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-MakingYourPythonCodeFast592.png"></media:thumbnail></item><item><title>PyConAU 2010: Multiple, Heterogeneous Models in Pylons</title><link>http://www.pyvideo.org/video/460/pyconau-2010--multiple--heterogeneous-models-in-p</link><description>&lt;p&gt;Description&lt;/p&gt;
Multiple, Heterogeneous Models in Pylons

Presented by Nick Seidenman (WEHI)

There is a fair amount of sparse, disjoint information available on how to use
multiple, possibly diverse databases within a single Pylons app. This talk
seeks to present a coherent guideline, derived from lessons learned, on how to
use several different data stores (sqlite, postgresql, mysql, flat files)
simultaneously within the same pylons project.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Seidenman</dc:creator><guid>http://www.pyvideo.org/video/460/pyconau-2010--multiple--heterogeneous-models-in-p</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/460_pyconau-2010-multiple-heterogeneous-models-in-pylons.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-MultipleHeterogeneousModelsInPylons870.png"></media:thumbnail></item><item><title>PyConAU 2010: Need for Speed</title><link>http://www.pyvideo.org/video/475/pyconau-2010--need-for-speed</link><description>&lt;p&gt;Description&lt;/p&gt;
Need for Speed

Presented by Dr. Graeme Cross

"Bottlenecks occur in surprising places, so don't try to second guess and put
in a speed hack until you have proven that's where the bottleneck is." (Rob
Pike)

Python is a great balance of productivity, expressiveness and performance, but
there are times when it would nice to have a Python application run faster.
This is particularly true for large scale data processing, numerical work,
controlling real world devices, and animation.

Using some real-world examples, this talk covers tools and techniques that
allow you to systematically understand where the bottlenecks are in your code
and then how to effectively optimise your code, without having to resort to
writing modules in C/C++.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Graeme Cross</dc:creator><guid>http://www.pyvideo.org/video/475/pyconau-2010--need-for-speed</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/475_pyconau-2010-need-for-speed.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-NeedForSpeed298.png"></media:thumbnail></item><item><title>PyConAU 2010: Plone for Python Developers</title><link>http://www.pyvideo.org/video/462/pyconau-2010--plone-for-python-developers</link><description>&lt;p&gt;Description&lt;/p&gt;
Plone for Python Developers

Presented by Dylan Jay (PretaWeb)

Plone is one of the top four open source CMSes in the world and is pure
python. Plone is in demand for security, simple UI and extreme flexibility.
This talk will concentrate on helping web programers with several common
customisations of Plone, including content type creation, themeing and
template customizations and how the re-architecture using ZTK makes this easy.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dylan Jay</dc:creator><guid>http://www.pyvideo.org/video/462/pyconau-2010--plone-for-python-developers</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/462_pyconau-2010-plone-for-python-developers.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-PloneForPythonDevelopers992.png"></media:thumbnail></item><item><title>PyConAU 2010: Python Goes to the Movies</title><link>http://www.pyvideo.org/video/476/pyconau-2010--python-goes-to-the-movies</link><description>&lt;p&gt;Description&lt;/p&gt;
Python Goes to the Movies

Presented by Mark J Streatfield (Dr. D. Studios.)

As Hollywood continues to churn out blockbuster films such as Avatar, the
technology used to produce the eye popping visual effects is increasingly
becoming the nomenclature of the everyday movie-goer. While attention is often
paid to the headline techniques such as motion capture and complex physics
simulation, few realise that the majority of the work is underpinned by a
foundation of Python. This talk introduces the application of Python in the
visual effects industry.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark J Streatfield</dc:creator><guid>http://www.pyvideo.org/video/476/pyconau-2010--python-goes-to-the-movies</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/476_pyconau-2010-python-goes-to-the-movies.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-PythonGoesToTheMovies711.png"></media:thumbnail></item><item><title>PyConAU 2010: Python in Video Games and Multimedia Projects</title><link>http://www.pyvideo.org/video/467/pyconau-2010--python-in-video-games-and-multimedi</link><description>&lt;p&gt;Description&lt;/p&gt;
Python in Video Games and Multimedia Projects

Presented by Mr. Chris McCormick

This talk will cover several real-world uses of Python in cross platform video
game and multimedia projects, and the tips, tricks, and techniques I learned
along the way whilst working on those projects. I'll speak about the issues
involved in cross platform desktop dev with wxPython, interfacing with
multimedia programs using subprocess, spreading load with multiprocessing,
developing for the web on small devices with Django, and when and how to write
custom network servers using asyncore.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McCormick</dc:creator><guid>http://www.pyvideo.org/video/467/pyconau-2010--python-in-video-games-and-multimedi</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/467_pyconau-2010-python-in-video-games-and-multimedia-projects.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-PythonInVideoGamesAndMultimediaProjects630.png"></media:thumbnail></item><item><title>PyConAU 2010: State Of Python</title><link>http://www.pyvideo.org/video/454/pyconau-2010--state-of-python</link><description>&lt;p&gt;Description&lt;/p&gt;
State Of Python

Presented by Richard Jones

This talk will present a whirlwind update of the state of Python as of June
2010. It will cover the evolution of the language itself, its variants,
versions and veracity. It will cover the state of packaging, distributing and
pypi.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><guid>http://www.pyvideo.org/video/454/pyconau-2010--state-of-python</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/454_pyconau-2010-state-of-python.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-StateOfPython134-441.jpg"></media:thumbnail></item><item><title>PyConAU 2010: The future is soon!</title><link>http://www.pyvideo.org/video/480/pyconau-2010--the-future-is-soon</link><description>&lt;p&gt;Description&lt;/p&gt;
The future is soon!

Presented by Brian K Quinlan (Google)

This talk introduces PEP 3148, a proposed library that makes it easier to
build concurrent applications or modify existing application to exploit
opportunities for parallelism.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian K Quinlan</dc:creator><guid>http://www.pyvideo.org/video/480/pyconau-2010--the-future-is-soon</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/480_pyconau-2010-the-future-is-soon.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-TheFutureIsSoon488.png"></media:thumbnail></item><item><title>PyConAU 2010: Using Python for Natural Language Generation and Analysis</title><link>http://www.pyvideo.org/video/466/pyconau-2010--using-python-for-natural-language-g</link><description>&lt;p&gt;Description&lt;/p&gt;
Using Python for Natural Language Generation and Analysis

Presented by Tennessee J Leeuwenburg (Australian Government Bureau of
Meteorology)

Python is used within the Bureau of Meteorology to automatically generate
weather forecast text based on numerical data. In addition, the development
team has also used Python to introspect the forecast language and statistics
used in the past. NTLK is an open-source language processing toolkit which can
be used for visualising language patterns. This presentation will talk about
some of the techniques used for automatically describing datasets and also how
NTLK can be used to discover information about language uses and requirements
in an organisation.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tennessee J Leeuwenburg</dc:creator><guid>http://www.pyvideo.org/video/466/pyconau-2010--using-python-for-natural-language-g</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/466_pyconau-2010-using-python-for-natural-language-generation-and-analysis.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-UsingPythonForNaturalLanguageGenerationAndAnalysis972.png"></media:thumbnail></item><item><title>PyConAU 2010: Using Python in a scientific real-time data collection network</title><link>http://www.pyvideo.org/video/463/pyconau-2010--using-python-in-a-scientific-real-t</link><description>&lt;p&gt;Description&lt;/p&gt;
Using Python in a scientific real-time data collection network

Presented by Dr. Paul Dyson (Bureau of Meteorology)

Python is being increasingly used within the Solar and Terrestrial Radiation
Network at the Bureau of Meteorology. This Network consists of ten ground
stations across Australasia that track the sun, measuring the irradiance of
the sun and sky. This talk will outline the work of the Network, the changes
resulting from the introduction of Python in 2005, and advantages and some
difficulties of using Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Paul Dyson</dc:creator><guid>http://www.pyvideo.org/video/463/pyconau-2010--using-python-in-a-scientific-real-t</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/463_pyconau-2010-using-python-in-a-scientific-real-time-data-collection-network.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-UsingPythonInAScientificRealtimeDataCollectionNetwork865.png"></media:thumbnail></item><item><title>PyConAU 2010: Virtualisation Used in Development</title><link>http://www.pyvideo.org/video/464/pyconau-2010--virtualisation-used-in-development</link><description>&lt;p&gt;Description&lt;/p&gt;
Virtualisation Used in Development

Presented by Andrew Boag (Catalyst IT)

Some thoughts on why it makes sense to do your development inside some sort of
virtual container. There are real pluses for the grass-level developement
process, whether you have a large or small infrastructure.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Boag</dc:creator><guid>http://www.pyvideo.org/video/464/pyconau-2010--virtualisation-used-in-development</guid><media:thumbnail url="http://a.images.blip.tv/Pyconau-VirtualisationUsedInDevelopment614.png"></media:thumbnail></item><item><title>PyConAU 2010: What's eating my memory?</title><link>http://www.pyvideo.org/video/478/pyconau-2010--what--39-s-eating-my-memory</link><description>&lt;p&gt;Description&lt;/p&gt;
What's eating my memory?

Presented by Andrew Bennetts (Canonical)

Ever wondered why your Python process has consumed 2 gigabytes of memory
overnight? Ever torn out your hair trying to find out why? Andrew will show
you some tools and techniques that can help you investigate.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Bennetts</dc:creator><guid>http://www.pyvideo.org/video/478/pyconau-2010--what--39-s-eating-my-memory</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/478_pyconau-2010-what-s-eating-my-memory.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-WhatsEatingMyMemory591.png"></media:thumbnail></item><item><title>PyConAU 2010: What's new in Django 1.2</title><link>http://www.pyvideo.org/video/465/pyconau-2010--what--39-s-new-in-django-1-2</link><description>&lt;p&gt;Description&lt;/p&gt;
What's new in Django 1.2

Presented by Dr. Russell Keith-Magee (Django Project)

Django 1.2 added a number of major, long anticipated features to Django. This
talk will give an overview of these new features (both large and small), as
well as giving a look into what the future may hold for Django.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dr. Russell Keith-Magee</dc:creator><guid>http://www.pyvideo.org/video/465/pyconau-2010--what--39-s-new-in-django-1-2</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/465_pyconau-2010-what-s-new-in-django-1-2.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-WhatsNewInDjango12332.png"></media:thumbnail></item><item><title>PyConAU 2010: whoops I deployed again - new ways to get your app in the cloud</title><link>http://www.pyvideo.org/video/469/pyconau-2010--whoops-i-deployed-again---new-ways-</link><description>&lt;p&gt;Description&lt;/p&gt;
whoops I deployed again - new ways to get your app in the cloud

Presented by Dylan Jay (PretaWeb)

A overview of new tools for deploying python based applications to servers
including cloud inferstructure such as Amazon Ec2.

The talk will cover Ian Bicking's Silver Lining, zc.buildout, Fabric and
hostout. This talk will focus on how to get your first web app hosted easily.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dylan Jay</dc:creator><guid>http://www.pyvideo.org/video/469/pyconau-2010--whoops-i-deployed-again---new-ways-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pycon-au-2010/469_pyconau-2010-whoops-i-deployed-again-new-ways-to-get-your-app-in-the-cloud.flv" length="None" type="video/x-flv"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyconau-whoopsIDeployedAgainNewWaysToGetYourAppInTheCloud589.png"></media:thumbnail></item></channel></rss>