<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyCon US 2013</title><link>http://www.pyvideo.org/category/33/pycon-us-2013/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/33/pycon-us-2013/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 17 Mar 2013 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>ApplePy: An Apple ][ emulator in Python</title><link>http://www.pyvideo.org/video/1710/applepy-an-apple-emulator-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
ApplePy is an Apple ][ emulator written in Python. It combines emulation of the 6502 microprocessor with emulation of the keyboard, display (including graphics mode), speaker, cassette and disk drive. This talk will provide a background to Apple ][ internals then dive into the Python code and the challenges of emulating hardware.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Tauber</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1710/applepy-an-apple-emulator-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/ApplePy_An_Apple_emulator_in_P.mp4?Signature=3nW%2BLF%2FBZ2eFzz3cKw9UfPeI%2B4k%3D&amp;Expires=1363824802&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/ApplePy_An_Apple_emulator_in_P.mp4?Signature=3nW%2BLF%2FBZ2eFzz3cKw9UfPeI%2B4k%3D&amp;Expires=1363824802&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=EhK5JNx0irA" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/EhK5JNx0irA/hqdefault.jpg"></media:thumbnail></item><item><title>Become a logging expert in 30 minutes</title><link>http://www.pyvideo.org/video/1737/become-a-logging-expert-in-30-minutes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The logging module is one of the more complex areas of the Python standard library. In this talk you will learn how to leverage loggers, formatters, handlers and filters. In addition you will learn how to use dictConfig and other formats to manage logging settings for your applications.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin M. Roy</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1737/become-a-logging-expert-in-30-minutes</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Become_a_logging_expert_in_30_.mp4?Signature=VBSOdbPpmCCK%2BfZcvC3XWhqdXc4%3D&amp;Expires=1363826980&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Become_a_logging_expert_in_30_.mp4?Signature=VBSOdbPpmCCK%2BfZcvC3XWhqdXc4%3D&amp;Expires=1363826980&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=24_4WWkSmNo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/24_4WWkSmNo/hqdefault.jpg"></media:thumbnail></item><item><title>Beginners Welcome: From Zero to GUIs in Four Months, via Writing a Tutorial</title><link>http://www.pyvideo.org/video/1841/beginners-welcome-from-zero-to-guis-in-four-mont</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Discover how in four months I went from insecure beginner to happy writer of a GUI toolkit documentation!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marta Maria Casetti</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1841/beginners-welcome-from-zero-to-guis-in-four-mont</guid><enclosure url="https://www.youtube.com/watch?v=1cpSCehCO2M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/1cpSCehCO2M/hqdefault.jpg"></media:thumbnail></item><item><title>Biological Data Integration and Application for Personalized Cancer Treatment</title><link>http://www.pyvideo.org/video/1827/biological-data-integration-and-application-for-p</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Personalized approach is important in the area of cancer treatment.  We constructed a data-warehouse which integrates 3 ontologies and 4 clinical databases semantically using Django's ORM. For the clinical use, a mobile web application was developed so that patients can get their personal pharmaceutical information about cancer therapy.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hyungyong Kim</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1827/biological-data-integration-and-application-for-p</guid><enclosure url="https://www.youtube.com/watch?v=c9WHnfq7Txc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/c9WHnfq7Txc/hqdefault.jpg"></media:thumbnail></item><item><title>Biomedical Ontologies with Python</title><link>http://www.pyvideo.org/video/1821/biomedical-ontologies-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Biomedical ontologies are large, graphical data structures that describe concepts in biology and medicine. An ongoing area of research is determining how to integrate these from different sub-domains, since they are too large to integrate by hand. This describes an elaborate approach using machine learning and distributed computing, implemented in python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Freckleton</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1821/biomedical-ontologies-with-python</guid><enclosure url="https://www.youtube.com/watch?v=2iAX3Xu1nhc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/2iAX3Xu1nhc/hqdefault.jpg"></media:thumbnail></item><item><title>Closing Address</title><link>http://www.pyvideo.org/video/1763/closing-address</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Closing remarks from Jesse Noller.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jesse Noller</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1763/closing-address</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Closing_Address.mp4?Signature=02AfO9EdkcN9WrD36T2RU09F7LQ%3D&amp;Expires=1363828871&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Closing_Address.mp4?Signature=02AfO9EdkcN9WrD36T2RU09F7LQ%3D&amp;Expires=1363828871&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=36UDNn_kS7Q" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/36UDNn_kS7Q/hqdefault.jpg"></media:thumbnail></item><item><title>Collecting &amp; Analyzing Financial Data</title><link>http://www.pyvideo.org/video/1825/collecting-analyzing-financial-data</link><description>&lt;p&gt;Abstract&lt;/p&gt;
No matter what type of investor you are, short term swing trader or long term fundamentalist, we all agree that data is an important element to making a financial decision. This poster will outline the details of how one can use Python and Scipy to collect and analyze data in the arena of the stock market using real time data from various sources to help outline some key numbers to help investors.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Xu</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1825/collecting-analyzing-financial-data</guid><enclosure url="https://www.youtube.com/watch?v=yuibO58XwzM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i2.ytimg.com/vi/yuibO58XwzM/hqdefault.jpg"></media:thumbnail></item><item><title>DaNKInDaB - A New Approach to Servers</title><link>http://www.pyvideo.org/video/1837/dankindab-a-new-approach-to-servers</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The idea of having a web-configurable web/application server with virtualhosting support using the best Python-based tools to integrate into the company toolset for the development team has always been intriguing to me. This tool tries to create a complete webserver enabling easy deployment of apps on on-premises hardware for both the lucky ones having a private cloud, and for those who don't. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marco Montanari</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1837/dankindab-a-new-approach-to-servers</guid><enclosure url="https://www.youtube.com/watch?v=FFo8XYBpdI8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/FFo8XYBpdI8/hqdefault.jpg"></media:thumbnail></item><item><title>Data Classification Using Python, Django and R</title><link>http://www.pyvideo.org/video/1844/data-classification-using-python-django-and-r</link><description>&lt;p&gt;Abstract&lt;/p&gt;
For a recent project, I had to develop a real time diagnostics tool with a web dashboard. The goal of this tool was to assist data experts with proactive monitoring and trouble-shooting our equipment deployed in the field.  So I decided to design a real time web dashboard with status updates and email alerts using Python, Django and R.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Meenal Pant</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1844/data-classification-using-python-django-and-r</guid><enclosure url="https://www.youtube.com/watch?v=CVEe4HU23xg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/CVEe4HU23xg/hqdefault.jpg"></media:thumbnail></item><item><title>Distributed Coordination with Python</title><link>http://www.pyvideo.org/video/1708/distributed-coordination-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Processes in a cluster can require controlled access to shared resources, tracking available processes, and sharing state. Unfortunately most tools in this category are oriented around Java. In this talk I cover how to use Python to interact with Apache Zookeeper -- a fault-tolerant consistent data-store -- to write coordinated distributed fault-tolerant applications in Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Bangert</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1708/distributed-coordination-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Distributed_Coordination_with_.mp4?Signature=J%2Bqr0P8RCHZlM%2FixEYDLHyoE9lE%3D&amp;Expires=1363824370&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Distributed_Coordination_with_.mp4?Signature=J%2Bqr0P8RCHZlM%2FixEYDLHyoE9lE%3D&amp;Expires=1363824370&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=v33PWLK_1HM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/v33PWLK_1HM/hqdefault.jpg"></media:thumbnail></item><item><title>Fusing Online and Face-to-Face Social Networks with Python and RFIDs</title><link>http://www.pyvideo.org/video/1802/fusing-online-and-face-to-face-social-networks-wi</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We describe the architecture of an application designed to enhance social interactions at conference gatherings by integrating data from online social networks and from wearable proximity sensors. The pipeline that processes the stream of sensor data and provides proximity-based services is implemented in Python and Twisted, and has been demonstrated to scale to thousands of simultaneous users.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andre Panisson,Ciro Cattuto,Marco Quaggiotto</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1802/fusing-online-and-face-to-face-social-networks-wi</guid><enclosure url="https://www.youtube.com/watch?v=U38CQ0oGARk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/U38CQ0oGARk/hqdefault.jpg"></media:thumbnail></item><item><title>"Good enough" is good enough!</title><link>http://www.pyvideo.org/video/1738/good-enough-is-good-enough</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Our culture's default assumption is that everybody should always be striving for perfection -- settling for anything less is seen as a regrettable compromise.  This is wrong in most software development situations: focus instead on keeping the software simple, just "good enough", launch it early, and iteratively improve, enhance, and re-factor it.  This is how software success is achieved!
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Martelli</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1738/good-enough-is-good-enough</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Good_enough_is_good_enough.mp4?Signature=Xl5oK1VHVW0ZsAEj7IF5Uh9u8HQ%3D&amp;Expires=1363821695&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Good_enough_is_good_enough.mp4?Signature=Xl5oK1VHVW0ZsAEj7IF5Uh9u8HQ%3D&amp;Expires=1363821695&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=yo4Uqq7NXQc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/yo4Uqq7NXQc/hqdefault.jpg"></media:thumbnail></item><item><title>GR - A Universal Framework for Visualization Applications</title><link>http://www.pyvideo.org/video/1839/gr-a-universal-framework-for-visualization-appl</link><description>&lt;p&gt;Abstract&lt;/p&gt;
For the creation of visualization programs there are a number of free and commercial tools and libraries. In a heterogeneous environment it points out that there is no universal solution that covers the specific needs in a scientific environment. GR is a framework for cross-platform visualization applications ranging from publication quality 2D graphs to the representation of complex 3D scenes.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josef Heinen</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1839/gr-a-universal-framework-for-visualization-appl</guid><enclosure url="https://www.youtube.com/watch?v=LqX_ZHwWRW8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/LqX_ZHwWRW8/hqdefault.jpg"></media:thumbnail></item><item><title>How Import Works</title><link>http://www.pyvideo.org/video/1707/how-import-works</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will go over how the simple ``from sys import version`` turns out to be slightly complicated. The details of imports -- from how the import statement is interpreted to deciding what object to return -- will be discussed. While the talk will discuss things from the perspective of Python 3.3 (and thus importlib), the overall semantics will (mostly) apply to older versions of Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Cannon</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1707/how-import-works</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_Import_Works.mp4?Signature=sQ7pDz3BBhMJR04cSsXNxR%2BhBN8%3D&amp;Expires=1363823628&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_Import_Works.mp4?Signature=sQ7pDz3BBhMJR04cSsXNxR%2BhBN8%3D&amp;Expires=1363823628&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=AqnxyRuenAg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/AqnxyRuenAg/hqdefault.jpg"></media:thumbnail></item><item><title>Internationalization and Localization Done Right</title><link>http://www.pyvideo.org/video/1746/internationalization-and-localization-done-right</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A short intro to all aspects of making your Python web app ready for an international audience, right from marking Python source, templates and Javascript for translation to working with translation services, maintaining and testing translation files. The talk will cover details on Python gettext and open-source packages such as Babel and Potpie. Examples are based on the Django i18n framework.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ruchi Varshney</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1746/internationalization-and-localization-done-right</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Internationalization_and_Local.mp4?Signature=rD5Dpg85EmSKtEhTs9v4QdPO3%2FI%3D&amp;Expires=1363828197&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Internationalization_and_Local.mp4?Signature=rD5Dpg85EmSKtEhTs9v4QdPO3%2FI%3D&amp;Expires=1363828197&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=QUFPPJMjn6k" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/QUFPPJMjn6k/hqdefault.jpg"></media:thumbnail></item><item><title>Is Python Beginner Friendly?</title><link>http://www.pyvideo.org/video/1814/is-python-newbie-friendly</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python is increasingly used as a teaching language for new programmers and touted as an easy language to learn for experienced developers. Its self proclaimed virtues of beauty, explicitness, simplicity and readability certainly should make it newbie and user-friendly... and mostly do. I'd like to talk with other Pythonistas about the parts that suck and what we can do to fix them!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Simeon Franklin</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1814/is-python-newbie-friendly</guid><enclosure url="https://www.youtube.com/watch?v=ryU5SVXO4Q0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/ryU5SVXO4Q0/hqdefault.jpg"></media:thumbnail></item><item><title>Iteration &amp; Generators: the Python Way</title><link>http://www.pyvideo.org/video/1709/iteration-generators-the-python-way</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Did you know that "for a, (b, c) in s:" is a valid Python line? From the elegant for statement through list/set/dict comprehensions and generator functions, this talk shows how the Iterator pattern is so deeply embedded in the syntax of Python, and so widely supported by its libraries, that some of its most powerful applications can be overlooked by programmers coming from other languages.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luciano Ramalho</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1709/iteration-generators-the-python-way</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Iteration_Generators_the_Pytho.mp4?Signature=N%2FHEIY4SeNxgdkPVuK4Zcx7hkF8%3D&amp;Expires=1363820921&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Iteration_Generators_the_Pytho.mp4?Signature=N%2FHEIY4SeNxgdkPVuK4Zcx7hkF8%3D&amp;Expires=1363820921&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=z4P6hSa6K9g" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/z4P6hSa6K9g/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote</title><link>http://www.pyvideo.org/video/1666/keynote-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Van Lindberg is a software engineer and practicing attorney. What he does most, though, is translate - from "lawyer" to "engineer" and back. He likes working with both computer code and legal code to get things done.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1666/keynote-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-0.mp4?Signature=1BehI01RPWL4HryrzApj8Q1EOd0%3D&amp;Expires=1363829412&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-0.mp4?Signature=1BehI01RPWL4HryrzApj8Q1EOd0%3D&amp;Expires=1363829412&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=2wr8veJzZiU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/2wr8veJzZiU/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote</title><link>http://www.pyvideo.org/video/1667/keynote-1</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Guido van Rossum is the author of the Python programming language. He continues to serve as the "Benevolent Dictator For Life" (BDFL), meaning that he continues to oversee the Python development process, making decisions where necessary. He is currently employed by Dropbox.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1667/keynote-1</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-1.mp4?Signature=BrUAnajsZ4FiiyAnymHnBa3uwV0%3D&amp;Expires=1364284367&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-1.mp4?Signature=BrUAnajsZ4FiiyAnymHnBa3uwV0%3D&amp;Expires=1364284367&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=n6dUWXRdt48" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/n6dUWXRdt48/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - Sunday evening</title><link>http://www.pyvideo.org/video/1858/sunday-evening-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Sunday evening lightning talks
&lt;p&gt;Description&lt;/p&gt;
* [00:00](#t=0m) - Python 3 on your Atari Desktop - Jeffrey Armstrong
* [04:58](#t=4m58s) - Armstrong, Open Source News Platform - Joshua Bonnett
* [09:34](#t=9m34s) - Metrics should be basic: xUnit for metrics - Jeremy Dunck
* [15:14](#t=15m14s) - The Answers - Luke Gotszling
* [20:20](#t=20m20s) - Core Python: the next generation - Wesley Chun
* [25:15](#t=25m15s) - q.q - Ka-Ping Yee
* [31:10](#t=31m13s) - Neckbeard: Because cloud deployment sucks - Wes Winham
* [36:54](#t=36m54s) - Abolishing the Traditional 9th to 12th Grade Structure of High Schools - Eric Matthes
* [41:43](#t=41m43s) - Python Anywhere - Henry Percival
* [46:35](#t=46m35s) - RapydScript: Translating Python to JavaScript - Charles Law
* [52:47](#t=52m47s) - PyCon Australia 2013 - Christopher Neugebauer
* [53:44](#t=53m44s) - (py) Fore! - Christopher Neugebauer</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1858/sunday-evening-lightning-talks</guid><enclosure url="https://www.youtube.com/watch?v=OL3De8BAhME" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i4.ytimg.com/vi/OL3De8BAhME/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - Sunday morning</title><link>http://www.pyvideo.org/video/1859/sunday-morning-lightning-talks-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Sunday morning lightning talks
&lt;p&gt;Description&lt;/p&gt;
* [00:00](#t=0m) - Your brain on Python - John Montgomery
* [04:45](#t=4m45s) - PyWorks: Making the dot asynchronous - Rene Nejsum
* [10:48](#t=10m48s) - TUF: The update framework - ?
* [15:42](#t=15m42s) - PyCon PL - Filip Kłębczyk
* [19:27](#t=19m27s) - gpodder.net - Filip Kłębczyk
* [22:02](#t=22m2s) - A Python-Powered Hack Day - Mike Pirnat</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1859/sunday-morning-lightning-talks-0</guid><enclosure url="https://www.youtube.com/watch?v=6wcP1aMl7wQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i3.ytimg.com/vi/6wcP1aMl7wQ/hqdefault.jpg"></media:thumbnail></item><item><title>Namespaces in Python</title><link>http://www.pyvideo.org/video/1749/namespaces-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In the infamous words of Tim Peters, "Namespaces are one honking great idea -- let's do more of those!" (PEP 20)  Python's type system is built on the basis of well-bounded namespaces.  Come look behind the curtain and you'll see Python in a whole new light.  We'll also talk about how to put this knowledge to use whenever you write modules, classes, and functions.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1749/namespaces-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Namespaces_in_Python.mp4?Signature=SayVC9MR98QOqoOJiN1l3Q3nyrE%3D&amp;Expires=1363822400&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Namespaces_in_Python.mp4?Signature=SayVC9MR98QOqoOJiN1l3Q3nyrE%3D&amp;Expires=1363822400&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=tApwHoxAEQI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/tApwHoxAEQI/hqdefault.jpg"></media:thumbnail></item><item><title>Plover: Thought to Text at 240 WPM</title><link>http://www.pyvideo.org/video/1706/plover-thought-to-text-at-240-wpm</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Stenographic technology has been locked down to expensive, proprietary hardware and software for decades, depriving the world of the most efficient text entry system devised to date. Plover, a free, cross-platform steno engine that works with $45 hardware, offers hackers and hobbyists the ability to type at up to 240 WPM in applications ranging from wearable computing to captioning to coding.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mirabai Knight</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1706/plover-thought-to-text-at-240-wpm</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Plover_Thought_to_Text_at_240_.mp4?Signature=UCzleADyitOTTFwgIse3LM30fBo%3D&amp;Expires=1363831392&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Plover_Thought_to_Text_at_240_.mp4?Signature=UCzleADyitOTTFwgIse3LM30fBo%3D&amp;Expires=1363831392&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Wpv-Qb-dB6g" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Wpv-Qb-dB6g/hqdefault.jpg"></media:thumbnail></item><item><title>Pony Object-Relational Mapper</title><link>http://www.pyvideo.org/video/1815/pony-object-relational-mapper</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pony is an object-relational mapper implemented in Python. It allows writing advanced SQL queries using plain Python in the form of a generator expression. This way queries look very concise. Pony implements the IdentityMap pattern, offers a solution for N+1 select problem, and has a visual editor for models.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexey Malashkevich</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1815/pony-object-relational-mapper</guid><enclosure url="https://www.youtube.com/watch?v=U__Z0HyMrCU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/U__Z0HyMrCU/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] A Fast and Efficient Python Development Process for Small Teams</title><link>http://www.pyvideo.org/video/1804/a-fast-and-efficient-python-development-process-f</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Ever had a feature take too long, not work, and make everybody crazy? Our small team has learned some great tips to speed up development without sacrificing quality and stability. Come see these hard learned ideas, and how they can be applied to your team.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Palakovich Carr</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1804/a-fast-and-efficient-python-development-process-f</guid><enclosure url="https://www.youtube.com/watch?v=vBDiU0tbOCk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/vBDiU0tbOCk/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] ApsimRegions: A Gridded Modeling Framework for the APSIM Crop Model</title><link>http://www.pyvideo.org/video/1836/apsimregions-a-gridded-modeling-framework-for-th</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster demonstrates how Python can be used in the Environmental and Earth Systems Sciences to create a framework for automating the process of preparing input, running in parallel, and processing output from existing computer models. The framework discussed, ApsimRegions, uses many built-in and third-party Python packages to accomplish these tasks specifically for the APSIM crop growth model.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Stack</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1836/apsimregions-a-gridded-modeling-framework-for-th</guid><media:thumbnail url="/static/videos/img/no_thumbnail.png"></media:thumbnail></item><item><title>[Poster] Atabox</title><link>http://www.pyvideo.org/video/1807/atabox</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Atabox is an $8 computer based of the Atmega328. It runs the webLinux Os and supports the bitlash and c programming languages. I am hoping to port python to the platform but have had no luck so far. It costs $8-$10 dollars. The interface is command line, but supports further graphical modifications.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian McJohn</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1807/atabox</guid><enclosure url="https://www.youtube.com/watch?v=-xS6scVTNSM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/-xS6scVTNSM/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Darkserver: Help to Debug Userspace</title><link>http://www.pyvideo.org/video/1831/darkserver-help-to-debug-userspace</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Darkserver is a set of tools and service written in Python to help developers to debug their applications &amp; libraries. Darkserver project was started to use Build-ID feature of compiler toolchains and help developer tools to identify exact package builds from which process images (e.g. core dumps) come. This can enable their analysis, debugging profiling. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kushal Das</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1831/darkserver-help-to-debug-userspace</guid><enclosure url="https://www.youtube.com/watch?v=WtluhxTZ7Qo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/WtluhxTZ7Qo/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] David vs Goliath: Fighting Big Budgets with Python</title><link>http://www.pyvideo.org/video/1803/david-vs-goliath-fighting-big-budgets-with-pytho</link><description>&lt;p&gt;Abstract&lt;/p&gt;
How do you compete with well funded corporations and other institutions when you’re a non-profit? Use Python to take advantage of the resources you didn’t know you had and compete for grants you thought you couldn’t get. Python has helped our small organization piggyback new research on existing efforts, win more grants, and share more ideas.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Waud</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1803/david-vs-goliath-fighting-big-budgets-with-pytho</guid><enclosure url="https://www.youtube.com/watch?v=CYLiwCsuB4A" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/CYLiwCsuB4A/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Developing an Early College IT/CS/Math Program Using Python</title><link>http://www.pyvideo.org/video/1806/developing-an-early-college-itcsmath-program-us</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster will present a summary of lessons learned and best practices developed for teaching programming and web development suffused with mathematics in a dual enrollment curriculum with non-traditional programming students.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Elkner</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1806/developing-an-early-college-itcsmath-program-us</guid><enclosure url="https://www.youtube.com/watch?v=DDJvwzk1nK8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/DDJvwzk1nK8/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Django Appointment Slots</title><link>http://www.pyvideo.org/video/1813/django-appointment-slots</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Best Practices for creating and booking Appointment Slots functionality. Many services marketplaces need or will need to build a system such as this. Building a booking system in-house gives you far better control and a much more elegant workflow rather than using a third-party scheduling service. We hope to share what we have learnt over the past year doing so.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amol Kher</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1813/django-appointment-slots</guid><enclosure url="https://www.youtube.com/watch?v=UkcZzco_4kQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/UkcZzco_4kQ/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Enabling High Throughput Immunobiology by Integrating Django, numpy, matplotlib, and SQLAlchemy</title><link>http://www.pyvideo.org/video/1835/enabling-high-throughput-immunobiology-by-integra</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Nodality is applying a novel technology, Single Cell Network Profiling (SCNP), to reveal biology and predict clinical outcome. We face unique engineering challenges related to lab workflows, mining complex data, and presenting data in compelling interactive visuals. We will share design and implementation considerations for integrating heterogeneous software tools needed to meet these challenges.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Rothenbuhler</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1835/enabling-high-throughput-immunobiology-by-integra</guid><enclosure url="https://www.youtube.com/watch?v=_1BJt8rWrJs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/_1BJt8rWrJs/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Next-Generation Immunobiology Data Integration, Analysis and Visualization</title><link>http://www.pyvideo.org/video/1846/next-generation-immunobiology-data-integration-a</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Nodality has pioneered a novel flow cytometry-based technology in the areas of oncology and autoimmunity to reveal underlying disease biology. We present a custom framework written in Python that uses Django, Matplotlib, MongoDB and Pandas to join this experimental data with clinical facts such as individual patient disease outcomes to develop actionable biological and clinical information.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alan Barber II</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1846/next-generation-immunobiology-data-integration-a</guid><enclosure url="https://www.youtube.com/watch?v=kBKxKjfyuCo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/kBKxKjfyuCo/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Read the Docs</title><link>http://www.pyvideo.org/video/1816/read-the-docs</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster will feature the site Read the Docs. It hosts documentation and other text related materials that are created with the Sphinx Documentation Generator. Come on by the poster to chat about Read the Docs, or talk about anything documentation related!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Holscher</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1816/read-the-docs</guid><enclosure url="https://www.youtube.com/watch?v=eon0B4k1-KA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/eon0B4k1-KA/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Retrieving Meaning from Words</title><link>http://www.pyvideo.org/video/1800/retrieving-meaning-from-words</link><description>&lt;p&gt;Abstract&lt;/p&gt;
FOSS@RIT is an applied research lab at Rochester Institute of Technology focused on promoting free/open source software and open web technologies. Recently, students have been using the Natural Language Toolkit (NLTK) libraries to solve interesting problems involving natural language; analyzing data from political tweets to personal emails.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathaniel Case</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1800/retrieving-meaning-from-words</guid><enclosure url="https://www.youtube.com/watch?v=PcrGhe3nepo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/PcrGhe3nepo/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] Spatial Clustering in Python</title><link>http://www.pyvideo.org/video/1832/spatial-clustering-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Density-based clustering allows the identification of objects from unstructured data. The DBSCAN and OPTICS algorithms allow clustering and classification of remotely-sensed points into objects; however, current implementations have been unable to handle the data volume produced by LiDAR (Light Detection And Ranging). Using modified kd-trees as a spatial index allows for increased scalability.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shane Grigsby</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1832/spatial-clustering-in-python</guid><enclosure url="https://www.youtube.com/watch?v=V3iy4BAJPEM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/V3iy4BAJPEM/hqdefault.jpg"></media:thumbnail></item><item><title>[Poster] The State of PyCscope</title><link>http://www.pyvideo.org/video/1824/the-state-of-pycscope</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PyCscope V1.0 has been released and we want to bring folks up to speed on the current state of its features and a bit about how it works.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Portante</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1824/the-state-of-pycscope</guid><enclosure url="https://www.youtube.com/watch?v=fbHBePJvqIQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/fbHBePJvqIQ/hqdefault.jpg"></media:thumbnail></item><item><title>Purely Python Imaging with Pymaging</title><link>http://www.pyvideo.org/video/1750/purely-python-imaging-with-pymaging</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A little over a year ago, frustration with the state of image processing in Python led me to start a project called pymaging. Pymaging is a pure Python image processing library that works on Python 2.x and 3.x. This talk will dive into why I started this project, how I dug into the problems, what I learned about image formats and my goals for the future of this project.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonas Obrist</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1750/purely-python-imaging-with-pymaging</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Purely_Python_Imaging_with_Pym.mp4?Signature=ozqT0HEGUYnrkzKj%2B8UKlOhv%2FB4%3D&amp;Expires=1363822839&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Purely_Python_Imaging_with_Pym.mp4?Signature=ozqT0HEGUYnrkzKj%2B8UKlOhv%2FB4%3D&amp;Expires=1363822839&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=OpnmcItfiHc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/OpnmcItfiHc/hqdefault.jpg"></media:thumbnail></item><item><title>PyNES: Python programming for Nintendo 8 bits.</title><link>http://www.pyvideo.org/video/1733/pynes-python-programming-for-nintendo-8-bits</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This lecture describes a journey guided by hardcore gaming experiences from the past and how that lead to development of PyNES. What started as a "Python ASM compiler for Nintendo 8 bits" and is now evolving as a "Python programming for Nintendo 8 bits". All the hacks and drawbacks faced will be shown. Told as an epic tale, that should encourage others to fulfil the same path.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guto Maia</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1733/pynes-python-programming-for-nintendo-8-bits</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/PyNES_Python_programming_for_N.mp4?Signature=uUJl1qkYf5v7Fp8maSNV9G7JKpo%3D&amp;Expires=1363825128&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/PyNES_Python_programming_for_N.mp4?Signature=uUJl1qkYf5v7Fp8maSNV9G7JKpo%3D&amp;Expires=1363825128&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=daJ1Q4GG9jw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/daJ1Q4GG9jw/hqdefault.jpg"></media:thumbnail></item><item><title>Python XMPP</title><link>http://www.pyvideo.org/video/1810/python-xmpp</link><description>&lt;p&gt;Abstract&lt;/p&gt;
XMPP (eXtensible Messaging and Presence Protocol) is a versatile protocol used for chat, social networking, content distribution, cloud management, embedded devices, and more. This poster covers several modern Python packages that make working with XMPP easier and examples of applications built with them.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Arc Riley</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1810/python-xmpp</guid><enclosure url="https://www.youtube.com/watch?v=BaijV6eJQ_Y" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/BaijV6eJQ_Y/hqdefault.jpg"></media:thumbnail></item><item><title>Reverse Engineering the Internet of Things</title><link>http://www.pyvideo.org/video/1829/reverse-engineering-the-internet-of-things</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This year I've reverse engineered two HTTP/Web enabled devices and written python clients for them. The Belkin Wemo [1] and the Philips Hue [2]. My poster session will cover methods materials and work.

[1] http://www.issackelly.com/blog/2012/08/04/wemo-api-hacking/
[2] http://www.issackelly.com/blog/2012/11/10/philips-hue-api-hacking/
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Issac Kelly</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1829/reverse-engineering-the-internet-of-things</guid><enclosure url="https://www.youtube.com/watch?v=iXdqBEr-p-g" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/iXdqBEr-p-g/hqdefault.jpg"></media:thumbnail></item><item><title>Rhys interviews CYAN</title><link>http://www.pyvideo.org/video/1856/rhys-interviews-cyan</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rhys Rhaven</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1856/rhys-interviews-cyan</guid><enclosure url="https://www.youtube.com/watch?v=s_2calLXNaY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/s_2calLXNaY/hqdefault.jpg"></media:thumbnail></item><item><title>rpy2: Use R from the Comfort of Python</title><link>http://www.pyvideo.org/video/1842/rpy2-use-r-from-the-comfort-of-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
R has become hard to avoid when working with data; there is hardly a method in statistics or visualization that is not available, and there are many methods that are originally only available in R.

The Python-to-R bridge opens the whole library of R functions, classes, and datasets to the Python programmer by exposing an embedded R process and its objects through a Python library.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurent Gautier</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1842/rpy2-use-r-from-the-comfort-of-python</guid><enclosure url="https://www.youtube.com/watch?v=MoA0uLcXDFQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/MoA0uLcXDFQ/hqdefault.jpg"></media:thumbnail></item><item><title>Serpint - Controlling Raspberry Pi GPIO with a Serial Port/Socket</title><link>http://www.pyvideo.org/video/1833/serpint-controlling-raspberry-pi-gpio-with-a-se</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Serpint is software for controlling the GPIO pins on a Raspberry Pi over a socket or serial port.  It can be used to control the GPIO pins from languages that don't already have a GPIO library, but do for sockets or serial, or from programs that expect a serial port, and do that from half a world away.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Louis Goessling</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1833/serpint-controlling-raspberry-pi-gpio-with-a-se</guid><enclosure url="https://www.youtube.com/watch?v=GJtYnufXvNE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/GJtYnufXvNE/hqdefault.jpg"></media:thumbnail></item><item><title>Server Log Analysis with Pandas</title><link>http://www.pyvideo.org/video/1745/server-log-analysis-with-pandas-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Use iPython, matplotlib, and Pandas to slice, dice, and visualize your application's behaviour through its logs.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1745/server-log-analysis-with-pandas-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Server_Log_Analysis_with_Panda.mp4?Signature=n9c7Z05AhoBwzxlBDngXk%2Fpf56U%3D&amp;Expires=1363827408&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Server_Log_Analysis_with_Panda.mp4?Signature=n9c7Z05AhoBwzxlBDngXk%2Fpf56U%3D&amp;Expires=1363827408&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=MbflVr-MBm0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/MbflVr-MBm0/hqdefault.jpg"></media:thumbnail></item><item><title>Use curses, don't swear</title><link>http://www.pyvideo.org/video/1748/use-curses-dont-swear</link><description>&lt;p&gt;Abstract&lt;/p&gt;
I find it very handy to be able to fire up the command line and make changes through a well-designed CLI tool. I'd like to show how the 3rd party urwid library or the built-in curses library can be used to build such tools easily.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sean Zicari</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1748/use-curses-dont-swear</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Use_curses_dont_swear.mp4?Signature=LQEUBCdnaUnokEGRYb2MjCMynic%3D&amp;Expires=1363828652&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Use_curses_dont_swear.mp4?Signature=LQEUBCdnaUnokEGRYb2MjCMynic%3D&amp;Expires=1363828652&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=eN1eZtjLEnU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/eN1eZtjLEnU/hqdefault.jpg"></media:thumbnail></item><item><title>Using Python to Code by Voice</title><link>http://www.pyvideo.org/video/1735/using-python-to-code-by-voice</link><description>&lt;p&gt;Abstract&lt;/p&gt;
I dictate my code using a voice recognition system with Python embedded in it.  In a fast paced live demo, I will code a small system and deploy it without touching the keyboard. I hope to convince you that voice recognition is no longer a crutch for the disabled or limited to plain prose.
&lt;p&gt;Description&lt;/p&gt;
Two years ago I developed a case of Emacs Pinkie (RSI) so severe my hands went numb and I could no longer type or work. Desperate, I tried voice recognition. At first programming with it was painfully slow but, as I couldn’t type, I persevered. After several months of vocab tweaking and duct-tape coding in Python and Emacs Lisp, I had a system that enabled me to code faster and more efficiently by voice than I ever had by hand.

In a fast-paced live demo, I will create a small system using Python, plus a few other languages for good measure, and deploy it without touching the keyboard. The demo gods will make a scheduled appearance. I hope to convince you that voice recognition is no longer a crutch for the disabled or limited to plain prose. It’s now a highly effective tool that could benefit all programmers. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tavis Rudd</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1735/using-python-to-code-by-voice</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_Python_to_Code_by_Voice.mp4?Signature=8iV87JN7k7IweE10nJanN%2FAUdVY%3D&amp;Expires=1363825863&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_Python_to_Code_by_Voice.mp4?Signature=8iV87JN7k7IweE10nJanN%2FAUdVY%3D&amp;Expires=1363825863&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=8SkdfdXWYaI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/8SkdfdXWYaI/hqdefault.jpg"></media:thumbnail></item><item><title>We Have, We Need - Disaster Relief in the Modern World</title><link>http://www.pyvideo.org/video/1817/we-have-we-need-disaster-relief-in-the-modern</link><description>&lt;p&gt;Abstract&lt;/p&gt;
**We Have, We Need** is a student-led project at the University of California, San Diego. WHWN is a supply-sharing and communication platform created for humanitarians and NGOs in disaster/crisis zones, currently targeted toward relief efforts in Haiti. Come learn how we cope with issues like frequent developer turnover, limited budgets, fluctuating team size, and varying experience levels.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jon Wong,Wes Vetter</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1817/we-have-we-need-disaster-relief-in-the-modern</guid><enclosure url="https://www.youtube.com/watch?v=kzK73CiQUY8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/kzK73CiQUY8/hqdefault.jpg"></media:thumbnail></item><item><title>Why Pyramid is awesome: the example of Facebook applications</title><link>http://www.pyvideo.org/video/1820/why-pyramid-is-awesome-to-build-facebook-applicat</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Beside the friends, walls and photos, Facebook is a platform where anybody can build applications or games taking advantage of the huge user base and connections between people.  Any web-capable language or framework can be used to do that, but this poster will show you why Pyramid is a most excellent choice.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Éric Araujo</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1820/why-pyramid-is-awesome-to-build-facebook-applicat</guid><enclosure url="https://www.youtube.com/watch?v=EGQBKRax-sE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/EGQBKRax-sE/hqdefault.jpg"></media:thumbnail></item><item><title>Worry-Free Parsers with Parsley</title><link>http://www.pyvideo.org/video/1736/worry-free-parsers-with-parsley</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Writing parsers has often been a task difficult for programmers to take on. Many of the tools available for parsing require writing grammar rules and code that work very different from everything else in Python. Parsley is a library that mixes the benefits of concise rule-based grammars with a parsing model that works the way you expect Python code to work.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Short</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1736/worry-free-parsers-with-parsley</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/WorryFree_Parsers_with_Parsley.mp4?Signature=8T3VOqVLqSdImhvtYB1PENbtlwo%3D&amp;Expires=1363826202&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/WorryFree_Parsers_with_Parsley.mp4?Signature=8T3VOqVLqSdImhvtYB1PENbtlwo%3D&amp;Expires=1363826202&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=t5X3ljCOFSY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/t5X3ljCOFSY/hqdefault.jpg"></media:thumbnail></item><item><title>XBlock: Courseware Components from edX</title><link>http://www.pyvideo.org/video/1843/xblock-courseware-components-from-edx</link><description>&lt;p&gt;Abstract&lt;/p&gt;
edX.org is building XBlock, an open-source component architecture for courseware.  It provides API's for creating course components of all kinds. Possible uses include: simple controls, new types of problems, new quiz structures, interactive simulations, and new navigation techniques.  We're hoping to expand awareness of XBlock, and also to hear from potential users about their needs.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1843/xblock-courseware-components-from-edx</guid><enclosure url="https://www.youtube.com/watch?v=dTS-nsf7d3Q" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/dTS-nsf7d3Q/hqdefault.jpg"></media:thumbnail></item><item><title>5 powerful pyramid features</title><link>http://www.pyvideo.org/video/1673/5-powerful-pyramid-features</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pyramid is a web framework designed to do very well the fundamentals of web applications. Even though it's minimalist in its goals, it provides strong features to let developers deal with these fundamentals. In this talk, we'll look at 5 specific Pyramid features that offer web developers unique flexibility and power. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlos de la Guardia</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1673/5-powerful-pyramid-features</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/5_powerful_pyramid_features.mp4?Signature=3Eupx7GWNqXnRhR%2B%2FFR%2BJDL9k24%3D&amp;Expires=1363647343&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/5_powerful_pyramid_features.mp4?Signature=3Eupx7GWNqXnRhR%2B%2FFR%2BJDL9k24%3D&amp;Expires=1363647343&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=kMx-kkJgoPM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/kMx-kkJgoPM/hqdefault.jpg"></media:thumbnail></item><item><title>All-Singing All-Dancing Python Bytecode</title><link>http://www.pyvideo.org/video/1777/all-singing-all-dancing-python-bytecode</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We all know Python is a bytecode interpreter, but what does that mean? Come find out! You'll learn what Python bytecodes are, what they do, and even how you can tinker with them. By the end of the talk you'll be an expert.  All code will be 100% Python 3--knowledge of C not required!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1777/all-singing-all-dancing-python-bytecode</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/AllSinging_AllDancing_Python_B.mp4?Signature=gkZS6EiSXUb3CASVBC1wHE4nkKU%3D&amp;Expires=1363669932&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/AllSinging_AllDancing_Python_B.mp4?Signature=gkZS6EiSXUb3CASVBC1wHE4nkKU%3D&amp;Expires=1363669932&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=CKu6d_v4Pqo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/CKu6d_v4Pqo/hqdefault.jpg"></media:thumbnail></item><item><title>Asset Management in Python</title><link>http://www.pyvideo.org/video/1792/asset-management-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
With the growth of Coffeescript, Less, SASS, etc..., compiling the assets for your project is becoming more useful.  This talk covers using a Python library called Webassets to automate your build process.  We specifically focus on getting your Javascript and CSS compiling automatically as you work.  We show examples of integrating with common web frameworks like Django and Flask.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Beau Lyddon,Robert Kluin</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1792/asset-management-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Asset_Management_in_Python.mp4?Signature=WGrpFAb2XZaUvEfp%2Faw0soeWxSc%3D&amp;Expires=1363812062&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Asset_Management_in_Python.mp4?Signature=WGrpFAb2XZaUvEfp%2Faw0soeWxSc%3D&amp;Expires=1363812062&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=AQB9eECueSI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/AQB9eECueSI/hqdefault.jpg"></media:thumbnail></item><item><title>Beyond Passwords: Secure Authentication with Mozilla Persona</title><link>http://www.pyvideo.org/video/1764/beyond-passwords-secure-authentication-with-mozi-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Mozilla Persona is a decentralized, cross-browser authentication system that completely eliminates website passwords. It's simple, secure, and privacy-protecting. This talk explores the design of Persona with a focus on adding it as a login option to Python-based webapps, drawing from Mozilla's own experience switching many Django (and non-Django) sites away from passwords and to Persona.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Callahan</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1764/beyond-passwords-secure-authentication-with-mozi-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Beyond_Passwords_Secure_Authen.mp4?Signature=u%2FEdlW4r4uLVxL2yW0vVaIQnKTM%3D&amp;Expires=1363665161&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Beyond_Passwords_Secure_Authen.mp4?Signature=u%2FEdlW4r4uLVxL2yW0vVaIQnKTM%3D&amp;Expires=1363665161&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=nJff23UdNAI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/nJff23UdNAI/hqdefault.jpg"></media:thumbnail></item><item><title>Boundaries</title><link>http://www.pyvideo.org/video/1670/boundaries</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An exploration of the boundaries between pieces of code, including: isolated testing, behavior vs. data, mutation vs. immutability, how data shape affords parallelism, transforming interface dependencies into data dependencies, and what it might look like to build systems using all of these to guide the boundaries between objects and components.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gary Bernhardt</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1670/boundaries</guid><enclosure url="https://www.youtube.com/watch?v=eOYal8elnZk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/eOYal8elnZk/hqdefault.jpg"></media:thumbnail></item><item><title>Building an image processing pipeline with Python</title><link>http://www.pyvideo.org/video/1702/building-an-image-processing-pipeline-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk covers the details of how to build a highly scalable image processing pipeline using Python and third-party open source libraries and tools such as OpenCV, NumPy, Tesseract, ImageMagick, Tornado, Nginx and MySQL.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Franck Chastagnol</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1702/building-an-image-processing-pipeline-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_an_image_processing_p.mp4?Signature=EXaUQ3HgpoZ6W4Jg6n7QxG25h44%3D&amp;Expires=1363655847&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_an_image_processing_p.mp4?Signature=EXaUQ3HgpoZ6W4Jg6n7QxG25h44%3D&amp;Expires=1363655847&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=B1d9dpqBDVA" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/B1d9dpqBDVA/hqdefault.jpg"></media:thumbnail></item><item><title>Building full-stack scientific applications in Python</title><link>http://www.pyvideo.org/video/1751/building-full-stack-scientific-applications-in-py</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has a large collection of tools for scientific computing.  However,
finding the right pieces and assembling them into a fast and scale-able app can
be a daunting task.  This talk will explore common requirements of scientific
apps and how to fulfill those from the Python ecosystem.  It will also provide a
blueprint for building apps using tools like PyQt, PyQwt, numpy, and HDF5.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Lee</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1751/building-full-stack-scientific-applications-in-py</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_fullstack_scientific_.mp4?Signature=UiaN0L3QQMRfPIxd2pzo9KlV%2Fdg%3D&amp;Expires=1363809374&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Building_fullstack_scientific_.mp4?Signature=UiaN0L3QQMRfPIxd2pzo9KlV%2Fdg%3D&amp;Expires=1363809374&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=dQHPV6sVlls" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/dQHPV6sVlls/hqdefault.jpg"></media:thumbnail></item><item><title>Chef: Automating web application infrastructure</title><link>http://www.pyvideo.org/video/1756/chef-automating-web-application-infrastructure</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk is going to focus on using Chef to create web application projects, specifically a python project with a Django framework. Chef is a configuration tool for managing infrastructure by allowing users to automatically and reproducibly configure installations on servers. This talk will cover what is Chef, why automated server configuration is important, and how Chef can be used personally.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1756/chef-automating-web-application-infrastructure</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Chef_Automating_web_applicatio.mp4?Signature=A6raCR8Q43LtmO2%2B0woXGl1WWD8%3D&amp;Expires=1363726619&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Chef_Automating_web_applicatio.mp4?Signature=A6raCR8Q43LtmO2%2B0woXGl1WWD8%3D&amp;Expires=1363726619&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=iRtb6q6RGHI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/iRtb6q6RGHI/hqdefault.jpg"></media:thumbnail></item><item><title>Community Event Planning</title><link>http://www.pyvideo.org/video/1775/community-event-planning</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Hosting in-person events is a great way to develop and grow your local Python community. If you’ve ever thought about hosting a code sprint, hackathon, (un)conference or workshop, this talk is for you. I’ll present quick overview of what you need to know to get started planning a successful event. Event planning workbook included.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christie Koehler</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1775/community-event-planning</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Community_Event_Planning.mp4?Signature=MjfDzFK8AiQw3u%2FodtIrVFQLyYI%3D&amp;Expires=1363668674&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Community_Event_Planning.mp4?Signature=MjfDzFK8AiQw3u%2FodtIrVFQLyYI%3D&amp;Expires=1363668674&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=gTIhUoa4G14" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/gTIhUoa4G14/hqdefault.jpg"></media:thumbnail></item><item><title>Copyright and You</title><link>http://www.pyvideo.org/video/1689/copyright-and-you</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The basics of copyright law mainly as applies to the United States but also covering the fundamental tenets that govern international law.  I include quite a bit of overview material as well as talk about specific licensing schemes, including open source schemes, and some recent trends including open hardware.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Siler</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1689/copyright-and-you</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Copyright_and_You.mp4?Signature=iXWD7Dk30HEoMpdZ9Z9N4Z7mTiA%3D&amp;Expires=1363651774&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Copyright_and_You.mp4?Signature=iXWD7Dk30HEoMpdZ9Z9N4Z7mTiA%3D&amp;Expires=1363651774&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=3J3bpgIZ9cM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/3J3bpgIZ9cM/hqdefault.jpg"></media:thumbnail></item><item><title>Crypto 101</title><link>http://www.pyvideo.org/video/1778/crypto-101</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An introduction to applied cryptography and information security suitable for programmers of all ages and skill levels.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurens Van Houtven</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1778/crypto-101</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Crypto_101.mp4?Signature=PJqxnkdAZqc5cr2dG3M0RRZ8kgk%3D&amp;Expires=1363731198&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Crypto_101.mp4?Signature=PJqxnkdAZqc5cr2dG3M0RRZ8kgk%3D&amp;Expires=1363731198&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=3rmCGsCYJF8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/3rmCGsCYJF8/hqdefault.jpg"></media:thumbnail></item><item><title>Customizing the Django Admin: The How and the Why</title><link>http://www.pyvideo.org/video/1755/customizing-the-django-admin-the-how-and-the-why</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The abstraction and the flexibility the Django admin offers is matched by few software, even today after half a decade of it's introduction. The speaker has customized it in many ways over the years. This talk reminisces over how supposedly large real world problems could be solved with relatively less development by leveraging the power of django admin and using a few techniques.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lakshman Prasad</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1755/customizing-the-django-admin-the-how-and-the-why</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Customizing_the_Django_Admin_T.mp4?Signature=bePdKYypv64MNXR1dAraGIqRbZc%3D&amp;Expires=1363662766&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Customizing_the_Django_Admin_T.mp4?Signature=bePdKYypv64MNXR1dAraGIqRbZc%3D&amp;Expires=1363662766&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ICgMg70aV7U" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/ICgMg70aV7U/hqdefault.jpg"></media:thumbnail></item><item><title>Cython vs SWIG, Fight!</title><link>http://www.pyvideo.org/video/1692/cython-vs-swig-fight</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Cython and SWIG are excellent, and yet very different tools for using C libraries from Python. The goal of this talk is to introduce both tools, discuss their strengths, their weaknesses, and the situations that clearly favor one tool over the other.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Kohler</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1692/cython-vs-swig-fight</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Cython_vs_SWIG_Fight.mp4?Signature=Hp%2BBNz0mnxVwBRxF7XxARERTAhk%3D&amp;Expires=1363653063&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Cython_vs_SWIG_Fight.mp4?Signature=Hp%2BBNz0mnxVwBRxF7XxARERTAhk%3D&amp;Expires=1363653063&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=mv0kfiepn3s" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/mv0kfiepn3s/hqdefault.jpg"></media:thumbnail></item><item><title>Death by a thousand leaks: what statically-analysing 370 Python extensions looks like</title><link>http://www.pyvideo.org/video/1698/death-by-a-thousand-leaks-what-statically-analys</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What happens when you run a custom C static analysis tool ("cpychecker") on hundreds of Python extensions?  I'll talk about the kinds of errors that my tool found, how to run it on your own code, and how to prevent memory leaks and crasher bugs in the C code of your Python extension modules.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Malcolm</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1698/death-by-a-thousand-leaks-what-statically-analys</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Death_by_a_thousand_leaks_what.mp4?Signature=LFGKdK2rHcrlEXcLgxDskixfRec%3D&amp;Expires=1363654459&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Death_by_a_thousand_leaks_what.mp4?Signature=LFGKdK2rHcrlEXcLgxDskixfRec%3D&amp;Expires=1363654459&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=bblvGKzZfFI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/bblvGKzZfFI/hqdefault.jpg"></media:thumbnail></item><item><title>Designers + Developers: Collaborating on your Python project</title><link>http://www.pyvideo.org/video/1732/designers-developers-collaborating-on-your-pyt</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Working in teams is an important part of what we do as developers &amp; designers. Whether it's desktop applications or mobile sites, we work together to create successful end products. But how do we work together in different environments? What is the best work-flow for a mix of skill sets?

We'll be talking about our various methods &amp; work-flows that we found successful in working collaboratively.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Elman,Mark Lavin</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1732/designers-developers-collaborating-on-your-pyt</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Designers_Developers_Collabora.mp4?Signature=Fbe%2BpefqxiiSxqBH8hcBTLdr6CY%3D&amp;Expires=1363659044&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Designers_Developers_Collabora.mp4?Signature=Fbe%2BpefqxiiSxqBH8hcBTLdr6CY%3D&amp;Expires=1363659044&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=VVvqLrSMtxI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/VVvqLrSMtxI/hqdefault.jpg"></media:thumbnail></item><item><title>Dispatch Magic</title><link>http://www.pyvideo.org/video/1696/dispatch-magic</link><description>&lt;p&gt;Abstract&lt;/p&gt;
One of the most common tasks in modern web frameworks is to ease the task of writing bits of code that are then called by the framework. Handling this task is the first major undertaking of any web framework, and the part that most web frameworks have in common.

How do frameworks locate this code? 
What basic patterns apply to all frameworks?
How does this make me be a better web programmer?</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Bangert</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1696/dispatch-magic</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dispatch_Magic.mp4?Signature=I1dRj2zCJ56E8xCaL3%2BN7gqpgU4%3D&amp;Expires=1363653930&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dispatch_Magic.mp4?Signature=I1dRj2zCJ56E8xCaL3%2BN7gqpgU4%3D&amp;Expires=1363653930&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=wcqlGPWFHpk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/wcqlGPWFHpk/hqdefault.jpg"></media:thumbnail></item><item><title>Dynamic Code Patterns: Extending Your Applications with Plugins</title><link>http://www.pyvideo.org/video/1789/dynamic-code-patterns-extending-your-application</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python makes loading code dynamically easy, allowing you to configure and extend your application by discovering and loading extensions at runtime. This presentation will discuss the techniques for dynamic code loading used in several well-known applications and weigh the pros and cons of each approach.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1789/dynamic-code-patterns-extending-your-application</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dynamic_Code_Patterns_Extendin.mp4?Signature=fX7tgkDM6s3amTkcJbZx9ZkIhKA%3D&amp;Expires=1363811623&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Dynamic_Code_Patterns_Extendin.mp4?Signature=fX7tgkDM6s3amTkcJbZx9ZkIhKA%3D&amp;Expires=1363811623&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=7K72DPDOhWo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/7K72DPDOhWo/hqdefault.jpg"></media:thumbnail></item><item><title>Getting started with automated testing</title><link>http://www.pyvideo.org/video/1674/getting-started-with-automated-testing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The hardest part of testing is getting the ball rolling. Once you've picked your tools and started writing tests, the added confidence you have in making changes to your code, and the time you save in repetitive manual testing, can quickly become addictive! If you never got over that initial speedbump, or you've tried testing but it hasn't yet clicked, this talk is for you.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl Meyer</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1674/getting-started-with-automated-testing</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Getting_started_with_automated.mp4?Signature=%2BJoJe0lzZkPKULvHwqHzfZXTDHc%3D&amp;Expires=1363647083&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Getting_started_with_automated.mp4?Signature=%2BJoJe0lzZkPKULvHwqHzfZXTDHc%3D&amp;Expires=1363647083&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ukm64IUANwE" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/ukm64IUANwE/hqdefault.jpg"></media:thumbnail></item><item><title>How (Not) To Build An OSS Community</title><link>http://www.pyvideo.org/video/1742/how-not-to-build-an-oss-community</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A rough &amp; tumble guide, based on the pains of experience, of what to do/not do
when trying to build an OSS community.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindsley</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1742/how-not-to-build-an-oss-community</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_Not_To_Build_An_OSS_Commun.mp4?Signature=dHAOiq1G5xq8Gev%2FgixIPyd0Dkk%3D&amp;Expires=1363660433&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_Not_To_Build_An_OSS_Commun.mp4?Signature=dHAOiq1G5xq8Gev%2FgixIPyd0Dkk%3D&amp;Expires=1363660433&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=o0jY0_OEyRc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/o0jY0_OEyRc/hqdefault.jpg"></media:thumbnail></item><item><title>Integrating Jython with Java</title><link>http://www.pyvideo.org/video/1794/integrating-jython-with-java</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Jython provides a nearly seamless integration when using Java
code. Using Jython from Java is not nearly as seamless, at least not
yet. There are also several choices, depending on what you're doing,
from object factories to using Java Scripting (JSR-223) support. This
talk will discuss techniques, gotchas, and ongoing work to improve integration.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Baker</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1794/integrating-jython-with-java</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Integrating_Jython_with_Java.mp4?Signature=jIH0w7c3F7gGNuSF5f40ZT%2FSEdY%3D&amp;Expires=1363812490&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Integrating_Jython_with_Java.mp4?Signature=jIH0w7c3F7gGNuSF5f40ZT%2FSEdY%3D&amp;Expires=1363812490&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=LAWM0hALtAg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/LAWM0hALtAg/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - What Makes Python Awesome</title><link>http://www.pyvideo.org/video/1669/keynote-3</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Show the specific features that make Python more than just another scripting language.
&lt;p&gt;Description&lt;/p&gt;

Raymond Hettinger, a Python core developer for over decade,
offers his perspective on what differentiates Python from
other scripting languages.

Ten years ago, Python was equal to other scripting languages
in terms of its expressiveness.  Since then, it has pulled
very far ahead using a number of advanced technologies:
list comprehensions, iterators, generators, generator
expressions, decorators, context managers, metaclasses,
and abstract base classes.

Each of these capabilities were added in a way that respected
the language's reputation for readable, beautiful code.
Together, the toolset offers unique capabilities for
rapid application development and maintainable code.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1669/keynote-3</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-3.mp4?Signature=OVAc36g8DH807DBfeAy%2Bh09jQ%2FI%3D&amp;Expires=1363646252&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-3.mp4?Signature=OVAc36g8DH807DBfeAy%2Bh09jQ%2FI%3D&amp;Expires=1363646252&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=NfngrdLv9ZQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/NfngrdLv9ZQ/hqdefault.jpg"></media:thumbnail></item><item><title>Lessons Learned in Teaching Python</title><link>http://www.pyvideo.org/video/1793/lessons-learned-in-teaching-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Sharing what you know with others is an extremely rewarding experience, and may challenge and develop your knowledge of Python.

I will share my teaching experiences; covering venues, materials, lesson plans, technical difficulties, engagement, and more.

If you've considered teaching Python, this talk will give you insight into what it takes to keep your students engaged, and have some fun.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandra Strong,Christine Cheung</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1793/lessons-learned-in-teaching-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Lessons_Learned_in_Teaching_Py.mp4?Signature=TvDoj0BkPR30BktfHS22ztWnV1I%3D&amp;Expires=1363732828&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Lessons_Learned_in_Teaching_Py.mp4?Signature=TvDoj0BkPR30BktfHS22ztWnV1I%3D&amp;Expires=1363732828&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ZChp6OX59Tk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/ZChp6OX59Tk/hqdefault.jpg"></media:thumbnail></item><item><title>Let Them Configure!</title><link>http://www.pyvideo.org/video/1772/let-them-configure</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A look at possible approaches to introducing configurability to your Python application, and a quick analysis of the most common problems.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Łukasz Langa</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1772/let-them-configure</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Let_Them_Configure.mp4?Signature=rVEUIasLtYKU37mc4TNjV49zQ38%3D&amp;Expires=1363668156&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Let_Them_Configure.mp4?Signature=rVEUIasLtYKU37mc4TNjV49zQ38%3D&amp;Expires=1363668156&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=vvCwqHgZJc8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/vvCwqHgZJc8/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - Saturday evening</title><link>http://www.pyvideo.org/video/1855/saturday-evening-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Lightning talks from Saturday evening.
&lt;p&gt;Description&lt;/p&gt;
* [00:00](#t=0m) - Young Coders at PyCon 2013 - Katie Cunningham and Barbara Shaurette 
* [05:53](#t=5m53s) - Raspberry Pi connected to sensors - Jack Minardi
* [08:23](#t=8m23s) - Python &amp; ArcGIS for Transit Data Analysers - Amy Smith
* [13:58](#t=13m58s) - Software Version Management - Quinn Weaver
* [19:48](#t=19m48s) - Parts and Scons - Jason Kenny
* [25:13](#t=25m13s) - Debugging Python on Linux with Visual Studio - Steve Dower
* [37:35](#t=37m35s) - Titan Files for App Engine - Mike Fotinakis
* [43:40](#t=43m40s) - Using git as a mercurial client - Dusty Phillips</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1855/saturday-evening-lightning-talks</guid><enclosure url="https://www.youtube.com/watch?v=Ft6-r_vksDI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/Ft6-r_vksDI/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - Saturday morning</title><link>http://www.pyvideo.org/video/1854/saturday-morning-lightning-talks-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Lightning talks from Saturday morning.
&lt;p&gt;Description&lt;/p&gt;
* [00:00](#t=0s) - ToRo (Tornado Coroutines) - Jesse Jiryu Davis
* [04:45](#t=4m45s) - Retask: Queue for Humans - Kushal Das
* [09:15](#t=9m15s) - Pythonic Andragogy: Python for Adults - Kirby Urner
* [16:00](#t=16m) - How and why a Java expert switched to Python - Ron Cox
* [22:10](#t=22m10s) - Coding across America - Andrew
* [25:05](#t=25m9s) - gitstreams.com - Justin Abrahms
* [26:58](#t=26m58s) - Jesse Noller interlude
* [30:30](#t=30m30s) - PyCharm - Dmitry Jemerov
* [36:10](#t=36m10s) - NASperry Pi - Mark Ransom
* [41:30](#t=41m30s) - NES, JavaScript and a Browser - ?
* [46:05](#t=46m5s) - EuroSciPy 2013: Come to our conference! - Mike Müller
* [48:07](#t=48m7s) - PyWeek: Join our week and write a game! - Richard Jones
* [51:13](#t=51m13s) - Don't make people watch what you type - Stuart Williams
* [54:00](#t=54m) - Job Security (in Python) - Christopher Neugebauer
* [59:09](#t=59m9s) - Using Python to make universal education truly universal: KA Lite - Jamie Alexandre</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1854/saturday-morning-lightning-talks-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/saturday_morning_lightning_tal.mp4?Signature=WChecG%2F%2FVuygEpM2ZQzjkkgDpnQ%3D&amp;Expires=1364776385&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/saturday_morning_lightning_tal.mp4?Signature=WChecG%2F%2FVuygEpM2ZQzjkkgDpnQ%3D&amp;Expires=1364776385&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=pYZNLOKEE5I" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/pYZNLOKEE5I/hqdefault.jpg"></media:thumbnail></item><item><title>Location, Location, Location</title><link>http://www.pyvideo.org/video/1752/location-location-location</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Are you building a Django application that needs to handle geographic location data? Are you unsure how to tackle using spatial databases, how to jump into using GeoDjango or how to allow users to query for data by, for example, zip code? I'll go over how to use GeoDjango, lessons learned in using spatial databases, and how I built an API exposing distance query functionality. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Grace</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1752/location-location-location</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Location_Location_Location.mp4?Signature=UT%2BeIteo9Uyv0nBl1H2gt8Fe4yo%3D&amp;Expires=1363661428&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Location_Location_Location.mp4?Signature=UT%2BeIteo9Uyv0nBl1H2gt8Fe4yo%3D&amp;Expires=1363661428&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=g7ka98Pq5vs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/g7ka98Pq5vs/hqdefault.jpg"></media:thumbnail></item><item><title>Logical Failures</title><link>http://www.pyvideo.org/video/1753/logical-failures</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Programmers are, by the nature of their work, logicians. However, logic can be more challenging than we sometimes think, and it's easy for us to make logical mistakes, especially when they're to justify a proposition we already believe. This is, at its core, what makes us not very good at testing our own stuff, and what makes architecting a technical system so challenging.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1753/logical-failures</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Logical_Failures.mp4?Signature=inPj90UWuHeowhSGDZkuMQqjAnY%3D&amp;Expires=1363661890&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Logical_Failures.mp4?Signature=inPj90UWuHeowhSGDZkuMQqjAnY%3D&amp;Expires=1363661890&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=99l6NCL24Ek" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/99l6NCL24Ek/hqdefault.jpg"></media:thumbnail></item><item><title>Making Apache suck less for hosting Python web applications.</title><link>http://www.pyvideo.org/video/1773/making-apache-suck-less-for-hosting-python-web-ap</link><description>&lt;p&gt;Abstract&lt;/p&gt;
It is not hard to find developers who will tell you that Apache sucks for running Python web applications. Is there a valid basis to such claims or have they simply been misguided by the views of others? This talk will endeavor to shine a light on the realities of and limitations in working with Apache, as well as the challenges in implementing the mod_wsgi module for Apache.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1773/making-apache-suck-less-for-hosting-python-web-ap</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Making_Apache_suck_less_for_ho.mp4?Signature=wTXuIyfGSxJeWV3oCdtylBmM2yM%3D&amp;Expires=1363728242&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Making_Apache_suck_less_for_ho.mp4?Signature=wTXuIyfGSxJeWV3oCdtylBmM2yM%3D&amp;Expires=1363728242&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=k6Erh7oHvns" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/k6Erh7oHvns/hqdefault.jpg"></media:thumbnail></item><item><title>Mobile Application Testing with Python and Selenium</title><link>http://www.pyvideo.org/video/1699/mobile-application-testing-with-python-and-seleni</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Selenium has grown to be a mature platform on the desktop, but with 'mobile now' being the mantra for so many companies, can we use Selenium to effectively test mobile apps? What about Native apps? This talk will cover using Python to test mobile web applications with Selenium, as well as an in depth overview of the future of Selenium to test Native iOS and Android applications. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Carr</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1699/mobile-application-testing-with-python-and-seleni</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Mobile_Application_Testing_wit.mp4?Signature=qkiNmx41Y2plD6mfJ6XexhP%2F4jQ%3D&amp;Expires=1363654868&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Mobile_Application_Testing_wit.mp4?Signature=qkiNmx41Y2plD6mfJ6XexhP%2F4jQ%3D&amp;Expires=1363654868&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=DhOv3HegnIw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/DhOv3HegnIw/hqdefault.jpg"></media:thumbnail></item><item><title>MTO On Blast: Using Python's Natural Language Toolkit to Model Gossip Blogs</title><link>http://www.pyvideo.org/video/1790/mto-on-blast-using-pythons-natural-language-too</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk describes a project that uses the Natural Language Toolkit to build a language model from a gossip blog. The tone is light-hearted, but manages to introduce some core concepts in Python's most popular NLP library as well as some basics on computational linguistics and programming in Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Elwell</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1790/mto-on-blast-using-pythons-natural-language-too</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/MTO_On_Blast_Using_Pythons_Nat.mp4?Signature=MVbDRxfzQph0B0JvdvJ3ARz0L8w%3D&amp;Expires=1363672107&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/MTO_On_Blast_Using_Pythons_Nat.mp4?Signature=MVbDRxfzQph0B0JvdvJ3ARz0L8w%3D&amp;Expires=1363672107&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=STikIKmsOy8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/STikIKmsOy8/hqdefault.jpg"></media:thumbnail></item><item><title>Numba: A Dynamic Python compiler for Science</title><link>http://www.pyvideo.org/video/1774/numba-a-dynamic-python-compiler-for-science</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Numba is a compiler for Python syntax that uses the LLVM library and llvmpy to convert specifically decorated Python functions to machine code at run-time.   It allows Python syntax to be used to do scientific and numerical computing that is blazing fast yet tightly integrated with the CPython run-time.      </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Florisson,Travis Oliphant</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1774/numba-a-dynamic-python-compiler-for-science</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Numba_A_Dynamic_Python_compile.mp4?Signature=vdldXchitKTofs3kzoTCR9UQ5bo%3D&amp;Expires=1363810103&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Numba_A_Dynamic_Python_compile.mp4?Signature=vdldXchitKTofs3kzoTCR9UQ5bo%3D&amp;Expires=1363810103&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=COglHpt7KSs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/COglHpt7KSs/hqdefault.jpg"></media:thumbnail></item><item><title>Panel: Directions for Packaging</title><link>http://www.pyvideo.org/video/1731/panel-directions-for-packaging</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What needs to happen to finally offer a first-class packaging
experience to Python users? Several of the people working directly on
that problem will be here to answer your questions.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Holth,Éric Araujo,Jason R. Coombs,JIm Fulton,Marcus Smith,Nick Coghlan,Richard Jones</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1731/panel-directions-for-packaging</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Panel_Directions_for_Packaging.mp4?Signature=eQptpaf3Gdv4Upvxsm4x9%2BvzRP0%3D&amp;Expires=1363808957&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Panel_Directions_for_Packaging.mp4?Signature=eQptpaf3Gdv4Upvxsm4x9%2BvzRP0%3D&amp;Expires=1363808957&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=ePFWp3oSfyU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/ePFWp3oSfyU/hqdefault.jpg"></media:thumbnail></item><item><title>Porting Django apps to Python 3</title><link>http://www.pyvideo.org/video/1787/porting-django-apps-to-python-3</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Django 1.5 now supports Python 3, so now's the time to start thinking about porting your apps and sites. Come see how! I'll talk about the porting techniques that work, and present two case studies: porting a site, and porting a reusable app.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kaplan-Moss</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1787/porting-django-apps-to-python-3</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Porting_Django_apps_to_Python_.mp4?Signature=Zaxe%2F5%2Fb0CFSwBBhxTn%2FcaDIidQ%3D&amp;Expires=1363811222&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Porting_Django_apps_to_Python_.mp4?Signature=Zaxe%2F5%2Fb0CFSwBBhxTn%2FcaDIidQ%3D&amp;Expires=1363811222&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=cJMGvAYYUyY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/cJMGvAYYUyY/hqdefault.jpg"></media:thumbnail></item><item><title>Pyramid Auth Is Hard, Let's Ride Bikes</title><link>http://www.pyvideo.org/video/1691/pyramid-auth-is-hard-lets-ride-bikes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pyramid web framework authentication and authorization subsystems are powerful and pluggable, but using them to their max isn't always easy.  This talk will discuss how to get the most out of those subsystems.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1691/pyramid-auth-is-hard-lets-ride-bikes</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pyramid_Auth_Is_Hard_Lets_Ride.mp4?Signature=IJldsBUzccegpBXE2a2LiQRktjY%3D&amp;Expires=1363652629&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pyramid_Auth_Is_Hard_Lets_Ride.mp4?Signature=IJldsBUzccegpBXE2a2LiQRktjY%3D&amp;Expires=1363652629&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=k20hBed8I9M" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/k20hBed8I9M/hqdefault.jpg"></media:thumbnail></item><item><title>Python at Netflix</title><link>http://www.pyvideo.org/video/1743/python-at-netflix</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Come find out how Netflix uses Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Corey Bertram,Jeremy Edberg,Roy Rapoport</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1743/python-at-netflix</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Advanced_Django_Forms_Usage.mp4?Signature=ndHFHflQ0qFNLMEWBmCMjn5fI5U%3D&amp;Expires=1363660832&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Advanced_Django_Forms_Usage.mp4?Signature=ndHFHflQ0qFNLMEWBmCMjn5fI5U%3D&amp;Expires=1363660832&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=poBc5__tKgU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/poBc5__tKgU/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Humans</title><link>http://www.pyvideo.org/video/1785/python-for-humans-1</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python’s ecosystem is held up to a high standard, but it falls short in a few key areas. A handful of crucial APIs are an absolute pain to work with. We’ll go over where these APIs went wrong and learn about strong and elegant API design. The high barriers to entry in Python will be discussed. Potential solutions will be proposed. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Reitz</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1785/python-for-humans-1</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Getting_Python_and_Django_Thro.mp4?Signature=QZTC36G3tjbxEoaC9FtitPfiptw%3D&amp;Expires=1364652846&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Getting_Python_and_Django_Thro.mp4?Signature=QZTC36G3tjbxEoaC9FtitPfiptw%3D&amp;Expires=1364652846&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=QpkHt1hDYTo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/QpkHt1hDYTo/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Robotics and Hardware Control</title><link>http://www.pyvideo.org/video/1679/python-for-robotics-and-hardware-control</link><description>&lt;p&gt;Abstract&lt;/p&gt;
I build robots for a living and kinetic art for fun. I use Python as a front end, GUI control, and glue to talk to controllers, actuators, sensors, and peripherals.  I will present some example robots and kinetic art, and give some tips that I've learned from building everything from robotic desk lamps to automated surgical systems.  </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Foote</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1679/python-for-robotics-and-hardware-control</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Robotics_and_Hardwa.mp4?Signature=J8EnzFAJ1DI7fQoL7bgWd7dGRUU%3D&amp;Expires=1363649232&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Robotics_and_Hardwa.mp4?Signature=J8EnzFAJ1DI7fQoL7bgWd7dGRUU%3D&amp;Expires=1363649232&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=o2gBDqcO3DU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/o2gBDqcO3DU/hqdefault.jpg"></media:thumbnail></item><item><title>Python's Class Development Toolkit</title><link>http://www.pyvideo.org/video/1779/pythons-class-development-toolkit</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This is a short, but thorough tutorial on the Python's built-in toolset for creating classes.  We look at commonly encountered challenges and how to solve them using Python. 
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1779/pythons-class-development-toolkit</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pythons_Class_Development_Tool.mp4?Signature=Uv5WTjJ6EmwLYVN0VyTWGOtFAUc%3D&amp;Expires=1363810786&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pythons_Class_Development_Tool.mp4?Signature=Uv5WTjJ6EmwLYVN0VyTWGOtFAUc%3D&amp;Expires=1363810786&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=HTLu2DFOdTg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/HTLu2DFOdTg/hqdefault.jpg"></media:thumbnail></item><item><title>Python's  Law</title><link>http://www.pyvideo.org/video/1675/pythons-law</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Open source software is changing intellectual property law. The talk would cover recent cases on what elements of software may be copied without infringing copyright,  the scope of software patents, enforceability of licenses, damages for copyright infringement, and how the network of community support for projects such as Python may be more potent in litigation than a patent portfolio.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stephen McJohn</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1675/pythons-law</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pythons_Law.mp4?Signature=AKuljNdU%2BLPDzd5eRYuZyRYjgKk%3D&amp;Expires=1363647748&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pythons_Law.mp4?Signature=AKuljNdU%2BLPDzd5eRYuZyRYjgKk%3D&amp;Expires=1363647748&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=0-e2-gGr2aU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/0-e2-gGr2aU/hqdefault.jpg"></media:thumbnail></item><item><title>Realtime Tracking and Mapping of Geographic Objects using Python</title><link>http://www.pyvideo.org/video/1771/realtime-tracking-and-mapping-of-geographic-objec</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Non-trivial mapping and location-centric applications are a beast of their own in terms indexing/querying/analyzing. Realtime tracking geo-applications add an even greater layer of complexity. 

In this talk we will give a short overview of the traditional OS web/mobile mapping architecture and datasets and extend it to include a realtime component. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ragi Burhum</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1771/realtime-tracking-and-mapping-of-geographic-objec</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Realtime_Tracking_and_Mapping_.mp4?Signature=y8wGVX0VvCcCvQ41fuhaPu0SPqA%3D&amp;Expires=1363667725&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Realtime_Tracking_and_Mapping_.mp4?Signature=y8wGVX0VvCcCvQ41fuhaPu0SPqA%3D&amp;Expires=1363667725&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=WQQr0UM17gI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/WQQr0UM17gI/hqdefault.jpg"></media:thumbnail></item><item><title>Scaling community diversity outreach</title><link>http://www.pyvideo.org/video/1687/scaling-community-diversity-outreach</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In March '10, the Boston Python user group ran its first gender diversity outreach workshop. In the time since, the group has has moved the needle and inspired other communities to do the same.
In this panel, you will hear communities like PyStar Philly, Railsbridge Boston, and the Chicago Python Workshop discuss their successes and difficulties with diversity-oriented outreach.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia,Dana Bauer,Daniel Choi,Jessica McKellar</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1687/scaling-community-diversity-outreach</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Scaling_community_diversity_ou.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Scaling_community_diversity_ou.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=SotJHYkwmVo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/SotJHYkwmVo/hqdefault.jpg"></media:thumbnail></item><item><title>Sink or swim: 5 life jackets to throw to New Coders</title><link>http://www.pyvideo.org/video/1782/sink-or-swim-5-life-jackets-to-throw-to-new-code</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Many want to learn to code, and many choose Python as a first language. You direct them to Learn Python the Hard Way, or Dive into Python. Great!  But now what? I will present 5 digestible projects to gradually progress the Python learner from near drowning to a decent swimmer. The goal is to have new coders feeling accomplished and to continuing learning.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lynn Root</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1782/sink-or-swim-5-life-jackets-to-throw-to-new-code</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Sink_or_swim_5_life_jackets_to.mp4?Signature=FbIUDIAwgFHNPR1duGXvtsnuoMU%3D&amp;Expires=1363731974&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Sink_or_swim_5_life_jackets_to.mp4?Signature=FbIUDIAwgFHNPR1duGXvtsnuoMU%3D&amp;Expires=1363731974&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=5hBMlTFfOJg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/5hBMlTFfOJg/hqdefault.jpg"></media:thumbnail></item><item><title>So Easy You Can Even Do It in JavaScript: Event-Driven Architecture for Regular Programmers</title><link>http://www.pyvideo.org/video/1681/so-easy-you-can-even-do-it-in-javascript-event-d</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this era of rich browser applications, everybody needs to know at least enough about events to write an 'onclick' handler. But events have a reputation for being confusing. In this talk I'll explain why events can be quite easy to understand if you think about them the right way, and how to scale your understanding from trivial browser JavaScript to distributed systems in Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glyph</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1681/so-easy-you-can-even-do-it-in-javascript-event-d</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/So_Easy_You_Can_Even_Do_It_in_.mp4?Signature=ncmsO42TIUsQPccVQA1dqjTP9c8%3D&amp;Expires=1363649490&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/So_Easy_You_Can_Even_Do_It_in_.mp4?Signature=ncmsO42TIUsQPccVQA1dqjTP9c8%3D&amp;Expires=1363649490&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=o7GR7cG7xJ0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/o7GR7cG7xJ0/hqdefault.jpg"></media:thumbnail></item><item><title>Solid Python Application Deployments For Everybody</title><link>http://www.pyvideo.org/video/1727/solid-python-application-deployments-for-everybod</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Do you dread the moment when your shiny new application is “ready for production”; except it isn’t because deploying is hard? How about moving existing apps or deploying one app to many servers? I’ll take you on a trip of dos and don’ts of deploying Python apps on UNIXy systems. Afterwards, you will be able to find the best way to deploy your code without repeating the mistakes of many before you.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1727/solid-python-application-deployments-for-everybod</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Solid_Python_Application_Deplo.mp4?Signature=VkGz52wEDrVa6j6hycujnccl%2BbI%3D&amp;Expires=1363808351&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Solid_Python_Application_Deplo.mp4?Signature=VkGz52wEDrVa6j6hycujnccl%2BbI%3D&amp;Expires=1363808351&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=voq4Mm58NY0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/voq4Mm58NY0/hqdefault.jpg"></media:thumbnail></item><item><title>Teaching with the IPython Notebook</title><link>http://www.pyvideo.org/video/1744/teaching-with-the-ipython-notebook</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The IPython Notebook offers a number of advantages when teaching programming. It eliminates the need to switch between the command line and an editor, provides a consistent interface for students, and provides an easy to share and reuse file format. I’ll discuss how I and others are using the IPython Notebook to reduce the mental load on students to make learning and teaching easier for everyone.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Davis</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1744/teaching-with-the-ipython-notebook</guid><enclosure url="https://www.youtube.com/watch?v=j91xUVgbQ9M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/j91xUVgbQ9M/hqdefault.jpg"></media:thumbnail></item><item><title>Things to make writing tests easier</title><link>http://www.pyvideo.org/video/1690/things-to-make-writing-tests-easier</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Writing tests is often hard enough as it is, without having to keep on writing the same boiler plate to set things up and check outcomes. I've collected a bunch of these tools that are all documented, flexible and have unit tests of their own. I'd like to share those with people interested in using them so they can spend more time writing code and less time worrying about how to test it properly.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Withers</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1690/things-to-make-writing-tests-easier</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Things_to_make_writing_tests_e.mp4?Signature=lfGv6QmPMUCSvknlNFJymFTqvnA%3D&amp;Expires=1363652187&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Things_to_make_writing_tests_e.mp4?Signature=lfGv6QmPMUCSvknlNFJymFTqvnA%3D&amp;Expires=1363652187&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=vW6EXOcYjIU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/vW6EXOcYjIU/hqdefault.jpg"></media:thumbnail></item><item><title>What is the Python Software Foundation?</title><link>http://www.pyvideo.org/video/1791/what-is-the-python-software-foundation</link><description>&lt;p&gt;Abstract&lt;/p&gt;
To a lot of people, the Python Software Foundation is a black box. After years of being on the outside of the box, a few years on the inside have given a good look at what this foundation is and why it matters. Come see what the PSF is about, what it's doing, and what you can do to help.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Curtin</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1791/what-is-the-python-software-foundation</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/What_is_the_Python_Software_Fo.mp4?Signature=lACJjzIVupLhGOPMXHHT0wom9IY%3D&amp;Expires=1363732403&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/What_is_the_Python_Software_Fo.mp4?Signature=lACJjzIVupLhGOPMXHHT0wom9IY%3D&amp;Expires=1363732403&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=A7Uw0bW1IUY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/A7Uw0bW1IUY/hqdefault.jpg"></media:thumbnail></item><item><title>What teachers really need from us</title><link>http://www.pyvideo.org/video/1697/what-teachers-really-need-from-us</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We need great resources and great teachers for the next generation of software developers. Hear about what teachers say about what they need and what the Python community has to offer K-12 classrooms.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Selena Deckelmann</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1697/what-teachers-really-need-from-us</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/What_teachers_really_need_from.mp4?Signature=VAOURgcJPlirbDQg8IcVGqJ2cOA%3D&amp;Expires=1363733787&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/What_teachers_really_need_from.mp4?Signature=VAOURgcJPlirbDQg8IcVGqJ2cOA%3D&amp;Expires=1363733787&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=2QELWoGNFdk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/2QELWoGNFdk/hqdefault.jpg"></media:thumbnail></item><item><title>Who are we? A sociological analysis of the indigenous Python tribe</title><link>http://www.pyvideo.org/video/1754/who-are-we-a-sociological-analysis-of-the-indige</link><description>&lt;p&gt;Abstract&lt;/p&gt;
If you look at a history of programming languages, over time languages combine or diverge to form new languages. Here we are, the people of Python, but who are we? Will we survive? Will we evolve from a tribe to state? What is important to us as a people? This talk will aim at providing insight by looking at data in Python community.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacqueline Kazil</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1754/who-are-we-a-sociological-analysis-of-the-indige</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Who_are_we_A_sociological_anal.mp4?Signature=XNozCKvDr9aERTsMVGY9m8nTd7Y%3D&amp;Expires=1363662229&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Who_are_we_A_sociological_anal.mp4?Signature=XNozCKvDr9aERTsMVGY9m8nTd7Y%3D&amp;Expires=1363662229&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=XkwfV8qjuK4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/XkwfV8qjuK4/hqdefault.jpg"></media:thumbnail></item><item><title>Who’s there?  - Home Automation with Arduino/RaspberryPi</title><link>http://www.pyvideo.org/video/1688/whos-there-home-automation-with-arduinorasp</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Have you ever found yourself obsessively checking UPS or FedEx tracking site to see if your package finally got delivered at your doorstep?  Or wondered when your contractor/gardener showed up to do their job?  

Come join me to learn how to build your own gadget to notify you when your package or contractor shows up at your doorstep!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rupa Dachere</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1688/whos-there-home-automation-with-arduinorasp</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Whos_there_Home_Automation_wit.mp4?Signature=OiQYak6QqIpdaTwFKawsm3FX0RI%3D&amp;Expires=1363651302&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Whos_there_Home_Automation_wit.mp4?Signature=OiQYak6QqIpdaTwFKawsm3FX0RI%3D&amp;Expires=1363651302&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=pkb5pr2Q0X0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/pkb5pr2Q0X0/hqdefault.jpg"></media:thumbnail></item><item><title>Why you should use Python 3 for text processing</title><link>http://www.pyvideo.org/video/1704/why-you-should-use-python-3-for-text-processing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python is a great language for text processing.  Each new version of Python--but especially the 3.x series--has enhanced this strength of the language. String (and byte) objects have grown some handy methods and some built-in functions have improved or been added.  More importantly, refinements and additions have been made to the standard library to cover  the most common tasks in text processing.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Mertz</dc:creator><pubDate>Sat, 16 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1704/why-you-should-use-python-3-for-text-processing</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Why_you_should_use_Python_3_fo.mp4?Signature=IyC9JddrmGSi0Ie5Cx%2BsViqQ%2FQ8%3D&amp;Expires=1363656906&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Why_you_should_use_Python_3_fo.mp4?Signature=IyC9JddrmGSi0Ie5Cx%2BsViqQ%2FQ8%3D&amp;Expires=1363656906&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=u950XEl7c20" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/u950XEl7c20/hqdefault.jpg"></media:thumbnail></item><item><title>API Design for Library Authors</title><link>http://www.pyvideo.org/video/1705/api-design-for-library-authors</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A library is code distributed in such a way that strangers can use it. In this talk we consider:  1) why Python developers make bad libraries and poor APIs; 2) how to make your library API maximally useful for others; 3) examples of real-world antipatterns involving APIs.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1705/api-design-for-library-authors</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/API_Design_for_Library_Authors.mp4?Signature=gAMJx%2FaofvonH%2BPYKhfcB6QXhQA%3D&amp;Expires=1363844926&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/API_Design_for_Library_Authors.mp4?Signature=gAMJx%2FaofvonH%2BPYKhfcB6QXhQA%3D&amp;Expires=1363844926&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Tedt47e9qsQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Tedt47e9qsQ/hqdefault.jpg"></media:thumbnail></item><item><title>Awesome Big Data Algorithms</title><link>http://www.pyvideo.org/video/1781/awesome-big-data-algorithms</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Random algorithms and probabilistic data structures are algorithmically efficient and can provide shockingly good practical results.  I will give a practical introduction, with live demos and bad jokes, to this fascinating algorithmic niche.  I will conclude with some discussions of how our group has applied this to large sequencing data sets (although this will not be the focus of the talk).</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1781/awesome-big-data-algorithms</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Awesome_Big_Data_Algorithms.mp4?Signature=v0TDlABlH2SJ7pIuTjnAovX8S%2F0%3D&amp;Expires=1363670524&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Awesome_Big_Data_Algorithms.mp4?Signature=v0TDlABlH2SJ7pIuTjnAovX8S%2F0%3D&amp;Expires=1363670524&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=jKBwGlYb13w" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/jKBwGlYb13w/hqdefault.jpg"></media:thumbnail></item><item><title>Better Documentation Through Automation: Creating Sphinx Extensions</title><link>http://www.pyvideo.org/video/1703/better-documentation-through-automation-creating</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Sphinx is an incredibly useful tool for creating attractive documentation for your project, but if all you ever use it for is converting reStructuredText files to HTML you are barely scratching the surface of its power. This presentation shows how easy it is to extend Sphinx by defining new markup processors, allowing you to take your documentation to the next level.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Doug Hellmann</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1703/better-documentation-through-automation-creating</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Better_Documentation_Through_A.mp4?Signature=x%2BqakLDq5hs5pGUGagOA4JY8iJE%3D&amp;Expires=1363656251&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Better_Documentation_Through_A.mp4?Signature=x%2BqakLDq5hs5pGUGagOA4JY8iJE%3D&amp;Expires=1363656251&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=8vwtgMkqE9o" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/8vwtgMkqE9o/hqdefault.jpg"></media:thumbnail></item><item><title>Blame it on Caesar: What you need to know about dates, times and time zones</title><link>http://www.pyvideo.org/video/1765/blame-it-on-caesar-what-you-need-to-know-about-d</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Time measurement is a complex area full of tricky problems and unexpected edge-cases. This fast-paced talk tells you how to avoid the pitfalls, and warn about the compromises.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lennart Regebro</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1765/blame-it-on-caesar-what-you-need-to-know-about-d</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Blame_it_on_Caesar_What_you_ne.mp4?Signature=iAy8Pajs6GW%2BxeZzM3mmnxLS5fY%3D&amp;Expires=1363665790&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Blame_it_on_Caesar_What_you_ne.mp4?Signature=iAy8Pajs6GW%2BxeZzM3mmnxLS5fY%3D&amp;Expires=1363665790&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=GBKqRhn0ekM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/GBKqRhn0ekM/hqdefault.jpg"></media:thumbnail></item><item><title>Composability Through Multiple Inheritance</title><link>http://www.pyvideo.org/video/1678/composability-through-multiple-inheritance</link><description>&lt;p&gt;Abstract&lt;/p&gt;
One of the turning points in history was when manufacturing embraced intermediate production. By creating simple components that can be integrated into complex products, manufacturers are able to build faster and cheaper, achieving better quality. In this tale of developer meets engineer,I describe how I'm using Python's inheritance model to bring this manufacturing reality to life in source code.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Łukasz Langa</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1678/composability-through-multiple-inheritance</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Composability_Through_Multiple.mp4?Signature=8%2BEewqwXKYGrp262L9VDh7VSdC8%3D&amp;Expires=1363648593&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Composability_Through_Multiple.mp4?Signature=8%2BEewqwXKYGrp262L9VDh7VSdC8%3D&amp;Expires=1363648593&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=6vljQRDzIa8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/6vljQRDzIa8/hqdefault.jpg"></media:thumbnail></item><item><title>Deploy your Python app in 5 min with a PaaS</title><link>http://www.pyvideo.org/video/1776/deploy-your-python-app-in-5-min-with-a-paas</link><description>&lt;p&gt;Abstract&lt;/p&gt;
How can you avoid servers and get back to coding? Platform-as-a-service (PaaS) makes deployment easy. But which PaaS do you choose and how do you get started? This talk will examine several of the leading PaaS providers and discuss their pros/cons. We'll also give examples for how to deploy the same app to each of them to see the differences.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nate Aune</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1776/deploy-your-python-app-in-5-min-with-a-paas</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Deploy_your_Python_app_in_5_mi.mp4?Signature=wcsy07i12q1OICu%2FKpFXaN9JZxQ%3D&amp;Expires=1363669286&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Deploy_your_Python_app_in_5_mi.mp4?Signature=wcsy07i12q1OICu%2FKpFXaN9JZxQ%3D&amp;Expires=1363669286&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=eJcFsaVu8HI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/eJcFsaVu8HI/hqdefault.jpg"></media:thumbnail></item><item><title>EduPsych Theory for Python Hackers: A Whirlwind Overview</title><link>http://www.pyvideo.org/video/1783/edupsych-theory-for-python-hackers-a-whirlwind-o</link><description>&lt;p&gt;Abstract&lt;/p&gt;
I've taken two years of graduate courses in engineering education. I save you $50k in tuition and hundreds of hours of reading and give you the short version for Pythonistas who care about education and outreach.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mel Chua</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1783/edupsych-theory-for-python-hackers-a-whirlwind-o</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/EduPsych_Theory_for_Python_Hac.mp4?Signature=s8bHb27Csp%2FC1DLq9OplnHLyClQ%3D&amp;Expires=1363841502&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/EduPsych_Theory_for_Python_Hac.mp4?Signature=s8bHb27Csp%2FC1DLq9OplnHLyClQ%3D&amp;Expires=1363841502&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=D9XJ9K3jfKk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/D9XJ9K3jfKk/hqdefault.jpg"></media:thumbnail></item><item><title>Elasticsearch (Part 1): Indexing and Querying</title><link>http://www.pyvideo.org/video/1784/elasticsearch-part-1-indexing-and-querying</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Elasticsearch provides an easy path to clusterable full-text search, with synonyms, faceting, and geographic math, but there's a paucity of written wisdom beyond its API docs. This talk, part 1 of a 2-part series, surveys its capabilities and shows how its internal data structures and algorithms work. With the groundwork laid, we explore how to choose efficient indexing and the right queries to make your apps go fast.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Rose</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1784/elasticsearch-part-1-indexing-and-querying</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Elasticsearch_Part_1_Indexing_.mp4?Signature=VARBFuaiUy2DUD8iwSfUhFLNAqQ%3D&amp;Expires=1363670991&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Elasticsearch_Part_1_Indexing_.mp4?Signature=VARBFuaiUy2DUD8iwSfUhFLNAqQ%3D&amp;Expires=1363670991&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=lWKEphKIG8U" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/lWKEphKIG8U/hqdefault.jpg"></media:thumbnail></item><item><title>Encapsulation with descriptors</title><link>http://www.pyvideo.org/video/1760/encapsulation-with-descriptors</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has no private fields, but the property decorator lets you replace public attributes with getters and setters without breaking client code. And the descriptor mechanism, used in Django for model field declarations, enables wide reuse of getter/setter logic via composition instead of inheritance. This talk explains how properties and descriptors work by refactoring a practical example.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luciano Ramalho</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1760/encapsulation-with-descriptors</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Encapsulation_with_descriptors.mp4?Signature=1nnn6X5f%2FI1zj0WkCpi1PRk8xlQ%3D&amp;Expires=1363664022&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Encapsulation_with_descriptors.mp4?Signature=1nnn6X5f%2FI1zj0WkCpi1PRk8xlQ%3D&amp;Expires=1363664022&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=5GG4jBxj4Ys" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/5GG4jBxj4Ys/hqdefault.jpg"></media:thumbnail></item><item><title>Fighting Cancer with Python</title><link>http://www.pyvideo.org/video/1761/fighting-cancer-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The “War on Cancer” was declared over 40 years ago. Despite tremendous advances in understanding cancer biology and developing cancer treatments, it remains a significant cause of suffering and death. We will describe Python-based data management and analysis tools and show how they have enabled a novel flow cytometry-based technology focused on studying disease biology to improve cancer outcomes.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Evensen</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1761/fighting-cancer-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Fighting_Cancer_with_Python.mp4?Signature=QPiROY8AHtIcb7WqbsnYs0JsV5I%3D&amp;Expires=1363664489&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Fighting_Cancer_with_Python.mp4?Signature=QPiROY8AHtIcb7WqbsnYs0JsV5I%3D&amp;Expires=1363664489&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=AnwkXglmLGQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/AnwkXglmLGQ/hqdefault.jpg"></media:thumbnail></item><item><title>Functional Programming with Python</title><link>http://www.pyvideo.org/video/1799/functional-programming-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python supports several functional programming concepts. The presentations shows how to use functional features such as functions as first-class objects, closures, side-effect-fee functions, currying, lazy evaluation, no mutable data structures and use of iterators instead of loops. The focus is on integration of these concepts in existing programs.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1799/functional-programming-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Functional_Programming_with_Py.mp4?Signature=NMmLYCjK7b%2BctX3RrUbJqbtERYg%3D&amp;Expires=1363842427&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Functional_Programming_with_Py.mp4?Signature=NMmLYCjK7b%2BctX3RrUbJqbtERYg%3D&amp;Expires=1363842427&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Ta1bAMOMFOI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Ta1bAMOMFOI/hqdefault.jpg"></media:thumbnail></item><item><title>Funding and Coordinating Python Projects via Non-Profits</title><link>http://www.pyvideo.org/video/1693/funding-and-coordinating-python-projects-via-non-</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Organizations like Software Freedom Conservancy and PSF provide essential non-profit infrastructure to the Python community.  For the past few years, Conservancy specifically helped raise funds to support 3 key Python projects: Mercurial, PyPy and Twisted. This talk discusses successes and challenges of funding Python software development in non-profits, and discuss plans to expand this activity.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bradley M. Kuhn</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1693/funding-and-coordinating-python-projects-via-non-</guid><enclosure url="https://www.youtube.com/watch?v=talJU_zhEpU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/talJU_zhEpU/hqdefault.jpg"></media:thumbnail></item><item><title>Gittip: Inspiring Generosity</title><link>http://www.pyvideo.org/video/1672/gittip-inspiring-generosity</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Gittip is a platform for sustainable crowd-funding. The site's primary funding mechanism is the "gift tip," a small, anonymous, weekly gift to a worthwhile person or project. These gifts are given with no strings attached, and represent a new model for funding free and open source software. Moreover, Gittip itself is funded on Gittip, with potential implications far beyond software.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad Whitacre</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1672/gittip-inspiring-generosity</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Gittip_Inspiring_Generosity.mp4?Signature=RgQFzDEMDS4hUpWXNUhAk%2BButng%3D&amp;Expires=1363646257&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Gittip_Inspiring_Generosity.mp4?Signature=RgQFzDEMDS4hUpWXNUhAk%2BButng%3D&amp;Expires=1363646257&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=iv7B7D9iIRI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/iv7B7D9iIRI/hqdefault.jpg"></media:thumbnail></item><item><title>How the Internet works</title><link>http://www.pyvideo.org/video/1677/how-the-internet-works</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk is an introduction to the Internet's structure and protocols through fun experiments from the Python perspective. We'll use Python libraries like Scapy and Twisted to explore what happens at a networking level as you surf the Web, how coffee shop Internet access works, and more.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1677/how-the-internet-works</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_the_Internet_works.mp4?Signature=L1cETuxtVNYyta27j7iIuSW3dh4%3D&amp;Expires=1363648321&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_the_Internet_works.mp4?Signature=L1cETuxtVNYyta27j7iIuSW3dh4%3D&amp;Expires=1363648321&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=hcPWAyxjd6E" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/hcPWAyxjd6E/hqdefault.jpg"></media:thumbnail></item><item><title>How to Except When You're Excepting</title><link>http://www.pyvideo.org/video/1680/how-to-except-when-youre-excepting</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk is an introduction to the practice of exception handling, aimed at those without a heavy CS background or years of experience, and who are thus unfamiliar with the technique.  Novices to Python will learn Python-specific techniques that make use of built-in exceptions and the context manager, as well as unusual but Pythonic ways of managing the flow control of their program.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Esther Nam</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1680/how-to-except-when-youre-excepting</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_to_Except_When_Youre_Excep.mp4?Signature=2YordQeuVexWo5pz6d7ywKy6YzA%3D&amp;Expires=1363843147&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/How_to_Except_When_Youre_Excep.mp4?Signature=2YordQeuVexWo5pz6d7ywKy6YzA%3D&amp;Expires=1363843147&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=I_d_qV3leZw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/I_d_qV3leZw/hqdefault.jpg"></media:thumbnail></item><item><title>If You Code, You Should Write</title><link>http://www.pyvideo.org/video/1786/if-you-code-you-should-write</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Writing isn't just about dry project documentation or docstrings. It can actually be fun and interesting, and it's an enormous benefit to the community. This talk makes the case that writing is our civic duty to our community, and gives some tips to get started writing for various different venues &amp; audiences.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian K. Jones</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1786/if-you-code-you-should-write</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/If_You_Code_You_Should_Write.mp4?Signature=sINS9PNerHnxQB5VBG89Vr3Wtxk%3D&amp;Expires=1363671350&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/If_You_Code_You_Should_Write.mp4?Signature=sINS9PNerHnxQB5VBG89Vr3Wtxk%3D&amp;Expires=1363671350&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=BBfW3m3TK0w" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/BBfW3m3TK0w/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Eben Upton</title><link>http://www.pyvideo.org/video/1668/keynote-2</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Eben Upton is a founder and trustee of the Raspberry Pi Foundation, and serves as its Executive Director. The Raspberry Pi is an ultra-low cost, credit card-sized computer designed to fill a much-needed technological gap in communities that cannot afford more traditional computing hardware and to provide children around the world the opportunity to learn programming.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eben Upton</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1668/keynote-2</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-2.mp4?Signature=kRNSljMwIs05%2Fmy6ml%2FJYCJrqAg%3D&amp;Expires=1363475469&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Keynote-2.mp4?Signature=kRNSljMwIs05%2Fmy6ml%2FJYCJrqAg%3D&amp;Expires=1363475469&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=PAHBZImmXsI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/PAHBZImmXsI/hqdefault.jpg"></media:thumbnail></item><item><title>Kivy: Building GUI and Mobile apps with Python</title><link>http://www.pyvideo.org/video/1701/kivy-building-gui-and-mobile-apps-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will introduce the Kivy project (http://kivy.org).  Kivy’s mission is to make building graphical user interfaces on any device fun, efficient, and pythonic. 

The talk will focus on giving attendees an overview of how they can use kivy to build exiting UIs and mobile apps.  </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mathieu Virbel,Thomas Hansen</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1701/kivy-building-gui-and-mobile-apps-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Kivy_Building_GUI_and_Mobile_a.mp4?Signature=Ikjm6wW613jfqLeaREw5cOSuYfs%3D&amp;Expires=1363836970&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Kivy_Building_GUI_and_Mobile_a.mp4?Signature=Ikjm6wW613jfqLeaREw5cOSuYfs%3D&amp;Expires=1363836970&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=yPWj6k5MRak" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/yPWj6k5MRak/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - Friday evening</title><link>http://www.pyvideo.org/video/1853/friday-evening-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Lightning talks from Friday evening.
&lt;p&gt;Description&lt;/p&gt;
* [00:00](#t=0m) - Intro to Lightning Talks - MC Larry Hasting
* [01:56](#t=1m56s) - Instrumental - Matthew J Desmarais
* [07:14](#t=7m14s) - Statvent - Christian Wyglendowski
* [12:04](#t=12m4s) - Switchboard - Kyle Adams
* [16:14](#t=16m14s) - hy: a lisp variant - Paul Tag
* [20:40](#t=20m40s) - 5 packages you need to know - Łukasz Langa
* [26:24](#t=26m24s) - The future of Linux containers - Solomon Hykes
* [32:08](#t=32m8s) - SciPy 2013 - Andy Terrel, Anthony Scopatz
* [35:39](#t=35m39s) - BirdFish - Preston Holmes
* [41:20](#t=41m20s) - Julython - Robert Myers
* [44:20](#t=44m20s) - CLDR: Common locale data repository -  Martin von Löwis
* [48:49](#t=48m49s) - Spine demo and Python port of runtime - Terry Simons</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Various</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1853/friday-evening-lightning-talks</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/friday_evening_lightning_talks.mp4?Signature=Sh3mjMIFJBg%2Fzpy%2BcnNCVYvikiE%3D&amp;Expires=1364873415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/friday_evening_lightning_talks.mp4?Signature=Sh3mjMIFJBg%2Fzpy%2BcnNCVYvikiE%3D&amp;Expires=1364873415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=1vui-LupKJI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/1vui-LupKJI/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talk - The future of Linux Containers</title><link>http://www.pyvideo.org/video/1852/the-future-of-linux-containers</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Solomon talks about Linux Containers which they use at dotCloud and how people are interested in how they do it, but it's complicated so until now they haven't talked about it. Until now: Docker.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Solomon Hykes</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1852/the-future-of-linux-containers</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/solomon_hykesn_lightening_talk.mp4?Signature=YNUqlTiPuWxeP%2B9AxxF7U9zmQGw%3D&amp;Expires=1363913234&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/solomon_hykesn_lightening_talk.mp4?Signature=YNUqlTiPuWxeP%2B9AxxF7U9zmQGw%3D&amp;Expires=1363913234&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=9xciauwbsuo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/9xciauwbsuo/hqdefault.jpg"></media:thumbnail></item><item><title>Loop like a native: while, for, iterators, generators</title><link>http://www.pyvideo.org/video/1758/loop-like-a-native-while-for-iterators-genera</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python provides powerful primitives for iterating over your data in ways that let you express yourself clearly and directly.  But even programmers familiar with the tools don't use them as fully as they could.  This talk will cover Python's iteration tools, from basic loops to generators and how to add iteration to your own classes.  Come learn how looping was meant to be!
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1758/loop-like-a-native-while-for-iterators-genera</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Loop_like_a_native_while_for_i.mp4?Signature=QBWheBrJPUhh7nMxjMvj%2Brszqbc%3D&amp;Expires=1363663628&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Loop_like_a_native_while_for_i.mp4?Signature=QBWheBrJPUhh7nMxjMvj%2Brszqbc%3D&amp;Expires=1363663628&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=EnSu9hHGq5o" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/EnSu9hHGq5o/hqdefault.jpg"></media:thumbnail></item><item><title>Make More Responsive Web Applications with SocketIO and gevent</title><link>http://www.pyvideo.org/video/1798/make-more-responsive-web-applications-with-socket</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An explanation of how to implement a socket.io server in Python to serve websocket requests from browsers.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1798/make-more-responsive-web-applications-with-socket</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Make_More_Responsive_Web_Appli.mp4?Signature=whfLNrHj%2F7z3FSLSgHlPsPs3pzI%3D&amp;Expires=1363897769&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Make_More_Responsive_Web_Appli.mp4?Signature=whfLNrHj%2F7z3FSLSgHlPsPs3pzI%3D&amp;Expires=1363897769&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=TH-ZCuOdrQE" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/TH-ZCuOdrQE/hqdefault.jpg"></media:thumbnail></item><item><title>Making DISQUS Realtime.</title><link>http://www.pyvideo.org/video/1700/making-disqus-realtime-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What does it take to add realtime functionality to a truly “web scale” app. The result is the DISQUS realtime system, a highly concurrent system for allowing web clients to subscribe to arbitrary events in the DISQUS infrastructure.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Hitchcock</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1700/making-disqus-realtime-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Making_DISQUS_Realtime.mp4?Signature=1lrl%2FXQpf2Gh1TPak5KimMmQN3c%3D&amp;Expires=1363655416&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Making_DISQUS_Realtime.mp4?Signature=1lrl%2FXQpf2Gh1TPak5KimMmQN3c%3D&amp;Expires=1363655416&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=5A5Iw9z6z2s" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/5A5Iw9z6z2s/hqdefault.jpg"></media:thumbnail></item><item><title>Measuring and modeling the complexity of children's books</title><link>http://www.pyvideo.org/video/1741/measuring-and-modeling-the-complexity-of-children</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Researchers have been modeling text difficulty for over 50 years. A variety of models have been developed, but few have focused on books for emerging readers (Grades K-2). We used Python for nearly every aspect of the project including collecting data from reading educators, analyzing text features and psychometric data, and creating a predictive model. Tools used include scipy, scikit-learn, pandas, and extensive use of the IPython Notebook which is demonstrated in the talk.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Elmore</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1741/measuring-and-modeling-the-complexity-of-children</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Measuring_and_modeling_the_com.mp4?Signature=Ooqusy5tVJR3WpFKleWGDmftqos%3D&amp;Expires=1364911259&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Measuring_and_modeling_the_com.mp4?Signature=Ooqusy5tVJR3WpFKleWGDmftqos%3D&amp;Expires=1364911259&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=m6Ycxl918Zs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/m6Ycxl918Zs/hqdefault.jpg"></media:thumbnail></item><item><title>Messaging at Scale at Instagram</title><link>http://www.pyvideo.org/video/1671/messaging-at-scale-at-instagram</link><description>&lt;p&gt;Abstract&lt;/p&gt;
As activity accelerated from just a few thousand activities per day to hundreds of millions, Instagram needed a reliable, scalable messaging infrastructure to distribute work and messages. In this talk, I'll jump from a crash course in the abstract concepts of queueing into the implementation details &amp; hard-earned know-how from experience building massive-scale Python-based systems.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Branson</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1671/messaging-at-scale-at-instagram</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Messaging_at_Scale_at_Instagra.mp4?Signature=FcXKHvpDU23C1JXs7LClb%2BXo7pE%3D&amp;Expires=1363645487&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Messaging_at_Scale_at_Instagra.mp4?Signature=FcXKHvpDU23C1JXs7LClb%2BXo7pE%3D&amp;Expires=1363645487&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=E708csv4XgY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/E708csv4XgY/hqdefault.jpg"></media:thumbnail></item><item><title>Music Theory and Performance Analysis with Sebastian and Czerny</title><link>http://www.pyvideo.org/video/1769/music-theory-and-performance-analysis-with-sebast</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will discuss two open source projects for using Python for music analysis. Sebastian focuses on music theory while Czerny focuses on performance (particularly keyboard playing).</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Tauber</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1769/music-theory-and-performance-analysis-with-sebast</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Music_Theory_and_Performance_A.mp4?Signature=8YMCCv77s2nNlbXWXCZ0%2BJyg1xw%3D&amp;Expires=1363666884&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Music_Theory_and_Performance_A.mp4?Signature=8YMCCv77s2nNlbXWXCZ0%2BJyg1xw%3D&amp;Expires=1363666884&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=06h21nBqwec" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/06h21nBqwec/hqdefault.jpg"></media:thumbnail></item><item><title>Opening Statements</title><link>http://www.pyvideo.org/video/1848/opening-statements</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Opening statements from Jesse Noller.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jesse Noller</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1848/opening-statements</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Opening_Statements.mp4?Signature=yB6g3zkrVp3PNI9e1JvV1IxT46A%3D&amp;Expires=1363571211&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Opening_Statements.mp4?Signature=yB6g3zkrVp3PNI9e1JvV1IxT46A%3D&amp;Expires=1363571211&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=WQJ67Xvw1Zo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/WQJ67Xvw1Zo/hqdefault.jpg"></media:thumbnail></item><item><title>Planning and Tending the Garden: The Future of Early Childhood Python Education</title><link>http://www.pyvideo.org/video/1797/planning-and-tending-the-garden-the-future-of-ea</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Interest and activity in computing education is on the rise. Other language communities and projects have stepped up to promote early childhood programming. What tools are available for teaching Python? How do they compare?

This talk aims to discuss current trends, examine the current education landscape, question our goals as a community, and discuss opportunities for growing young developers.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kurt Grandis</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1797/planning-and-tending-the-garden-the-future-of-ea</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Planning_and_Tending_the_Garde.mp4?Signature=fP0zVYdd0qUX4Ph%2BH1KYQeJOJSQ%3D&amp;Expires=1363842009&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Planning_and_Tending_the_Garde.mp4?Signature=fP0zVYdd0qUX4Ph%2BH1KYQeJOJSQ%3D&amp;Expires=1363842009&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=op61s-QHryk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/op61s-QHryk/hqdefault.jpg"></media:thumbnail></item><item><title>PyPy without the GIL</title><link>http://www.pyvideo.org/video/1739/pypy-without-the-gil</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PyPy has a version without the Global Interpreter Lock (GIL).  It can run multiple threads concurrently.  But the real benefit is that you have other, new ways of using all your cores.  In this talk I will describe how it is possible (STM) and then focus on some of these new opportunities, e.g. show how we used multiple cores in a single really big program without adding thread locks everywhere.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Armin Rigo</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1739/pypy-without-the-gil</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/PyPy_without_the_GIL.mp4?Signature=KVTyOTkBFyh7X56EKD2W5BHb8cY%3D&amp;Expires=1363659535&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/PyPy_without_the_GIL.mp4?Signature=KVTyOTkBFyh7X56EKD2W5BHb8cY%3D&amp;Expires=1363659535&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Q9wf63flICs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/Q9wf63flICs/hqdefault.jpg"></media:thumbnail></item><item><title>Python 3.3: Trust Me, It's Better than 2.7</title><link>http://www.pyvideo.org/video/1730/python-33-trust-me-its-better-than-27</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this talk I will try to convince you that Python 3.3 is superior to Python 2.7 by going over the differences between Python 2.7 and Python 3.3 along with benchmark information to show where Python 3.3 shines in comparison to Python 2.7 (and vice-versa). If I accomplish my goal, you will walk out of this talk convinced that Python 2.7 is not the final version of Python you want to support.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Cannon</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1730/python-33-trust-me-its-better-than-27</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_33_Trust_Me_Its_Better_.mp4?Signature=KqAFSIQTjnQUwh3mopY6%2BrlIwCw%3D&amp;Expires=1363838166&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_33_Trust_Me_Its_Better_.mp4?Signature=KqAFSIQTjnQUwh3mopY6%2BrlIwCw%3D&amp;Expires=1363838166&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=f_6vDi7ywuA" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/f_6vDi7ywuA/hqdefault.jpg"></media:thumbnail></item><item><title>Python: A "Toy" Language</title><link>http://www.pyvideo.org/video/1729/python-a-toy-language</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A very special guest speaker will talk about solving important "toy" problems with Python.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1729/python-a-toy-language</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_Python_To_Generate_Art_A.mp4?Signature=7Nc1cs0IOCoBx8ksi5b13PHc2ho%3D&amp;Expires=1363819814&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_Python_To_Generate_Art_A.mp4?Signature=7Nc1cs0IOCoBx8ksi5b13PHc2ho%3D&amp;Expires=1363819814&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=BWyDA5y6TIg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/BWyDA5y6TIg/hqdefault.jpg"></media:thumbnail></item><item><title>Python Profiling</title><link>http://www.pyvideo.org/video/1770/python-profiling</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will give a tour of different profiling techniques available for Python applications. We'll cover specific modules in Python for doing function profiling and line level profiling. We'll show the short comings of such mechanisms in production and discuss how to do sampled profiling of specific functions. We'll finish with statistical profilers that use thread stack interrogation.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amjith Ramanujam</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1770/python-profiling</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Profiling.mp4?Signature=7dWpd488pit7wBeXv32RdMJYDAg%3D&amp;Expires=1363667329&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Profiling.mp4?Signature=7dWpd488pit7wBeXv32RdMJYDAg%3D&amp;Expires=1363667329&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=QJwVYlDzAXs" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/QJwVYlDzAXs/hqdefault.jpg"></media:thumbnail></item><item><title>Rethinking Errors: Learning from Scala and Go</title><link>http://www.pyvideo.org/video/1683/rethinking-errors-learning-from-scala-and-go</link><description>&lt;p&gt;Abstract&lt;/p&gt;
C++ brought exceptions to mainstream programming; Java goes further with checked exceptions. But are exceptions the one way to report all errors? Scala and Go suggest there is more than one kind of error, so there should be more than one kind of error reporting, and different responses to errors. I’ll show the Scala and Go approaches to the error problem, and how to apply this to Python.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bruce Eckel</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1683/rethinking-errors-learning-from-scala-and-go</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Rethinking_Errors_Learning_fro.mp4?Signature=EZ6mdwaJjmmcnW2B12FIOph62pI%3D&amp;Expires=1364767018&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Rethinking_Errors_Learning_fro.mp4?Signature=EZ6mdwaJjmmcnW2B12FIOph62pI%3D&amp;Expires=1364767018&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=REOL1AV_PCg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/REOL1AV_PCg/hqdefault.jpg"></media:thumbnail></item><item><title>Scrapy: it GETs the web</title><link>http://www.pyvideo.org/video/1685/scrapy-it-gets-the-web</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Scrapy lets you straightforwardly pull data out of the web. It helps you retry if the site is down, extract content from pages using CSS selectors (or XPath), and cover your code with tests. It downloads asynchronously with high performance. You program to a simple model, and it's good for web APIs, too.

If you use requests, mechanize, or celery for HTTP, you should probably switch to scrapy.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1685/scrapy-it-gets-the-web</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Scrapy_it_GETs_the_web.mp4?Signature=I05cicl0PTykEOrBbgU716QB%2By8%3D&amp;Expires=1363650403&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Scrapy_it_GETs_the_web.mp4?Signature=I05cicl0PTykEOrBbgU716QB%2By8%3D&amp;Expires=1363650403&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=-JzH8TcwqxI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/-JzH8TcwqxI/hqdefault.jpg"></media:thumbnail></item><item><title>SimpleCV - Computer Vision using Python</title><link>http://www.pyvideo.org/video/1796/simplecv-computer-vision-using-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk is a brief summary of  Computer Vision tutorial we proposed for PyCon. In this talk we will discuss what computer vision is, why it's useful, what tools exist in the Python ecosystem, and how to apply it to your project.   The talk will focus on the SimpleCV library but also touch upon NumPy. SciPy and iPython notebooks. 
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Scott</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1796/simplecv-computer-vision-using-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/SimpleCV_Computer_Vision_using.mp4?Signature=OBTr3CCxkRhIxE7SGtSj51VZ8sY%3D&amp;Expires=1363672762&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/SimpleCV_Computer_Vision_using.mp4?Signature=OBTr3CCxkRhIxE7SGtSj51VZ8sY%3D&amp;Expires=1363672762&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=UZSm7Q2bZoc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/UZSm7Q2bZoc/hqdefault.jpg"></media:thumbnail></item><item><title>So you want to write an interpreter?</title><link>http://www.pyvideo.org/video/1694/so-you-want-to-write-an-interpreter</link><description>&lt;p&gt;Abstract&lt;/p&gt;
You're a programmer, you use interpreter and compilers every day (and twice on Sundays!). But how do these things work? Could you build one yourself? What would it take? Where would you start? This talk takes you through the process, from lexing to interpreting, and leaves you ready to start on your own language!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1694/so-you-want-to-write-an-interpreter</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/So_you_want_to_write_an_interp.mp4?Signature=KHGOwHvgkcb1g1ppO%2FtB5xCa2YQ%3D&amp;Expires=1363640043&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/So_you_want_to_write_an_interp.mp4?Signature=KHGOwHvgkcb1g1ppO%2FtB5xCa2YQ%3D&amp;Expires=1363640043&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=LCslqgM48D4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/LCslqgM48D4/hqdefault.jpg"></media:thumbnail></item><item><title>sys._current_frames(): Take real-time x-rays of your software for fun and performance</title><link>http://www.pyvideo.org/video/1757/sys_current_frames-take-real-time-x-rays-of-y-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Profiling is hard. Trying to understand what is making your system slow can be very frustrating. Specially when it happens only when your clients are looking, but not you.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Leonardo Rochael</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1757/sys_current_frames-take-real-time-x-rays-of-y-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/sys_current_frames_Take_realti.mp4?Signature=g%2F2CG59J6Un0xDvH27D%2FB798UzU%3D&amp;Expires=1363663186&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/sys_current_frames_Take_realti.mp4?Signature=g%2F2CG59J6Un0xDvH27D%2FB798UzU%3D&amp;Expires=1363663186&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=fZkJi3N4k9I" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/fZkJi3N4k9I/hqdefault.jpg"></media:thumbnail></item><item><title>The End Of Object Inheritance &amp; The Beginning Of A New Modularity</title><link>http://www.pyvideo.org/video/1684/the-end-of-object-inheritance-the-beginning-of</link><description>&lt;p&gt;Abstract&lt;/p&gt;
After 15 years' combined experience developing software of all types
we are done with object inheritance. Come learn about elegant, superior solutions
to the problems inheritance claims to adequately solve.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Augie Fackler,Nathaniel Manista</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1684/the-end-of-object-inheritance-the-beginning-of</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_End_Of_Object_Inheritance_.mp4?Signature=vGTNWd5OLl%2BTJe3R3z1c8sFcTZE%3D&amp;Expires=1363649965&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_End_Of_Object_Inheritance_.mp4?Signature=vGTNWd5OLl%2BTJe3R3z1c8sFcTZE%3D&amp;Expires=1363649965&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=3MNVP9-hglc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/3MNVP9-hglc/hqdefault.jpg"></media:thumbnail></item><item><title>The Guts of Unicode in Python</title><link>http://www.pyvideo.org/video/1768/the-guts-of-unicode-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will examine how Python's internal Unicode representation has changed from its introduction through the latest major changes in Python 3.3. I'll present properties of the current Unicode implementation like algorithmic complexity and standard compliance. The talk will also compare Unicode in Python with some other languages. Finally, I'll look into the future of Python's Unicode.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Peterson</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1768/the-guts-of-unicode-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Guts_of_Unicode_in_Python.mp4?Signature=vGQF0Hp4sSFsf9CBkKuQwdqutsg%3D&amp;Expires=1363840015&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Guts_of_Unicode_in_Python.mp4?Signature=vGQF0Hp4sSFsf9CBkKuQwdqutsg%3D&amp;Expires=1363840015&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Nfqh6lr3frQ" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Nfqh6lr3frQ/hqdefault.jpg"></media:thumbnail></item><item><title>The Magic of Metaprogramming</title><link>http://www.pyvideo.org/video/1695/the-magic-of-metaprogramming-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Learn the magic of writing programs that monitor, alter and react to the execution of program code by responding to imports, changes to variables, calls to functions and invocations of the builtins. This talk goes beyond the static world of metaclasses and class decorators.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Rush</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1695/the-magic-of-metaprogramming-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Magic_of_Metaprogramming.mp4?Signature=%2BjcZWMxtrxJlyoTsRFIATtbEuHU%3D&amp;Expires=1363653495&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Magic_of_Metaprogramming.mp4?Signature=%2BjcZWMxtrxJlyoTsRFIATtbEuHU%3D&amp;Expires=1363653495&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=kwu9Itn8Ylc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/kwu9Itn8Ylc/hqdefault.jpg"></media:thumbnail></item><item><title>The Naming of Ducks: Where Dynamic Types Meet Smart Conventions</title><link>http://www.pyvideo.org/video/1676/the-naming-of-ducks-where-dynamic-types-meet-sma</link><description>&lt;p&gt;Abstract&lt;/p&gt;
While Java and C# use static type declarations to eliminate ambiguity,
the Python programmer must survive
through sheer clarity and consistency in naming variables.
We will explore the deep unspoken conventions
that the Python community has developed and honed over two decades
to make Python code readable and meaningful within the freedom
that a dynamically-typed language grants us.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1676/the-naming-of-ducks-where-dynamic-types-meet-sma</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Naming_of_Ducks_Where_Dyna.mp4?Signature=drvwKQMFi5Vt2QItklKi9KnG0n8%3D&amp;Expires=1363836226&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_Naming_of_Ducks_Where_Dyna.mp4?Signature=drvwKQMFi5Vt2QItklKi9KnG0n8%3D&amp;Expires=1363836226&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=YklKUuDpX5c" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/YklKUuDpX5c/hqdefault.jpg"></media:thumbnail></item><item><title>The SQLAlchemy Session - In Depth</title><link>http://www.pyvideo.org/video/1767/the-sqlalchemy-session-in-depth-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A detailed walkthrough of SQLAlchemy's Session, describing the rationale for its existence, its driving philosophies, and finally a walkthrough of Session lifecycle through the use of an animated diagram.  We'll cover how the relational database refers to database rows within a transaction, and how the Session has over the years developed a tight, proxied integration with this lifecycle.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1767/the-sqlalchemy-session-in-depth-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_SQLAlchemy_Session_In_Dept.mp4?Signature=R7B4Piy5l3V5OQB1ZblDIP0qX5Y%3D&amp;Expires=1363666415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/The_SQLAlchemy_Session_In_Dept.mp4?Signature=R7B4Piy5l3V5OQB1ZblDIP0qX5Y%3D&amp;Expires=1363666415&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=uAtaKr5HOdA" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/uAtaKr5HOdA/hqdefault.jpg"></media:thumbnail></item><item><title>This Old Video Site: How PBS streams video - and you can too!</title><link>http://www.pyvideo.org/video/1682/this-old-video-site-how-pbs-streams-video-and</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Overview of how the Public Broadcasting Service streams video online.  Learn how PBS uses python and other services to provide video streaming online.  Talk will discuss lessons learned, explanation of video formats, and experiences with mobile device support.  Talk will include recommendations for others to easily adopt similar practices to quickly host their own online video site.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Edgar Roman</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1682/this-old-video-site-how-pbs-streams-video-and</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/This_Old_Video_Site_How_PBS_st.mp4?Signature=phe43GEn84t3VzfYjAU60NX0BWs%3D&amp;Expires=1363676875&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/This_Old_Video_Site_How_PBS_st.mp4?Signature=phe43GEn84t3VzfYjAU60NX0BWs%3D&amp;Expires=1363676875&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=fxgEXenXNmI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i3.ytimg.com/vi/fxgEXenXNmI/hqdefault.jpg"></media:thumbnail></item><item><title>Transforming Code into Beautiful, Idiomatic Python</title><link>http://www.pyvideo.org/video/1780/transforming-code-into-beautiful-idiomatic-pytho</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Learn to take better advantage of Python's best features and improve existing code through a series of code transformations, "When you see this, do that instead."

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1780/transforming-code-into-beautiful-idiomatic-pytho</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Transforming_Code_into_Beautif.mp4?Signature=J6w1HSr4D1uQ3OLB9DYMWgef64g%3D&amp;Expires=1363841075&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Transforming_Code_into_Beautif.mp4?Signature=J6w1HSr4D1uQ3OLB9DYMWgef64g%3D&amp;Expires=1363841075&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=OSGv2VnC0go" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/OSGv2VnC0go/hqdefault.jpg"></media:thumbnail></item><item><title>Twisted Logic: Endpoints and Why You Shouldn't Be Scared of Twisted</title><link>http://www.pyvideo.org/video/1740/twisted-logic-endpoints-and-why-you-shouldnt-be</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will be a survey of my learning experience adding new endpoint APIs to Twisted, an event-driven networking engine (as a Google Summer of Code project), with a special focus on the analysis of some of the horror stories that surround Twisted. Right from the asynchronous I/O model to Deferreds: if it scares you, we’ll figure a way out and see what the makers of Twisted say when confronted.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ashwini Oruganti</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1740/twisted-logic-endpoints-and-why-you-shouldnt-be</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Twisted_Logic_Endpoints_and_Wh.mp4?Signature=9V4aQOvxFwXUjUsLCru%2BFu%2FTFP8%3D&amp;Expires=1363845289&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Twisted_Logic_Endpoints_and_Wh.mp4?Signature=9V4aQOvxFwXUjUsLCru%2BFu%2FTFP8%3D&amp;Expires=1363845289&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=jzzNXRGIKN4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/jzzNXRGIKN4/hqdefault.jpg"></media:thumbnail></item><item><title>Using futures for async GUI programming in Python 3.3</title><link>http://www.pyvideo.org/video/1762/using-futures-for-async-gui-programming-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In Python 3.2 a new feature was added for concurrent programming - futures. In Python 3.3 generators have been extended to allow returning from a generator with a value. In this talk we'll show how these features can be combined to create a rich and easy to use asynchronous programming model which can be used for creating highly responsive GUI applications or easy async programming. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dino Viehland</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1762/using-futures-for-async-gui-programming-in-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_futures_for_async_GUI_pr.mp4?Signature=tnzTUNAmanfWUvh0bI0HUupjWJA%3D&amp;Expires=1363838848&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Using_futures_for_async_GUI_pr.mp4?Signature=tnzTUNAmanfWUvh0bI0HUupjWJA%3D&amp;Expires=1363838848&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=oJQdX_w1vXY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/oJQdX_w1vXY/hqdefault.jpg"></media:thumbnail></item><item><title>Visualizing Github, Part I: Data to Information</title><link>http://www.pyvideo.org/video/1759/visualizing-github-part-i-data-to-information</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A treasure trove of data is captured daily by Github. What stories can that data tell us about how we think, work, and interact? How would one go about finding and telling those stories? This two-part talk is a soup-to-nuts tour of practical data visualization with Python and web technologies, covering both the extraction and display of data in illumination of a familiar dataset.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dana Bauer,Idan Gazit</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1759/visualizing-github-part-i-data-to-information</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Visualizing_Github_Part_I_Data.mp4?Signature=OdsG%2Be2s%2FBzqWOdYBU21t0WG5LA%3D&amp;Expires=1363845766&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Visualizing_Github_Part_I_Data.mp4?Signature=OdsG%2Be2s%2FBzqWOdYBU21t0WG5LA%3D&amp;Expires=1363845766&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=VpTPAJ0rvq8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/VpTPAJ0rvq8/hqdefault.jpg"></media:thumbnail></item><item><title>Visualizing Github, Part II: Information to Meaning</title><link>http://www.pyvideo.org/video/1766/visualizing-github-part-ii-information-to-meani</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A treasure trove of data is captured daily by Github. What stories can that data tell us about how we think, work, and interact? How would one go about finding and telling those stories? This two-part talk is a soup-to-nuts tour of practical data visualization with Python and web technologies, covering both the extraction and display of data in illumination of a familiar dataset.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dana Bauer,Idan Gazit</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1766/visualizing-github-part-ii-information-to-meani</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Visualizing_Github_Part_II_Inf.mp4?Signature=%2FBv5a4lVKKV%2F6fIO%2BfAJhZ98mUw%3D&amp;Expires=1363839586&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Visualizing_Github_Part_II_Inf.mp4?Signature=%2FBv5a4lVKKV%2F6fIO%2BfAJhZ98mUw%3D&amp;Expires=1363839586&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=C_J4_n5eC8c" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/C_J4_n5eC8c/hqdefault.jpg"></media:thumbnail></item><item><title>Whoosh, the open-source Python search library</title><link>http://www.pyvideo.org/video/1788/whoosh-the-open-source-python-search-library</link><description>&lt;p&gt;Abstract&lt;/p&gt;
From humble beginnings when I first learned Python just to write a search engine to make online help searchable, Whoosh has grown and matured to match the capabilities of much larger projects such as Lucene. This talk will explain simple uses of Whoosh to index and search documents, and demonstrate more advanced features such as faceting.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Chaput</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1788/whoosh-the-open-source-python-search-library</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Whoosh_the_opensource_Python_s.mp4?Signature=oSld96vMuTj1w0fh9ftVY2Q6Rd8%3D&amp;Expires=1363671718&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Whoosh_the_opensource_Python_s.mp4?Signature=oSld96vMuTj1w0fh9ftVY2Q6Rd8%3D&amp;Expires=1363671718&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=gRvZbYtwTeo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/gRvZbYtwTeo/hqdefault.jpg"></media:thumbnail></item><item><title>Write the Docs</title><link>http://www.pyvideo.org/video/1795/write-the-docs</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The greatest piece of software in the world is useless without great
documentation, but unfortunately most of us just don't write great
docs. This can be fixed, though. Documentation doesn't need to be an
afterthought, and doesn't have to be bad, and you, too, can learn how
to write good docs and make that an integrated part of your
development process.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1795/write-the-docs</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Write_the_Docs.mp4?Signature=6Uo8RBACB75gJ4LtZKU0xbYOqRA%3D&amp;Expires=1363672380&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Write_the_Docs.mp4?Signature=6Uo8RBACB75gJ4LtZKU0xbYOqRA%3D&amp;Expires=1363672380&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=KEakc8r4r7M" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i4.ytimg.com/vi/KEakc8r4r7M/hqdefault.jpg"></media:thumbnail></item><item><title>You can be a speaker at PyCon!</title><link>http://www.pyvideo.org/video/1728/you-can-be-a-speaker-at-pycon</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Have you ever considered submitting a proposal to speak at PyCon but weren't sure how to even get started? This session will walk you through the steps to get there, so that you'll be ready to propose a talk for next year!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anna Ravenscroft</dc:creator><pubDate>Fri, 15 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1728/you-can-be-a-speaker-at-pycon</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/You_can_be_a_speaker_at_PyCon.mp4?Signature=vAKAJqbb2IIco3fRgg%2FS08vjGbA%3D&amp;Expires=1363936183&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/You_can_be_a_speaker_at_PyCon.mp4?Signature=vAKAJqbb2IIco3fRgg%2FS08vjGbA%3D&amp;Expires=1363936183&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=myzQXKuQjac" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/myzQXKuQjac/hqdefault.jpg"></media:thumbnail></item><item><title>Advanced Machine Learning with scikit-learn</title><link>http://www.pyvideo.org/video/1719/advanced-machine-learning-with-scikit-learn</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will offer an in-depth experience of methods and tools for the Machine Learning practitioner through a selection of advanced features of scikit-learn and related projects. This tutorial targets developers already familiar with machine learning concepts and scikit-learn who wish to learn how to apply those tools on larger datasets using multicore machines or distributed clusters.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1719/advanced-machine-learning-with-scikit-learn</guid><enclosure url="https://www.youtube.com/watch?v=iFkRt3BCctg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/iFkRt3BCctg/hqdefault.jpg"></media:thumbnail></item><item><title>A Gentle Introduction to Computer Vision</title><link>http://www.pyvideo.org/video/1662/a-gentle-introduction-to-computer-vision</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Do you want to create a script to warp your photos, scrape your photo archive for images of cats, or create a dart turret that follows your face? This tutorial will show you how to do this and a whole lot more with computer vision. The tutorial will be suitable for all levels of developers and is a great way for python novice’s to explore the world of computer vision.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Scott</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1662/a-gentle-introduction-to-computer-vision</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/A_Gentle_Introduction_to_Compu.mp4?Signature=nkzfLjV1Y9n8H2EMMtQC2dlMUxI%3D&amp;Expires=1363951116&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/A_Gentle_Introduction_to_Compu.mp4?Signature=nkzfLjV1Y9n8H2EMMtQC2dlMUxI%3D&amp;Expires=1363951116&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=O4_kWEDd52o" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/O4_kWEDd52o/hqdefault.jpg"></media:thumbnail></item><item><title>An Introduction to scikit-learn: Machine Learning in Python</title><link>http://www.pyvideo.org/video/1655/an-introduction-to-scikit-learn-machine-learning</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will offer an introduction to the scikit-learn package and to the central concepts of Machine Learning.  We will introduce the basic categories of learning problems, and explore practical examples based on real-world data, from handwriting analysis to facial recognition to automated classification of astronomical images.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake Vanderplas</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1655/an-introduction-to-scikit-learn-machine-learning</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/An_Introduction_to_scikitlearn.mp4?Signature=uQPJ0uJf3yuSsGhnQ3%2Ft9MKR2so%3D&amp;Expires=1364672817&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/An_Introduction_to_scikitlearn.mp4?Signature=uQPJ0uJf3yuSsGhnQ3%2Ft9MKR2so%3D&amp;Expires=1364672817&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=4ONBVNm3isI" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/4ONBVNm3isI/hqdefault.jpg"></media:thumbnail></item><item><title>Applied Parallel Computing with Python</title><link>http://www.pyvideo.org/video/1720/applied-parallel-computing-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this tutorial we shall review three different and distinct approaches to parallel computing which can be used to solve problems in all manner of domains, including machine learning, natural language processing, finance, and computer vision. The first two approaches to be reviewed will be embarrassingly parallel in nature while the third approach will leverage fine-grain parallelism.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Ozsvald,Minesh B Amin</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1720/applied-parallel-computing-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Applied_Parallel_Computing_wit.mp4?Signature=qOo29k1gptSaUt8SYe9GLGymYvs%3D&amp;Expires=1364691416&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Applied_Parallel_Computing_wit.mp4?Signature=qOo29k1gptSaUt8SYe9GLGymYvs%3D&amp;Expires=1364691416&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=vL0UtbJOKR0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/vL0UtbJOKR0/hqdefault.jpg"></media:thumbnail></item><item><title>Contribute with me! Getting started with open source development </title><link>http://www.pyvideo.org/video/1722/contribute-with-me-getting-started-with-open-sou</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Want to contribute to a Python project or the core language, but not sure where to start?

Join us for 3 hours learning the nuts and bolts of open source contribution. By the end of this tutorial, you'll have the tools and practice to confidently contribute to your favorite projects.

Beginning programmers are welcome and encouraged!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1722/contribute-with-me-getting-started-with-open-sou</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Contribute_with_me_Getting_sta.mp4?Signature=xiSfaAjQXoS64kxK%2BciFW5Ca4XY%3D&amp;Expires=1364665491&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Contribute_with_me_Getting_sta.mp4?Signature=xiSfaAjQXoS64kxK%2BciFW5Ca4XY%3D&amp;Expires=1364665491&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=IXnNgLmd6BM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/IXnNgLmd6BM/hqdefault.jpg"></media:thumbnail></item><item><title>Documenting Your Project in Sphinx</title><link>http://www.pyvideo.org/video/1660/documenting-your-project-in-sphinx</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Projects can succeed or fail because of their documentation. When you write, you need to concentrate on your prose—not on how to get text rendered, indexed, highlighted, and cross-referenced. The Sphinx documentation framework exists to make these parts easy so you can focus on writing. This tutorial will use hands-on exercises to teach you to write, theme, and deploy documentation using Sphinx!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1660/documenting-your-project-in-sphinx</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Documenting_Your_Project_in_Sp.mp4?Signature=Ud8cDKrtUj9uvhxSbUlQsh9aUfM%3D&amp;Expires=1364683436&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Documenting_Your_Project_in_Sp.mp4?Signature=Ud8cDKrtUj9uvhxSbUlQsh9aUfM%3D&amp;Expires=1364683436&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=QNHM7q2hLh8" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/QNHM7q2hLh8/hqdefault.jpg"></media:thumbnail></item><item><title>Fully Test-Driven Web Development with Django and Selenium</title><link>http://www.pyvideo.org/video/1657/fully-test-driven-web-development-with-django-and</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The concept: run through the official Django tutorial, but with full TDD.

So, Browser-based testing with Selenium + in-depth unit-testing; 

TDD Discussions: what to test, what not to test; 

Aimed at beginners (new to Django, TDD or Selenium)

Come prepared! you’ll need Git, Firefox, Python2.7, Django1.4 and Selenium installed</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harry Percival</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1657/fully-test-driven-web-development-with-django-and</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Fully_TestDriven_Web_Developme.mp4?Signature=6FbjHdzEngC7O9xB9eHQKlQyhRU%3D&amp;Expires=1364678686&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Fully_TestDriven_Web_Developme.mp4?Signature=6FbjHdzEngC7O9xB9eHQKlQyhRU%3D&amp;Expires=1364678686&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=0FZjkpoeJWM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/0FZjkpoeJWM/hqdefault.jpg"></media:thumbnail></item><item><title>Intermediate Twisted: Test-Driven Networking Software</title><link>http://www.pyvideo.org/video/1715/intermediate-twisted-test-driven-networking-soft</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Writing tests for networking code presents special challenges, which Twisted tries to address. In this tutorial you will implement a toy HTTP server using test-first methodology: first the tests are written, and then the code. You will learn how to write well-tested network applications using Twisted, and the general virtues of doing test-driven development.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Itamar Turner-Trauring</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1715/intermediate-twisted-test-driven-networking-soft</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Intermediate_Twisted_TestDrive.mp4?Signature=kyI6gFE0EnFr3V4pMOOZjvEwKng%3D&amp;Expires=1364685941&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Intermediate_Twisted_TestDrive.mp4?Signature=kyI6gFE0EnFr3V4pMOOZjvEwKng%3D&amp;Expires=1364685941&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=XOw5oU1SJ9s" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/XOw5oU1SJ9s/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to PyGame</title><link>http://www.pyvideo.org/video/1718/introduction-to-pygame</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will walk the attendees through development of a simple game using PyGame with time left over for some experimentation and exploration of different types of games.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1718/introduction-to-pygame</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Introduction_to_PyGame.mp4?Signature=ojSyazRqK3Vri4htTGOTgY6WwsI%3D&amp;Expires=1363902653&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Introduction_to_PyGame.mp4?Signature=ojSyazRqK3Vri4htTGOTgY6WwsI%3D&amp;Expires=1363902653&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=mTmJfWdZzbo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i2.ytimg.com/vi/mTmJfWdZzbo/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to SQLAlchemy</title><link>http://www.pyvideo.org/video/1711/introduction-to-sqlalchemy</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The goal of the tutorial is a broad-based introduction to SQLAlchemy, spanning the Core and ORM components as well as the systems that underlie them. The tutorial takes the "harder" approach teaching from fundamentals first, emphasizing details on how the library interacts with the database and SQL and concluding with an introduction to the ORM, providing a solid perspective for continued study.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Bayer</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1711/introduction-to-sqlalchemy</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Introduction_to_SQLAlchemy.mp4?Signature=BM6%2FPCipJi62kAZMGKz18TLTIsQ%3D&amp;Expires=1363920469&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Introduction_to_SQLAlchemy.mp4?Signature=BM6%2FPCipJi62kAZMGKz18TLTIsQ%3D&amp;Expires=1363920469&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=woKYyhLCcnU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/woKYyhLCcnU/hqdefault.jpg"></media:thumbnail></item><item><title>Python 3 Metaprogramming</title><link>http://www.pyvideo.org/video/1716/python-3-metaprogramming</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Some of the most significant changes in Python 3 are related to metaprogramming.  In this tutorial, I'll cover decorators, class decorators, descriptors, and metaclasses.  However, the focus will be on idioms and examples that are only made possible using features that are unique to Python 3.  For instance, making free use of function annotations, signatures, new metaclass features and more.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1716/python-3-metaprogramming</guid><enclosure url="https://www.youtube.com/watch?v=sPiWg5jSoZI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/sPiWg5jSoZI/hqdefault.jpg"></media:thumbnail></item><item><title>Python Epiphanies</title><link>http://www.pyvideo.org/video/1659/python-epiphanies-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial is for software developers who've been using Python with
success for a while but are looking for a deeper understanding of the
language.  It focuses on how Python differs from other languages in
subtle but important ways that often confuse folks, and it demystifies
a number of language features that are sometimes misunderstood.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1659/python-epiphanies-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Epiphanies.mp4?Signature=iyvXCZ98LWlxHHtIPNcO0guLa44%3D&amp;Expires=1363947844&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_Epiphanies.mp4?Signature=iyvXCZ98LWlxHHtIPNcO0guLa44%3D&amp;Expires=1363947844&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=9mgg45Wr8jY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/9mgg45Wr8jY/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Data Analysis</title><link>http://www.pyvideo.org/video/1656/python-for-data-analysis</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has long played a role in analyzing large scale data.  From tightly-knit super-computers running MPI-based applications to heterogeneous clusters woven together with scripts, Python has had a role to play in making it easier to processes data.  This tutorial will cover the tried and true techniques as well as introduce new trends. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Zaitlen,Peter Wang,Travis Oliphant</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1656/python-for-data-analysis</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Data_Analysis.mp4?Signature=CqBJa4vGSFJZ%2Fkk%2F35lwLkY15BA%3D&amp;Expires=1364709762&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Data_Analysis.mp4?Signature=CqBJa4vGSFJZ%2Fkk%2F35lwLkY15BA%3D&amp;Expires=1364709762&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=YAFyzUsZGvc" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/YAFyzUsZGvc/hqdefault.jpg"></media:thumbnail></item><item><title>Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities</title><link>http://www.pyvideo.org/video/1658/shiny-lets-be-bad-guys-exploiting-and-mitigati</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Internet is a dangerous place, filled with evildoers out to attack your code for fun or profit, so it's not enough to just ship your awesome new web app--you have to take the security of your application, your users, and your data seriously.  You'll get into the mindset of the bad guys as we discuss, exploit, and mitigate the most common web app security flaws in a controlled environment.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Stanek,Mike Pirnat</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1658/shiny-lets-be-bad-guys-exploiting-and-mitigati</guid><enclosure url="http://s3.us.archive.org/ndvpycon2013/Shiny_Lets_Be_Bad_Guys_Exploit.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/ndvpycon2013/Shiny_Lets_Be_Bad_Guys_Exploit.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=v0BP1eld3Wo" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/v0BP1eld3Wo/hqdefault.jpg"></media:thumbnail></item><item><title>A beginner's introduction to Pydata: how to build a minimal recommendation engine.</title><link>http://www.pyvideo.org/video/1654/a-beginners-introduction-to-pydata-how-to-build</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this tutorial we'll set ourselves the goal of building a minimal recommendation engine, and in the process learn about Python's excellent Pydata and related projects: numpy, pandas, and pytables.

A recommendation engine is a software system that analyzes large amounts of transactional data and distills personal profiles to present its users with relevant products/information/content.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amr Hiram,Diego Maniloff,Zach Howard</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1654/a-beginners-introduction-to-pydata-how-to-build</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/A_beginners_introduction_to_Py.mp4?Signature=wYHYyyBePWmZCtYM4TAnwklMEwc%3D&amp;Expires=1364913604&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/A_beginners_introduction_to_Py.mp4?Signature=wYHYyyBePWmZCtYM4TAnwklMEwc%3D&amp;Expires=1364913604&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=IjRy7dAWFdk" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Qn4TWFtj7XI/hqdefault.jpg"></media:thumbnail></item><item><title>A hands-on introduction to Python for beginning programmers</title><link>http://www.pyvideo.org/video/1850/a-hands-on-introduction-to-python-for-beginning-p</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Beginning programmers: welcome to PyCon 2013! Jumpstart your Python and programming careers with this 3-hour interactive tutorial. By the end, you'll have hands-on exposure to many core programming concepts, be able to write useful Python programs, and have a roadmap for continuing to learn and practice programming in Python. This class assumes no prior programming experience.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1850/a-hands-on-introduction-to-python-for-beginning-p</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/1850_A_handson_introduction_to_Python_for_beginning_pro.mp4" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/1850_A_handson_introduction_to_Python_for_beginning_pro.mp4" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=rkx5_MRAV3A" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/Gp60Qp3GUBU/hqdefault.jpg"></media:thumbnail></item><item><title>Analyzing Social Networks with Python</title><link>http://www.pyvideo.org/video/1714/analyzing-social-networks-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Social Network data is not just Twitter and Facebook - networks permeate our world - yet we often don't know what to do with them. In this tutorial, we will introduce both theory and practice of Social Network Analysis - gathering, analyzing and visualizing data using Python, NetworkX and PiCloud. We will walk the attendees through an entire project, from gathering data to presenting results.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Kouznetsov,Jacqueline Kazil,Maksim Tsvetovat</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1714/analyzing-social-networks-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Analyzing_Social_Networks_with.mp4?Signature=PeBFK3tevcGryPAdtVv4NSsSG7A%3D&amp;Expires=1363960614&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Analyzing_Social_Networks_with.mp4?Signature=PeBFK3tevcGryPAdtVv4NSsSG7A%3D&amp;Expires=1363960614&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=pFMc2qFApEg" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/pFMc2qFApEg/hqdefault.jpg"></media:thumbnail></item><item><title>Bayesian statistics made simple</title><link>http://www.pyvideo.org/video/1724/bayesian-statistics-made-simple</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An introduction to Bayesian statistics using Python.  Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally.  People who know some Python have a head start.

We will use material from Think Stats: Probability and Statistics for Programmers (O’Reilly Media), and Think Bayes, a work in progress at http://thinkbayes.com.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1724/bayesian-statistics-made-simple</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Bayesian_statistics_made_simpl.mp4?Signature=WGr7UOxX%2FDhFtNxCfebROgG8ckw%3D&amp;Expires=1364738345&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Bayesian_statistics_made_simpl.mp4?Signature=WGr7UOxX%2FDhFtNxCfebROgG8ckw%3D&amp;Expires=1364738345&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=fH_as3eZ5YU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/fH_as3eZ5YU/hqdefault.jpg"></media:thumbnail></item><item><title>Code to Cloud in under 45 minutes</title><link>http://www.pyvideo.org/video/1713/code-to-cloud-in-under-45-minutes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Learn how to deploy an python application to the cloud in under 45 minutes.   In this hands-on workshop, you will get understanding the basics of cloud architecture (IaaS, PaaS, and SaaS), learn how to push your python application from github to the cloud in under 45 minutes, make it available for others to deploy, and integrate monitoring services.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Wetherill</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1713/code-to-cloud-in-under-45-minutes</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Code_to_Cloud_in_under_45_minu.mp4?Signature=xEnIkg44xvwJqE5TdMwfN8TDxKk%3D&amp;Expires=1363957099&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Code_to_Cloud_in_under_45_minu.mp4?Signature=xEnIkg44xvwJqE5TdMwfN8TDxKk%3D&amp;Expires=1363957099&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=rxj-cryxpu4" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/rxj-cryxpu4/hqdefault.jpg"></media:thumbnail></item><item><title>Digital signal processing through speech, hearing, and Python</title><link>http://www.pyvideo.org/video/1653/digital-signal-processing-through-speech-hearing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Why do pianos sound different from guitars? How can we visualize how deafness affects a child's speech? These are signal processing questions, traditionally tackled only by upper-level engineering students with MATLAB and differential equations; we're going to do it with algebra and basic Python skills. Based on a signal processing class for audiology graduate students, taught by a deaf musician.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mel Chua</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1653/digital-signal-processing-through-speech-hearing</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Digital_signal_processing_thro.mp4?Signature=SeHehAxua9ivr5KZhUuRGZqLLZo%3D&amp;Expires=1364659997&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Digital_signal_processing_thro.mp4?Signature=SeHehAxua9ivr5KZhUuRGZqLLZo%3D&amp;Expires=1364659997&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=P1h_vaX9n5E" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i1.ytimg.com/vi/P1h_vaX9n5E/hqdefault.jpg"></media:thumbnail></item><item><title>Effective Django</title><link>http://www.pyvideo.org/video/1717/effective-django-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Django is a popular, powerful web framework for Python. It has lots of "batteries" included, and makes it easy to get started. But all of the power means you can write low quality code that still works. Effective Django means building applications that are testable, maintainable, and scalable. This tutorial will introduce attendees to Django with an emphasis on testing, maintenance, and scale.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1717/effective-django-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Effective_Django.mp4?Signature=DE5RWL4NdRRbQvhpJ%2F40ZrrUj9Q%3D&amp;Expires=1363973745&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Effective_Django.mp4?Signature=DE5RWL4NdRRbQvhpJ%2F40ZrrUj9Q%3D&amp;Expires=1363973745&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=NfsJDPm0X54" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/NfsJDPm0X54/hqdefault.jpg"></media:thumbnail></item><item><title>Faster Python Programs through Optimization</title><link>http://www.pyvideo.org/video/1849/faster-python-programs-through-optimization-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1849/faster-python-programs-through-optimization-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Faster_Python_Programs_through.mp4?Signature=qjGDJW3rNNZIf7PUr2eAVcCrwsY%3D&amp;Expires=1363943393&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Faster_Python_Programs_through.mp4?Signature=qjGDJW3rNNZIf7PUr2eAVcCrwsY%3D&amp;Expires=1363943393&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=PszBxlDQNWw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/PszBxlDQNWw/hqdefault.jpg"></media:thumbnail></item><item><title>Going from web pages to web apps with Python</title><link>http://www.pyvideo.org/video/1663/going-from-web-pages-to-web-apps-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial teaches basic web development for people who have some experience writing HTML, CSS, and front-end Javascript, but have little or no experience building an end-to-end web application.

Together we will build a basic social bookmarking application using Django!</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia,Karen Rustad</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1663/going-from-web-pages-to-web-apps-with-python</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Going_from_web_pages_to_web_ap.mp4?Signature=%2BGr%2BTEHY6J98YdEEnB4fT%2FGfIYo%3D&amp;Expires=1363953573&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Going_from_web_pages_to_web_ap.mp4?Signature=%2BGr%2BTEHY6J98YdEEnB4fT%2FGfIYo%3D&amp;Expires=1363953573&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Z8FC8_2h5iM" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Z8FC8_2h5iM/hqdefault.jpg"></media:thumbnail></item><item><title>IPython in-depth: high-productivity interactive and parallel python</title><link>http://www.pyvideo.org/video/1652/ipython-in-depth-high-productivity-interactive-a-0</link><description>&lt;p&gt;Abstract&lt;/p&gt;
IPython provides tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer.

We will show how to use IPython in different ways, as: an interactive shell, an embedded shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.

All materials for this tutorial can be found on our [github
repository](https://github.com/ipython/ipython-in-depth)
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Granger,Fernando Pérez,Min RK</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1652/ipython-in-depth-high-productivity-interactive-a-0</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/IPython_indepth_highproductivi.mp4?Signature=6fLwDBJMmt65mqZPzjZlMpQhV2w%3D&amp;Expires=1364728655&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/IPython_indepth_highproductivi.mp4?Signature=6fLwDBJMmt65mqZPzjZlMpQhV2w%3D&amp;Expires=1364728655&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=bP8ydKBCZiY" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/bP8ydKBCZiY/hqdefault.jpg"></media:thumbnail></item><item><title>Learn Python Through Public Data Hacking</title><link>http://www.pyvideo.org/video/1725/learn-python-through-public-data-hacking</link><description>&lt;p&gt;Abstract&lt;/p&gt;
What's more fun than learning Python? Learning Python by hacking on public data! In this tutorial, you'll learn Python basics by reading files, scraping the web, building data structures, and analyzing real world data. By the end, you will have set up your Python environment, installed some useful packages, and learned how to write simple programs that you can use to impress your friends. </description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1725/learn-python-through-public-data-hacking</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Learn_Python_Through_Public_Da.mp4?Signature=GEpPDpj7lRHyx2wX9Vv81mEsyNE%3D&amp;Expires=1364743678&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Learn_Python_Through_Public_Da.mp4?Signature=GEpPDpj7lRHyx2wX9Vv81mEsyNE%3D&amp;Expires=1364743678&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=RrPZza_vZ3w" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/RrPZza_vZ3w/hqdefault.jpg"></media:thumbnail></item><item><title>Pyramid for Humans</title><link>http://www.pyvideo.org/video/1664/pyramid-for-humans</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pyramid has emerged as a fast, modern, lightweight web framework. This lively, hands-on tutorial covers a little about a lot: practical introductions to the most common facilities.  Fun, fast-paced, and most certainly not aimed at experts.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Everitt</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1664/pyramid-for-humans</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pyramid_for_Humans.mp4?Signature=4AdEu7Qqi5cwSAys7J48W8QLQ%2FA%3D&amp;Expires=1363917984&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Pyramid_for_Humans.mp4?Signature=4AdEu7Qqi5cwSAys7J48W8QLQ%2FA%3D&amp;Expires=1363917984&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=0CP7Cv4G6x0" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/0CP7Cv4G6x0/hqdefault.jpg"></media:thumbnail></item><item><title>Python beyond the CPU</title><link>http://www.pyvideo.org/video/1726/python-beyond-the-cpu</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Accelerators are the hottest tool in high performance computing but applicable to all fields. We present how to use Python's amazing ability to abstract away the low-level boiler-plate code turning accelerators from an exotic curiosity to a daily tool.
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Terrel,Mark Florisson,Travis Oliphant</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1726/python-beyond-the-cpu</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_beyond_the_CPU.mp4?Signature=ld9AdNnMKpc1htKuisgOCml9PsA%3D&amp;Expires=1364749634&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_beyond_the_CPU.mp4?Signature=ld9AdNnMKpc1htKuisgOCml9PsA%3D&amp;Expires=1364749634&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=D8NqF2jOuuw" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/D8NqF2jOuuw/hqdefault.jpg"></media:thumbnail></item><item><title>Python for Programmers: A Project-Based Tutorial</title><link>http://www.pyvideo.org/video/1651/python-for-programmers-a-project-based-tutorial</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Are you a Python-curious programmer? Learn by writing your first project! You'll build a complete quiz creation web application. We will cover topics from data structures and classes, to debugging and testing.

Before the day of the workshop, you will need to have Python 2.7, CherryPy, IPython, and Jinja2 installed. Alternatively, you may arrive at the venue an hour early to receive assistance.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexandra Strong,Christine Cheung,Katharine Jarmul</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1651/python-for-programmers-a-project-based-tutorial</guid><enclosure url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Programmers_A_Proje.mp4?Signature=2pRtNJXregGoYGKg%2F4jKvlucLBI%3D&amp;Expires=1363942342&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" length="None" type="video/mp4"></enclosure><media:group><media:content url="http://s3.us.archive.org/nextdayvideo/psf/pycon2013/Python_for_Programmers_A_Proje.mp4?Signature=2pRtNJXregGoYGKg%2F4jKvlucLBI%3D&amp;Expires=1363942342&amp;AWSAccessKeyId=FEWGReWX3QbNk0h3" mime_type="video/mp4"></media:content><media:content url="https://www.youtube.com/watch?v=Nc16qeGBtMU" mime_type="video/flv"></media:content></media:group><media:thumbnail url="http://i.ytimg.com/vi/Nc16qeGBtMU/hqdefault.jpg"></media:thumbnail></item><item><title>Rapid Web Prototyping with Lightweight Tools</title><link>http://www.pyvideo.org/video/1723/rapid-web-prototyping-with-lightweight-tools</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Tutorial participants will build a real-world web application rapidly using lightweight tools, such as Flask, Jinja2, MongoDB, and Twitter Bootstrap. By building the apps from scratch using tools whose size matches the task at hand, participants will be able to churn out working applications by the end of the tutorial that can solidify their Python and modern web dev knowledge.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Montalenti</dc:creator><pubDate>Wed, 13 Mar 2013 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/1723/rapid-web-prototyping-with-lightweight-tools</guid><enclosure url="https://www.youtube.com/watch?v=muMRNYPmQxE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i.ytimg.com/vi/muMRNYPmQxE/hqdefault.jpg"></media:thumbnail></item></channel></rss>