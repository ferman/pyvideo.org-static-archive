<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyCon US 2015</title><link>http://www.pyvideo.org/category/65/pycon-us-2015/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/65/pycon-us-2015/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Thu, 16 Apr 2015 00:00:00 -0500</lastBuildDate><ttl>500</ttl><item><title>Keynote  - Gabriella Coleman</title><link>http://www.pyvideo.org/video/3493/keynote-gabriella-coleman</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriella Coleman</dc:creator><pubDate>Thu, 16 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3493/keynote-gabriella-coleman</guid><enclosure url="https://www.youtube.com/watch?v=lNqtyi3sM-k" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/lNqtyi3sM-k/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Guido van Rossum</title><link>http://www.pyvideo.org/video/3417/keynote-guido-van-rossum-1</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Thu, 16 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3417/keynote-guido-van-rossum-1</guid><enclosure url="https://www.youtube.com/watch?v=G-uKNd5TSBw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/G-uKNd5TSBw/hqdefault.jpg"></media:thumbnail></item><item><title>Achieving Continuous Delivery: An Automation Story</title><link>http://www.pyvideo.org/video/3404/achieving-continuous-delivery-an-automation-stor</link><description>&lt;p&gt;Description&lt;/p&gt;
Continuos Deployment is the act of deploying software constantly.  The idea is if ""release early, release often"" is good, releasing very often is better.  It's not trivial.   Automation is part of the battle, and testing is another.   Learn to use tools like Jenkins and Ansible to move from deploying software once a month to 15 times every hour, and why you'll want to.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Cammarata</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3404/achieving-continuous-delivery-an-automation-stor</guid><enclosure url="https://www.youtube.com/watch?v=7tfTR42iNSs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/7tfTR42iNSs/hqdefault.jpg"></media:thumbnail></item><item><title>Avoiding Burnout, and other essentials of Open Source Self-Care</title><link>http://www.pyvideo.org/video/3447/avoiding-burnout-and-other-essentials-of-open-so</link><description>&lt;p&gt;Description&lt;/p&gt;
As technical community managers we are faced with a unique set of challenges. We do it because we love our communities, but we also are often guilty of neglecting our own very real needs in order to serve those communities. We end up feeling guilty, run down, inadequate, and ultimately burnt out.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kathleen Danielson</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3447/avoiding-burnout-and-other-essentials-of-open-so</guid><enclosure url="https://www.youtube.com/watch?v=RbeHBnWfXUc" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/RbeHBnWfXUc/hqdefault.jpg"></media:thumbnail></item><item><title>A Winning Strategy with The Weakest Link: how to use weak references to make your code more robust</title><link>http://www.pyvideo.org/video/3437/a-winning-strategy-with-the-weakest-link-how-to</link><description>&lt;p&gt;Description&lt;/p&gt;
Working with weak references should not just be for Python wizards. Whether you have a cache, memoizing a function, tracking objects, or various other bookkeeping needs, you definitely do not want code leaking memory or resources. In this talk, we will look at illuminating examples drawn from a variety of sources on how to use weak references to prevent such bugs.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Baker</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3437/a-winning-strategy-with-the-weakest-link-how-to</guid><enclosure url="https://www.youtube.com/watch?v=NknSssmLk4w" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/NknSssmLk4w/hqdefault.jpg"></media:thumbnail></item><item><title>Beyond grep: Practical Logging and Metrics</title><link>http://www.pyvideo.org/video/3479/beyond-grep-practical-logging-and-metrics</link><description>&lt;p&gt;Description&lt;/p&gt;
Your Python server applications are running but you’re wondering what they are doing?  Your only clue about their current state is the server load?  Let’s have stroll through the landscape of logging and metrics so you’ll find the perfect fit for your use cases!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hynek Schlawack</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3479/beyond-grep-practical-logging-and-metrics</guid><enclosure url="https://www.youtube.com/watch?v=gqmAwK0wNyw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/gqmAwK0wNyw/hqdefault.jpg"></media:thumbnail></item><item><title>Build and test wheel packages on Linux, OSX &amp; Windows</title><link>http://www.pyvideo.org/video/3473/build-and-test-wheel-packages-on-linux-osx-win</link><description>&lt;p&gt;Description&lt;/p&gt;
Practical guide to build and test wheel packages for all platforms using free
Continuous Integration services such as Travis CI (Linux and OSX) and AppVeyor
(Windows).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3473/build-and-test-wheel-packages-on-linux-osx-win</guid><enclosure url="https://www.youtube.com/watch?v=d-p6lJJObLU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/d-p6lJJObLU/hqdefault.jpg"></media:thumbnail></item><item><title>Bytes in the Machine: Inside the CPython interpreter</title><link>http://www.pyvideo.org/video/3420/bytes-in-the-machine-inside-the-cpython-interpre</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you ever wondered how the CPython interpreter works? Do you know where to find a 1,500 line switch statement in CPython? I'll talk about the structure of the interpreter that we all use every day by explaining how Ned Batchelder and I chased down a mysterious bug in Byterun, a Python interpreter written in Python. We'll also see visualizations of the VM as it executes your code.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allison Kaptur</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3420/bytes-in-the-machine-inside-the-cpython-interpre</guid><enclosure url="https://www.youtube.com/watch?v=HVUTjQzESeo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/HVUTjQzESeo/hqdefault.jpg"></media:thumbnail></item><item><title>Choose Your Own WSGI Deployment Adventure</title><link>http://www.pyvideo.org/video/3445/choose-your-own-wsgi-deployment-adventure</link><description>&lt;p&gt;Description&lt;/p&gt;
From servers and proxies to configuration management, the Web Server Gateway Interface (WSGI) deployment ecosystem is complicated for new developers. This choose your own adventure talk contains decision points for the audience to choose topics via text and email votes. Each choice leads down a separate path to explain different confusing WSGI subjects. Bring your phone or laptop to participate!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston,Matt Makai</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3445/choose-your-own-wsgi-deployment-adventure</guid><enclosure url="https://www.youtube.com/watch?v=R-YvQ_YvzA4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/R-YvQ_YvzA4/hqdefault.jpg"></media:thumbnail></item><item><title>Closing Messages</title><link>http://www.pyvideo.org/video/3401/closing-messages</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3401/closing-messages</guid><enclosure url="https://www.youtube.com/watch?v=6_FOOvoBcZI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/6_FOOvoBcZI/hqdefault.jpg"></media:thumbnail></item><item><title>Cutting Off the Internet: Testing Applications that Use Requests</title><link>http://www.pyvideo.org/video/3462/cutting-off-the-internet-testing-applications-th</link><description>&lt;p&gt;Description&lt;/p&gt;
A brief and opinionated view of testing applications and libraries that use requests by a core-developer of requests. You will receive an overview of testing with responses, vcr, httpretty, mock, and betamax.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Cordasco</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3462/cutting-off-the-internet-testing-applications-th</guid><enclosure url="https://www.youtube.com/watch?v=YHbKxFcDltM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/YHbKxFcDltM/hqdefault.jpg"></media:thumbnail></item><item><title>Describing Descriptors</title><link>http://www.pyvideo.org/video/3480/describing-descriptors</link><description>&lt;p&gt;Description&lt;/p&gt;
The Python library uses descriptors frequently, but most developers overlook this feature. This talk will cover what a descriptor is, the current uses in the standard library, and how custom descriptors can be used in a developer’s toolset to eliminate repeated code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laura Rupprecht</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3480/describing-descriptors</guid><enclosure url="https://www.youtube.com/watch?v=h2-WPwGnHqE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/h2-WPwGnHqE/hqdefault.jpg"></media:thumbnail></item><item><title>Eventually Correct: Testing Async Apps</title><link>http://www.pyvideo.org/video/3419/eventually-correct-testing-async-apps</link><description>&lt;p&gt;Description&lt;/p&gt;
Async frameworks like Tornado and asyncio scramble our usual strategies for writing sequential code. This is most problematic when writing tests: how can you validate the outcome when you don’t know when to expect it? This talk introduces you to methods and practices for unittesting async applications.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A. Jesse Jiryu Davis</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3419/eventually-correct-testing-async-apps</guid><enclosure url="https://www.youtube.com/watch?v=GpvCSkxLiZo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/GpvCSkxLiZo/hqdefault.jpg"></media:thumbnail></item><item><title>Exploring is never boring: understanding CPython without reading the code</title><link>http://www.pyvideo.org/video/3465/exploring-is-never-boring-understanding-cpython</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you started to read the source code of CPython but not gotten as far as you wanted? Maybe you want to understand more about CPython but don't know where to begin. I'll present a number of strategies for getting more familiar with Python under the hood that go beyond ""just read it!"" This talk isn't about contributing - it's about getting into the code base and discovering interesting things.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allison Kaptur</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3465/exploring-is-never-boring-understanding-cpython</guid><enclosure url="https://www.youtube.com/watch?v=ZSIRGLmQTLk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ZSIRGLmQTLk/hqdefault.jpg"></media:thumbnail></item><item><title>Finding Spammers &amp; Scammers through Rate Tracking with Python &amp; Redis</title><link>http://www.pyvideo.org/video/3503/finding-spammers-scammers-through-rate-tracking</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk provides an introduction to rate tracking as well as an explanation of a particularly cool way to implement it. You will learn what rate tracking is, why you would want to do it, and then how you can use build a Redis-backed “velocity engine”  in Python to do just that. 


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jay Chan,Mica Swyers</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3503/finding-spammers-scammers-through-rate-tracking</guid><enclosure url="https://www.youtube.com/watch?v=tIBkiXvEAC0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/tIBkiXvEAC0/hqdefault.jpg"></media:thumbnail></item><item><title>Free Software, Free People</title><link>http://www.pyvideo.org/video/3408/free-software-free-people</link><description>&lt;p&gt;Description&lt;/p&gt;
Four years after the Arab Spring &amp; 2 years after Snowden, little has changed. What now? This talk will remember Telecomix, an ad-hoc activist cluster that supported free communication around the world. Stories of humans and machines, reflection on 3 years of hacktivism &amp; exploration of similarities to the free software community. It follows a 2011 Pycon lightning talk given after Tahrir Square.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pete Fein</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3408/free-software-free-people</guid><enclosure url="https://www.youtube.com/watch?v=A3dimvwrnO8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/A3dimvwrnO8/hqdefault.jpg"></media:thumbnail></item><item><title>Getting to Jython 2.7 and beyond</title><link>http://www.pyvideo.org/video/3482/getting-to-jython-27-and-beyond</link><description>&lt;p&gt;Description&lt;/p&gt;
So how did we get to Jython 2.7 anyway? And what are our future plans?
In this talk, you will get a taste of how Jython works, some new
functionality, and especially how Jython leverages both Python and
Java to provide a very compatible solution.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Baker</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3482/getting-to-jython-27-and-beyond</guid><enclosure url="https://www.youtube.com/watch?v=hLm3garVQFo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/hLm3garVQFo/hqdefault.jpg"></media:thumbnail></item><item><title>Gradual Typing for Python 3</title><link>http://www.pyvideo.org/video/3389/guido-van-rossum</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3389/guido-van-rossum</guid><enclosure url="https://www.youtube.com/watch?v=2wDvzy6Hgxg" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/2wDvzy6Hgxg/hqdefault.jpg"></media:thumbnail></item><item><title>Graph Database Patterns in Python</title><link>http://www.pyvideo.org/video/3476/graph-database-patterns-in-python</link><description>&lt;p&gt;Description&lt;/p&gt;
Creating and using models from a graph database can be quite different to the ones used for row/column/document-oriented databases, in the sense that the same query patterns could differ significantly in structure and performance. This session will present how to create models in Python for Titan property graphs, that allow you to manipulate graphs as if you were querying with Gremlin DSL.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Elizabeth Ramirez</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3476/graph-database-patterns-in-python</guid><enclosure url="https://www.youtube.com/watch?v=fNAzyZZZ-IQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/fNAzyZZZ-IQ/hqdefault.jpg"></media:thumbnail></item><item><title>Hash Functions and You: Partners in Freedom</title><link>http://www.pyvideo.org/video/3424/hash-functions-and-you-partners-in-freedom</link><description>&lt;p&gt;Description&lt;/p&gt;
Our trusty friend, the hash function, is as crucial to programming as linked lists or recursion, but it doesn't always get the press that it deserves. 

We're going to talk about hash functions, some data structures involving hash functions, the stately bloom filter, and the security implications of password hashing. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Curtis Lassam</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3424/hash-functions-and-you-partners-in-freedom</guid><enclosure url="https://www.youtube.com/watch?v=IGwNQfjLTp0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/IGwNQfjLTp0/hqdefault.jpg"></media:thumbnail></item><item><title>Improve your development environments with virtualization</title><link>http://www.pyvideo.org/video/3411/improve-your-development-environments-with-virtua</link><description>&lt;p&gt;Description&lt;/p&gt;
A talk on how to employ virtualization to make development easier, more portable, and have it more closely adhere to production environments.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3411/improve-your-development-environments-with-virtua</guid><enclosure url="https://www.youtube.com/watch?v=Dg_vPMnC7_k" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Dg_vPMnC7_k/hqdefault.jpg"></media:thumbnail></item><item><title>Interactive data for the web</title><link>http://www.pyvideo.org/video/3438/interactive-data-for-the-web</link><description>&lt;p&gt;Description&lt;/p&gt;
Interactive data visualization libraries are mostly a JavaScript stronghold. The new Python library, Bokeh, provides a simple, clean way to make more shiny things. Although it comes from the data science community, it has a lot to offer web developers. For a visualization you might have built in d3.js, I'll show how to build it in Bokeh, how to test it, and how to hook it into your web app. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Bird</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3438/interactive-data-for-the-web</guid><enclosure url="https://www.youtube.com/watch?v=O5OvOLK-xqQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/O5OvOLK-xqQ/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to game programming with Kivy</title><link>http://www.pyvideo.org/video/3450/introduction-to-game-programming-with-kivy</link><description>&lt;p&gt;Description&lt;/p&gt;
This tutorial will walk the attendees through development of a simple game using Kivy with time left over for some experimentation and exploration of different types of games.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3450/introduction-to-game-programming-with-kivy</guid><enclosure url="https://www.youtube.com/watch?v=U14P8gtjQmU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/U14P8gtjQmU/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to Spark with python</title><link>http://www.pyvideo.org/video/3407/introduction-to-spark-with-python</link><description>&lt;p&gt;Description&lt;/p&gt;
 In this tutorial we will cover the basics of writing spark programs in python (initially from the pyspark shell, later with independent applications). We will also discuss some of the theory behind spark, and some performance considerations when using spark in a cluster.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Orlando Karam</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3407/introduction-to-spark-with-python</guid><enclosure url="https://www.youtube.com/watch?v=9xYfNznjClE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/9xYfNznjClE/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Jacob Kaplan-Moss</title><link>http://www.pyvideo.org/video/3481/keynote-jacob-kaplan-moss-0</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Kaplan-Moss</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3481/keynote-jacob-kaplan-moss-0</guid><enclosure url="https://www.youtube.com/watch?v=hIJdFxYlEKE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/hIJdFxYlEKE/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Van Lindberg - Pycon 2015</title><link>http://www.pyvideo.org/video/3494/keynote-van-lindberg-pycon-2015</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3494/keynote-van-lindberg-pycon-2015</guid><enclosure url="https://www.youtube.com/watch?v=lvlfTZzJ2_Q" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/lvlfTZzJ2_Q/hqdefault.jpg"></media:thumbnail></item><item><title>Lessons learned with asyncio ("Look ma, I wrote a distributed hash table!")</title><link>http://www.pyvideo.org/video/3388/lessons-learned-with-asyncio-look-ma-i-wrote-a</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk introduces the asyncio module. I'll cover what it's for, how it works and describe how I used it to write a real-world networked application (a distributed hash table).
We'll explore the event loop, co-routines, futures and networking with examples from my code.
This won't be an exhaustive exposition. Rather, attendees will grasp enough of asyncio to continue with their own studies.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nicholas Tollervey</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3388/lessons-learned-with-asyncio-look-ma-i-wrote-a</guid><enclosure url="https://www.youtube.com/watch?v=1eew8BngN7Y" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/1eew8BngN7Y/hqdefault.jpg"></media:thumbnail></item><item><title>Lighting Talks - April 11th 17h30</title><link>http://www.pyvideo.org/video/3426/lighting-talks-april-11th-17h30</link><description></description><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3426/lighting-talks-april-11th-17h30</guid><enclosure url="https://www.youtube.com/watch?v=JVVMMULwR4s" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/JVVMMULwR4s/hqdefault.jpg"></media:thumbnail></item><item><title>Lighting Talks - April 12th 08h30</title><link>http://www.pyvideo.org/video/3464/lighting-talks-april-12th-08h30</link><description></description><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3464/lighting-talks-april-12th-08h30</guid><enclosure url="https://www.youtube.com/watch?v=ZEE3dlo7ov0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ZEE3dlo7ov0/hqdefault.jpg"></media:thumbnail></item><item><title>Machine Learning with Scikit-Learn (II)</title><link>http://www.pyvideo.org/video/3495/machine-learning-with-scikit-learn-ii</link><description>&lt;p&gt;Description&lt;/p&gt;
This tutorial will offer an overview of common usage and methodological patterns when using Scikit-Learn to build predictive models. In particular we will highlight common strategies to deal with data with heterogeneously typed attributes with pandas dataframes, model evaluation and tuning. Finally if time permits we will explore the specificities of working with textual data.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3495/machine-learning-with-scikit-learn-ii</guid><enclosure url="https://www.youtube.com/watch?v=oGqGxvqA9-k" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/oGqGxvqA9-k/hqdefault.jpg"></media:thumbnail></item><item><title>Make web development awesome with visual diffing tools</title><link>http://www.pyvideo.org/video/3488/make-web-development-awesome-with-visual-diffing</link><description>&lt;p&gt;Description&lt;/p&gt;
Visual diffs are a great way to check for regressions on web sites which may be missed by unit tests. In this talk you'll learn how to run end-to-end tests on your client and server web libraries using a tool called dpxdt. I'll also show how you can combine it with web-based diff tools like ""git webdiff"" to quickly and confidently iterate on web tools.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Vanderkam</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3488/make-web-development-awesome-with-visual-diffing</guid><enclosure url="https://www.youtube.com/watch?v=jUUTqgzNR3M" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/jUUTqgzNR3M/hqdefault.jpg"></media:thumbnail></item><item><title>Making Beautiful Graphs in Python and Sharing Them</title><link>http://www.pyvideo.org/video/3406/making-beautiful-graphs-in-python-and-sharing-the</link><description>&lt;p&gt;Description&lt;/p&gt;
From Python basics to NYT-quality graphics, we walk through workflows to make beautiful, shareable data visualizations. We’ll also explore 3D plotting in the browser, cross-language collaboration, and matplotlib figure conversion. By using Python’s scientific stack and an IPython notebook--attendees may follow along. For data analysts, data journalists, and anyone who likes plots.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Seier,Étienne Tétreault-Pinard,Marianne Corvellec</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3406/making-beautiful-graphs-in-python-and-sharing-the</guid><enclosure url="https://www.youtube.com/watch?v=9F_kkf7CDQs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/9F_kkf7CDQs/hqdefault.jpg"></media:thumbnail></item><item><title>Managing Your Infrastructure with SaltStack</title><link>http://www.pyvideo.org/video/3513/managing-your-infrastructure-with-saltstack</link><description>&lt;p&gt;Description&lt;/p&gt;
Are you still using SSH to manage your servers? Deploying code manually with rsync? There’s a better way. SaltStack is one of the latest and greatest tools for system management. Once you have a foundation of lightning-fast remote execution, you can build anything on top of it. Plus, it’s written in Python, and easy to extend!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Colton Myers</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3513/managing-your-infrastructure-with-saltstack</guid><enclosure url="https://www.youtube.com/watch?v=y-zQUqMHRX4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/y-zQUqMHRX4/hqdefault.jpg"></media:thumbnail></item><item><title>Oh, Come On Who Needs Bytearrays</title><link>http://www.pyvideo.org/video/3515/oh-come-on-who-needs-bytearrays</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3515/oh-come-on-who-needs-bytearrays</guid><enclosure url="https://www.youtube.com/watch?v=z9Hmys8ojno" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/z9Hmys8ojno/hqdefault.jpg"></media:thumbnail></item><item><title>Other people's messy data (and how not to hate it!)</title><link>http://www.pyvideo.org/video/3467/other-peoples-messy-data-and-how-not-to-hate-it</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you ever viscerally hated a dataset? Do you want to just get data cleaning out of the way? Are you always left wondering how it consumes most of your time? Whether you work in the sciences, work with government data or scrape websites, data cleaning is a necessary evil. We'll share our woes and check out state of the art in day to day data cleaning tools and strategies.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mali Akmanalp</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3467/other-peoples-messy-data-and-how-not-to-hate-it</guid><enclosure url="https://www.youtube.com/watch?v=_eQ_8U5kruQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/_eQ_8U5kruQ/hqdefault.jpg"></media:thumbnail></item><item><title>Pandas From The Ground Up</title><link>http://www.pyvideo.org/video/3395/pandas-from-the-ground-up</link><description>&lt;p&gt;Description&lt;/p&gt;
The typical Pandas user learns one dataframe method at a time, slowly scraping features together through trial and error until they can solve the task in front of them. In this tutorial you will re-learn how to think about dataframes from the ground up, and discover how to select intelligently from their abilities to solve your data processing problems through direct and deliberately-chosen steps.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3395/pandas-from-the-ground-up</guid><enclosure url="https://www.youtube.com/watch?v=5JnMutdy6Fw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5JnMutdy6Fw/hqdefault.jpg"></media:thumbnail></item><item><title>Performance by the Numbers: analyzing the performance of web applications</title><link>http://www.pyvideo.org/video/3451/performance-by-the-numbers-analyzing-the-perform</link><description>&lt;p&gt;Description&lt;/p&gt;
Everyone knows poor performance when they see it, and performance concerns affect every application -- web applications more than most. But finding performance problems can be extraordinarily difficult, and requires an analytical approach coupled with good instrumentation. This talk explores approaches to instrumentation and what that instrumentation can tell you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geoff Gerrietts</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3451/performance-by-the-numbers-analyzing-the-perform</guid><enclosure url="https://www.youtube.com/watch?v=UAztOuO1ANQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/UAztOuO1ANQ/hqdefault.jpg"></media:thumbnail></item><item><title>PostgreSQL Proficiency for Python People</title><link>http://www.pyvideo.org/video/3402/postgresql-proficiency-for-python-people-0</link><description>&lt;p&gt;Description&lt;/p&gt;
PostgreSQL has become the default database for most green-field development projects, and is the data storage architecture behind many major Python-based success stories, such as Instagram. Despite a reputation as being complex and fiddly, Postgres is easy to install, administer, maintain, and use... with just a little bit of orientation. This is that orientation.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christophe Pettus</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3402/postgresql-proficiency-for-python-people-0</guid><enclosure url="https://www.youtube.com/watch?v=78A2gJBgL9g" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/78A2gJBgL9g/hqdefault.jpg"></media:thumbnail></item><item><title>Python Performance Profiling: The Guts And The Glory</title><link>http://www.pyvideo.org/video/3394/python-performance-profiling-the-guts-and-the-gl-0</link><description>&lt;p&gt;Description&lt;/p&gt;
Your Python program is too slow, and you need to optimize it. Where do you start? With the right tools, you can optimize your code where it counts. We’ll explore the guts of the Python profiler “Yappi” to understand its features and limitations. We’ll learn how to find the maximum performance wins with minimum effort.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">A. Jesse Jiryu Davis</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3394/python-performance-profiling-the-guts-and-the-gl-0</guid><enclosure url="https://www.youtube.com/watch?v=4uJWWXYHxaM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/4uJWWXYHxaM/hqdefault.jpg"></media:thumbnail></item><item><title>Pythons are Deaf, So are Some Pythonistas</title><link>http://www.pyvideo.org/video/3383/pythons-are-deaf-so-are-some-pythonistas</link><description>&lt;p&gt;Description&lt;/p&gt;
ASL, like Python, is a language which is both fun and powerful. We have used Python to build a tool, ASL-CLeaR (American Sign Language Concept Learning Resource)  for the DHH community which will teach STEM terminology using ASL exclusively. We are also building a summer program to teach Python in English/ASL to DHH students.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">en zyme,Jon Henner</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3383/pythons-are-deaf-so-are-some-pythonistas</guid><enclosure url="https://www.youtube.com/watch?v=-LVlzIOxbAE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/-LVlzIOxbAE/hqdefault.jpg"></media:thumbnail></item><item><title>Rethinking packaging, development and deployment</title><link>http://www.pyvideo.org/video/3454/rethinking-packaging-development-and-deployment-1</link><description>&lt;p&gt;Description&lt;/p&gt;
Applying functional programming ideas to solve the problem of packaging software and configuration of systems in a stateless and deterministic way. Nix project addresses those problems in unique way based on academic research that has been applied to real world software collections in last 10 years.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Domen Kožar</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3454/rethinking-packaging-development-and-deployment-1</guid><enclosure url="https://www.youtube.com/watch?v=W8A2bOKPtJU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/W8A2bOKPtJU/hqdefault.jpg"></media:thumbnail></item><item><title>Schemas for the Real World</title><link>http://www.pyvideo.org/video/3440/schemas-for-the-real-world-0</link><description>&lt;p&gt;Description&lt;/p&gt;
Development challenges us to code for users’ personal world. Users give push-back to ill-fitted assumptions about their own name, gender, sexual orientation, important relationships, &amp; other attributes that are individually meaningful. We'll explore how to develop software that brings real world into focus &amp; that allows individuals to authentically reflect their personhood &amp; physical world.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carina C. Zona</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3440/schemas-for-the-real-world-0</guid><enclosure url="https://www.youtube.com/watch?v=PYYfVqtcWQY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/PYYfVqtcWQY/hqdefault.jpg"></media:thumbnail></item><item><title>Serialization formats are not toys</title><link>http://www.pyvideo.org/video/3492/serialization-formats-are-not-toys</link><description>&lt;p&gt;Description&lt;/p&gt;
It’s not in the OWASP Top 10, but you don’t have to look far to hear stories of security vulnerabilities involving deserialization of user input. In this talk I’ll go over what the threat is and how you might be making yourself vulnerable. I’ll cover the features (not bugs: features) of XML, YAML, and JSON that make them surprisingly dangerous, and how to protect your code from them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Eastman</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3492/serialization-formats-are-not-toys</guid><enclosure url="https://www.youtube.com/watch?v=kjZHjvrAS74" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/kjZHjvrAS74/hqdefault.jpg"></media:thumbnail></item><item><title>Ship it: Deployments with Pip</title><link>http://www.pyvideo.org/video/3469/ship-it-deployments-with-pip</link><description>&lt;p&gt;Description&lt;/p&gt;
Gone are the days where creating system packages or scp-ing tar balls were required for deployment.  With Pip, Fabric, and Jenkins we've  developed a pipeline to simplify deployments and rollbacks that dove-tails into configuration management and virtualization.  New machines can come fully deployed and ready to rock at a moments notice allowing you to scale out nodes quickly and painlessly.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Tracy</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3469/ship-it-deployments-with-pip</guid><enclosure url="https://www.youtube.com/watch?v=aD2CfKQB5xM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/aD2CfKQB5xM/hqdefault.jpg"></media:thumbnail></item><item><title>Smart services &amp; smart clients:  How micro-services change the way you build and deploy code.</title><link>http://www.pyvideo.org/video/3435/smart-services-smart-clients-how-micro-servic</link><description>&lt;p&gt;Description&lt;/p&gt;
At Runscope we've standardized the idea of small independent ""smart"" services that can be quickly built, deployed, and scaled. This talk examines lessons learned from writing these services as well as patterns found in other platforms. We present a detailed look at the code that allow us to build dozens of services, serving billions of requests, while deploying to our cluster over 20 times a day.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Stratton</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3435/smart-services-smart-clients-how-micro-servic</guid><enclosure url="https://www.youtube.com/watch?v=NYVUn8T-0qA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/NYVUn8T-0qA/hqdefault.jpg"></media:thumbnail></item><item><title>So you think you can PDB?</title><link>http://www.pyvideo.org/video/3439/so-you-think-you-can-pdb-0</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk will be an introduction to the most commonly used Python Debugger commands and what they do. Learn how to navigate and inspect code from the pdb prompt so you can better understand how it works. The Python Debugger is a valuable debugging tool for all levels of Python programmers. You should walk away being able to debug the next Python code you encounter!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clayton Parker</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3439/so-you-think-you-can-pdb-0</guid><enclosure url="https://www.youtube.com/watch?v=P0pIW5tJrRM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/P0pIW5tJrRM/hqdefault.jpg"></media:thumbnail></item><item><title>streamparse: real-time streams with Python and Apache Storm</title><link>http://www.pyvideo.org/video/3490/streamparse-real-time-streams-with-python-and-ap</link><description>&lt;p&gt;Description&lt;/p&gt;
Real-time streams are everywhere, but does Python have a good way of processing them? Until recently, there were no good options. A new open source project, streamparse, makes working with real-time data streams easy for Pythonistas. If you have ever wondered how to process 10,000 data tuples per second with Python -- while maintaining high availability and low latency -- this talk is for you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Montalenti</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3490/streamparse-real-time-streams-with-python-and-ap</guid><enclosure url="https://www.youtube.com/watch?v=ja4Qj9-l6WQ" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ja4Qj9-l6WQ/hqdefault.jpg"></media:thumbnail></item><item><title>Techniques for Debugging Hard Problems</title><link>http://www.pyvideo.org/video/3485/techniques-for-debugging-hard-problems</link><description>&lt;p&gt;Description&lt;/p&gt;
Sometimes your programs have bugs. Often they're shallow things, simple AttributeErrors or TypeErrors. Sometimes they're large, complex, and nearly impossible to debug. This talk explores techniques for figuring these out.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3485/techniques-for-debugging-hard-problems</guid><enclosure url="https://www.youtube.com/watch?v=ij99SGGEX34" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ij99SGGEX34/hqdefault.jpg"></media:thumbnail></item><item><title>Terminal whispering</title><link>http://www.pyvideo.org/video/3455/terminal-whispering</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you ever wanted to add a status bar to your command line program?
Or maybe color the output a bit? Or do you want to write a fullscreen terminal application like ls, top, vim, or emacs? Then you need to speak a bit of terminal! This talk describes how to talk to your terminal from scratch and goes on to show why Python libraries Blessings and Urwid are so awesome.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Ballinger</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3455/terminal-whispering</guid><enclosure url="https://www.youtube.com/watch?v=WAitSilLDUA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/WAitSilLDUA/hqdefault.jpg"></media:thumbnail></item><item><title>The Ethical Consequences Of Our Collective Activities</title><link>http://www.pyvideo.org/video/3507/the-ethical-consequences-of-our-collective-activi</link><description>&lt;p&gt;Description&lt;/p&gt;
As more of the world is controlled by software, software developers have an increasing obligation to serve that world well.  Yet, we don't yet have a sense of what makes a good ethical standard.  The fast pace, success, and youth (in both historical and demographic terms) of our industry have given us the sense that such a standard might not be required.  This talk will correct that misconception.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glyph</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3507/the-ethical-consequences-of-our-collective-activi</guid><enclosure url="https://www.youtube.com/watch?v=uSbKjRRbjZs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/uSbKjRRbjZs/hqdefault.jpg"></media:thumbnail></item><item><title>To ORM or not to ORM</title><link>http://www.pyvideo.org/video/3449/to-orm-or-not-to-orm</link><description>&lt;p&gt;Description&lt;/p&gt;
Database ORMs make it really convenient to pythonically query a database, but it's difficult to decide when to use them and when not to---and what the alternatives are. In this talk you'll learn strategies for deciding when and where to use an ORM, when to be cautious, and how to tell that you're doing the right thing, drawn from real-world lessons learned building the Inbox email platform.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3449/to-orm-or-not-to-orm</guid><enclosure url="https://www.youtube.com/watch?v=Sadng6tR7Q4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Sadng6tR7Q4/hqdefault.jpg"></media:thumbnail></item><item><title>WebSockets from the Wire Up</title><link>http://www.pyvideo.org/video/3506/websockets-from-the-wire-up</link><description>&lt;p&gt;Description&lt;/p&gt;
HTML5 WebSockets power the real-time web. Come take a deep dive into how they
work, from the big picture down to what goes over the wire, including insight
into the performance benefits of the protocol, via a real-world example of how
WebSockets are implemented client- and server-side in Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3506/websockets-from-the-wire-up</guid><enclosure url="https://www.youtube.com/watch?v=u5QT3luWx7w" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/u5QT3luWx7w/hqdefault.jpg"></media:thumbnail></item><item><title>What to do when you need crypto</title><link>http://www.pyvideo.org/video/3386/what-to-do-when-you-need-crypto</link><description>&lt;p&gt;Description&lt;/p&gt;
The cryptographic world doesn't lend itself to the typical developer flow of learning while doing. Add that to the massive amount of bad or outdated information on the web and many developers are lost or worse, build insecure systems. This tutorial will introduce developers to modern cryptography with an eye towards practical scenarios around password management, encryption and key management.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jarret Raim,Paul Kehrer</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3386/what-to-do-when-you-need-crypto</guid><enclosure url="https://www.youtube.com/watch?v=0m2ZUS9OH4k" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/0m2ZUS9OH4k/hqdefault.jpg"></media:thumbnail></item><item><title>Where in your RAM is "python san_diego.py"?</title><link>http://www.pyvideo.org/video/3504/where-in-your-ram-is-python-san_diegopy</link><description>&lt;p&gt;Description&lt;/p&gt;
Gumshoes, the rogue program `san_diego.py` is threatening to cause havok!  What is it doing to hide itself?  What kind of things is it doing?  Who might it be communicating with?  RAM is a big place - how can we even find it, much less any of this information? Stay tuned and find out!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ying Li</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3504/where-in-your-ram-is-python-san_diegopy</guid><enclosure url="https://www.youtube.com/watch?v=tMKXcc2-xO8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/tMKXcc2-xO8/hqdefault.jpg"></media:thumbnail></item><item><title>Your Brain's API: Giving and Getting Technical Help</title><link>http://www.pyvideo.org/video/3483/your-brains-api-giving-and-getting-technical-he</link><description>&lt;p&gt;Description&lt;/p&gt;
Software engineers are never done learning since our field is always changing. We are always beginners at some things and experts at others. Along the way from beginner to expert we have to ask a lot of questions, but it can be hard to get help. This talk gives concrete tools to help you ask with confidence, and highlights common expert mistakes that inadvertently make people feel foolish. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sasha Laundy</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3483/your-brains-api-giving-and-getting-technical-he</guid><enclosure url="https://www.youtube.com/watch?v=hY14Er6JX2s" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/hY14Er6JX2s/hqdefault.jpg"></media:thumbnail></item><item><title>Zen of Quality</title><link>http://www.pyvideo.org/video/3444/zen-of-quality</link><description>&lt;p&gt;Description&lt;/p&gt;
It is extremely important to PBS that digital viewers have an awesome experience when viewing online videos.  In this talk, we explain how PBS built a system to collect, analyze, and measure who's getting a good experience -- and who's not. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Howsden</dc:creator><pubDate>Sun, 12 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3444/zen-of-quality</guid><enclosure url="https://www.youtube.com/watch?v=Q94pNl6jzuk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Q94pNl6jzuk/hqdefault.jpg"></media:thumbnail></item><item><title>3D Print Anything with the Blender API</title><link>http://www.pyvideo.org/video/3486/3d-print-anything-with-the-blender-api</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jenny Cheng</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3486/3d-print-anything-with-the-blender-api</guid><enclosure url="https://www.youtube.com/watch?v=ikcHP0Hd8Kc" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ikcHP0Hd8Kc/hqdefault.jpg"></media:thumbnail></item><item><title>A Beginner's Guide to Test-driven Development</title><link>http://www.pyvideo.org/video/3474/a-beginners-guide-to-test-driven-development</link><description>&lt;p&gt;Description&lt;/p&gt;
Software is maintained by humans with limited memory and an unfortunate tendency to make mistakes. Test-driven development (TDD) can help you work around these design flaws by providing a permanent, automated specification for your code. Learn how to implement TDD when bug fixing and implementing new features and how this process will ensure your code is correct both now and in the future.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Itamar Turner-Trauring</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3474/a-beginners-guide-to-test-driven-development</guid><enclosure url="https://www.youtube.com/watch?v=ePaga05gisk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ePaga05gisk/hqdefault.jpg"></media:thumbnail></item><item><title>Advanced Git</title><link>http://www.pyvideo.org/video/3392/advanced-git</link><description>&lt;p&gt;Description&lt;/p&gt;
You know clone, commit, push, and pull. Now you're ready for the fun stuff. This talk will give you the advanced knowledge you need to take control of your git repository: rebase, cherry-pick, bisect, blame, squashing, and the reflog. You'll also get a better conceptual understanding of how git works, allowing you to chain these tools together to accomplish whatever task you need.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Baumgold</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3392/advanced-git</guid><enclosure url="https://www.youtube.com/watch?v=4EOZvow1mk4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/4EOZvow1mk4/hqdefault.jpg"></media:thumbnail></item><item><title>Ansible beyond YAML</title><link>http://www.pyvideo.org/video/3484/ansible-beyond-yaml</link><description>&lt;p&gt;Description&lt;/p&gt;
Ansible is a configuration management tool whose primary mode of operation involve using YAML to describe deployments and operations. However, it can do much more and be extended using python, which is what we will explore in this talk. Among others, we will see the plugins system for various part of the tool and how to reuse Ansible in a script.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Scherer</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3484/ansible-beyond-yaml</guid><enclosure url="https://www.youtube.com/watch?v=igJTEugHozM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/igJTEugHozM/hqdefault.jpg"></media:thumbnail></item><item><title>Beyond PEP 8 -- Best practices for beautiful intelligible code</title><link>http://www.pyvideo.org/video/3511/beyond-pep-8-best-practices-for-beautiful-inte</link><description>&lt;p&gt;Description&lt;/p&gt;
Distillation of knowledge gained from a decade of Python consulting, Python training, code reviews, and serving as a core developer.   Learn to avoid some of the hazards of the PEP 8 style guide and learn what really matters for creating beautiful intelligible code.



</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3511/beyond-pep-8-best-practices-for-beautiful-inte</guid><enclosure url="https://www.youtube.com/watch?v=wf-BqAjZb8M" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/wf-BqAjZb8M/hqdefault.jpg"></media:thumbnail></item><item><title>Building a REST API Using Django &amp; Django REST Framework</title><link>http://www.pyvideo.org/video/3443/building-a-rest-api-using-django-django-rest-fr</link><description>&lt;p&gt;Description&lt;/p&gt;
Using a combination of Django and Django REST Framework, we will build a Restaurant Menu that can be managed via a REST API. Starting from the install of the Django REST Framework, we will build our way to a functional API that meets the needs of developers and end-users. You will walk away with an understanding of the basic concepts of REST APIs and a working sample project.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kenny Yarboro</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3443/building-a-rest-api-using-django-django-rest-fr</guid><enclosure url="https://www.youtube.com/watch?v=PwssEec3IRw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/PwssEec3IRw/hqdefault.jpg"></media:thumbnail></item><item><title>Building secure systems</title><link>http://www.pyvideo.org/video/3442/building-secure-systems</link><description>&lt;p&gt;Description&lt;/p&gt;
How do you build secure software? Why do we see bad security track records in projects that otherwise seem to tick all the right engineering boxes? Why is communicating about security issues so painful? More importantly: how can we do all of these things better?

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurens Van Houtven</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3442/building-secure-systems</guid><enclosure url="https://www.youtube.com/watch?v=PjcTwqYSk-E" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/PjcTwqYSk-E/hqdefault.jpg"></media:thumbnail></item><item><title>Data Science in Advertising: Or a future when we love ads</title><link>http://www.pyvideo.org/video/3421/data-science-in-advertising-or-a-future-when-we</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk would give you an in-depth overview of Real-Time Bidded (RTB) advertising systems, and why with increasing sophistication in ad-tech, in the future we will wonder why we ever hated ads. In particular, this talk will discuss technical challenges in ad systems and how we use Computational Advertising and Data Science to solve problems around Click Through Rate (CTR) Prediction, Auto-Bidding systems, Traffic Prediction, etc.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Soups Ranjan</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3421/data-science-in-advertising-or-a-future-when-we</guid><enclosure url="https://www.youtube.com/watch?v=HZTgLuOpFU8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/HZTgLuOpFU8/hqdefault.jpg"></media:thumbnail></item><item><title>Demystifying Docker</title><link>http://www.pyvideo.org/video/3418/demystifying-docker</link><description>&lt;p&gt;Description&lt;/p&gt;
Docker was one of last year’s most talked about open source projects - but what is it? And what does it mean for deploying applications? This talk will explain what Docker is and where it fits in with other deployment techniques. Attendees will learn the fundamentals of Docker, see some practical examples of how Docker is used, and consider if Docker could be a useful addition to their platform.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew T. Baker</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3418/demystifying-docker</guid><enclosure url="https://www.youtube.com/watch?v=GVVtR_hrdKI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/GVVtR_hrdKI/hqdefault.jpg"></media:thumbnail></item><item><title>Distributed Systems 101</title><link>http://www.pyvideo.org/video/3461/distributed-systems-101</link><description>&lt;p&gt;Description&lt;/p&gt;
A very brief introduction to the theory and practice of distributed systems.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Laurens Van Houtven</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3461/distributed-systems-101</guid><enclosure url="https://www.youtube.com/watch?v=YAFGQurdJ3U" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/YAFGQurdJ3U/hqdefault.jpg"></media:thumbnail></item><item><title>Don't Make Us Say We Told You So: virtualenv for New Pythonistas</title><link>http://www.pyvideo.org/video/3460/dont-make-us-say-we-told-you-so-virtualenv-for</link><description>&lt;p&gt;Description&lt;/p&gt;
Even though it’s possible to program without using virtual environments, you can shoot yourself in the foot without them. This talk will start with an illustration of how not using virtual environments can mess you up as a programmer, and will walk you through a simple way to get started with good habits using virtualenv.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Makai,Renee Chu</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3460/dont-make-us-say-we-told-you-so-virtualenv-for</guid><enclosure url="https://www.youtube.com/watch?v=Xdv7vwIIThY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Xdv7vwIIThY/hqdefault.jpg"></media:thumbnail></item><item><title>Experimental pure mathematics using Sage</title><link>http://www.pyvideo.org/video/3391/experimental-pure-mathematics-using-sage</link><description>&lt;p&gt;Description&lt;/p&gt;
Pure mathematics is not always big formulas written on endless notebooks, it can also be hidden behind python code. In combinatorics, we study classical computer science objects like trees or graphs with a mathematical perspective. This talk aims to show how computer exploration and experimentation can be used to discover and prove new mathematical results.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Viviane Pons</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3391/experimental-pure-mathematics-using-sage</guid><enclosure url="https://www.youtube.com/watch?v=3LZiZKgVjaU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/3LZiZKgVjaU/hqdefault.jpg"></media:thumbnail></item><item><title>Exploring Minecraft and Python: Learning to Code Through Play</title><link>http://www.pyvideo.org/video/3458/exploring-minecraft-and-python-learning-to-code</link><description>&lt;p&gt;Description&lt;/p&gt;
Interest and activity in childhood computing education continues to grow. Meanwhile, Minecraft has become a massive cultural phenomenon as a fun, motivating platform that encourages exploration and play. This talk demonstrates how Python can be used to teach programming while exploring the world of Minecraft. We will cover how to set up learning environments, curricula, and case studies.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kurt Grandis</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3458/exploring-minecraft-and-python-learning-to-code</guid><enclosure url="https://www.youtube.com/watch?v=WsPQDuHt__w" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/WsPQDuHt__w/hqdefault.jpg"></media:thumbnail></item><item><title>Facts and Myths about Python names and values</title><link>http://www.pyvideo.org/video/3466/facts-and-myths-about-python-names-and-values</link><description>&lt;p&gt;Description&lt;/p&gt;
The behavior of names and values in Python can be confusing. Like many parts of Python, it has an underlying simplicity that can be hard to discern, especially if you are used to other programming languages. Here I'll explain how it all works, and present some facts and myths along the way.  Call-by-reference? Call-by-value? The answer will be clear!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3466/facts-and-myths-about-python-names-and-values</guid><enclosure url="https://www.youtube.com/watch?v=_AEJHKGk9ns" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/_AEJHKGk9ns/hqdefault.jpg"></media:thumbnail></item><item><title>Finding Your Groove: Contributing to CPython and Beyond</title><link>http://www.pyvideo.org/video/3502/finding-your-groove-contributing-to-cpython-and</link><description>&lt;p&gt;Description&lt;/p&gt;
Do you hear a jumble of jargony noise when reading Python mailing lists? Do you silently edit your dotfiles and playlists to avoid asking questions on IRC? Come see how Jazz can help you understand and contribute to Python. While both seem vast and complex, they build on simple concepts. By mixing art, knowledge, and improv, you can find your CPython contribution groove and enjoy cool cats' music.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carol Willing</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3502/finding-your-groove-contributing-to-cpython-and</guid><enclosure url="https://www.youtube.com/watch?v=szeo1XgmuEk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/szeo1XgmuEk/hqdefault.jpg"></media:thumbnail></item><item><title>Fire your supervisord running Python apps on CoreOS</title><link>http://www.pyvideo.org/video/3487/fire-your-supervisord-running-python-apps-on-core</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Callahan</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3487/fire-your-supervisord-running-python-apps-on-core</guid><enclosure url="https://www.youtube.com/watch?v=jCor69OeR0g" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/jCor69OeR0g/hqdefault.jpg"></media:thumbnail></item><item><title>Flask Workshop</title><link>http://www.pyvideo.org/video/3410/flask-workshop</link><description>&lt;p&gt;Description&lt;/p&gt;
Flask is a web framework for Python based on Werkzeug, Jinja 2 and good intentions. It is considered a micro-framework, but don't get the ""micro"" part fool you; Flask can do everything others can do, many times in a simpler, leaner way. In this tutorial session we will build a web application together. Bring your laptop and your questions!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Grinberg</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3410/flask-workshop</guid><enclosure url="https://www.youtube.com/watch?v=DIcpEg77gdE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/DIcpEg77gdE/hqdefault.jpg"></media:thumbnail></item><item><title>Good Test, Bad Test</title><link>http://www.pyvideo.org/video/3448/good-test-bad-test</link><description>&lt;p&gt;Description&lt;/p&gt;
In a highly dynamic language like Python, testing is even more critical than in compiled or more static languages. Like any other code we produce, tests can be either good or bad. This talk explores three fallacies of testing, and the mistakes and bad habits these fallacies encourage; and shows how to write good tests which help assure proper behavior without impeding development progress.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Crosta</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3448/good-test-bad-test</guid><enclosure url="https://www.youtube.com/watch?v=RfR_QRoNZxo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/RfR_QRoNZxo/hqdefault.jpg"></media:thumbnail></item><item><title>Grids, Streets and Pipelines: Building a linguistic street map with scikit-learn</title><link>http://www.pyvideo.org/video/3433/grids-streets-and-pipelines-building-a-linguist</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you built a classifier in scikit-learn with out-of-the-box features, been disappointed with the results, and wanted to know where to go next? This talk shows how to add your own feature Pipelines and how to tune hyperparameters using GridSearchCV. We'll apply this to the problem of classifying streetnames in Singapore by linguistic origin, and turn the results into a colour-coded street map.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michelle Fullwood</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3433/grids-streets-and-pipelines-building-a-linguist</guid><enclosure url="https://www.youtube.com/watch?v=MIFOTFdtK2k" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/MIFOTFdtK2k/hqdefault.jpg"></media:thumbnail></item><item><title>Hadoop with Python</title><link>http://www.pyvideo.org/video/3470/hadoop-with-python</link><description>&lt;p&gt;Description&lt;/p&gt;
In this tutorial, students will learn how to use Python with Apache Hadoop to store, process, and analyze incredibly large data sets. Hadoop has become the standard in distributed data processing, but has mostly required Java in the past. Today, there are a numerous open source projects that support Hadoop in Python and this tutorial will show students how to use them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Donald Miner</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3470/hadoop-with-python</guid><enclosure url="https://www.youtube.com/watch?v=b8HLYUp_fA8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/b8HLYUp_fA8/hqdefault.jpg"></media:thumbnail></item><item><title>Hands-on with Pydata: how to build a minimal recommendation engine.</title><link>http://www.pyvideo.org/video/3416/hands-on-with-pydata-how-to-build-a-minimal-reco</link><description>&lt;p&gt;Description&lt;/p&gt;
In this tutorial we'll set ourselves the goal of building a minimal recommendation engine, and in the process learn about Python's excellent Pydata and related projects and tools: NumPy, pandas, and the IPython Notebook.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christian Fricke,Diego Maniloff,Zach Howard</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3416/hands-on-with-pydata-how-to-build-a-minimal-reco</guid><enclosure url="https://www.youtube.com/watch?v=F6gWjOc1FUs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/F6gWjOc1FUs/hqdefault.jpg"></media:thumbnail></item><item><title>How our engineering environments are killing diversity (and how we can fix it).</title><link>http://www.pyvideo.org/video/3491/how-our-engineering-environments-are-killing-dive</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk focuses on how engineering team environments can impact employee behavior, and how environmental factors can prohibit diversity at tech companies. I will talk about some of the key problems that exist in current engineering environments and how they can be fixed.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kate Heddleston</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3491/how-our-engineering-environments-are-killing-dive</guid><enclosure url="https://www.youtube.com/watch?v=kNke_4WOWAU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/kNke_4WOWAU/hqdefault.jpg"></media:thumbnail></item><item><title>How to Be More Effective with Functions</title><link>http://www.pyvideo.org/video/3457/how-to-be-more-effective-with-functions</link><description>&lt;p&gt;Description&lt;/p&gt;
Functions improve readability, encourage reuse, and facilitate refactoring. Python has many unique features that make functions significantly more powerful. This talk will show you the best ways to use functions in Python: when *args is helpful and when it'll crash your programs; how to use generators for arguments and return values; the value of keyword vs. keyword-only arguments; and more!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Slatkin</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3457/how-to-be-more-effective-with-functions</guid><enclosure url="https://www.youtube.com/watch?v=WjJUPxKB164" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/WjJUPxKB164/hqdefault.jpg"></media:thumbnail></item><item><title>How to build a brain with Python</title><link>http://www.pyvideo.org/video/3403/how-to-build-a-brain-with-python</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor Bekolay</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3403/how-to-build-a-brain-with-python</guid><enclosure url="https://www.youtube.com/watch?v=7hvpoLKJHOw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/7hvpoLKJHOw/hqdefault.jpg"></media:thumbnail></item><item><title>How to interpret your own genome using (mostly) Python.</title><link>http://www.pyvideo.org/video/3489/how-to-interpret-your-own-genome-using-mostly-p</link><description>&lt;p&gt;Description&lt;/p&gt;
We’ve entered the era of the $1000 human genome, and soon it will be straightforward to get your own genome sequenced by a commercial company.  But what does the data mean? What information can you get out of your genomic sequence? And what are the barriers to deeper analysis?  What kinds of algorithms and databases are used in genomic analysis? All this, and more, will be revealed in this talk.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">C. Titus Brown</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3489/how-to-interpret-your-own-genome-using-mostly-p</guid><enclosure url="https://www.youtube.com/watch?v=jV4YMQHZmMk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/jV4YMQHZmMk/hqdefault.jpg"></media:thumbnail></item><item><title>How to make your code Python 2/3 compatible</title><link>http://www.pyvideo.org/video/3427/how-to-make-your-code-python-23-compatible</link><description>&lt;p&gt;Description&lt;/p&gt;
You know Python 3 is an improvement over Python 2 and you want to use it. Unfortunately you have legacy Python 2 source code that needs to stay compatible. But don't fret! This talk will show you that you can make your code be Python 2/3 source-compatible using various tools to pick up the nitty-gritty work and help modernize your Python code to newer Python 2 practices.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brett Cannon</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3427/how-to-make-your-code-python-23-compatible</guid><enclosure url="https://www.youtube.com/watch?v=KPzDX5TX5HE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/KPzDX5TX5HE/hqdefault.jpg"></media:thumbnail></item><item><title>How to Write Reusable Code</title><link>http://www.pyvideo.org/video/3499/how-to-write-reusable-code</link><description>&lt;p&gt;Description&lt;/p&gt;
Learning to write high-quality, reusable code takes years of dedicated work. Or you can take a shortcut: attend this talk and learn some of the tricks I've figured out over a couple of decades of programming.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Ward</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3499/how-to-write-reusable-code</guid><enclosure url="https://www.youtube.com/watch?v=r9cnHO15YgU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/r9cnHO15YgU/hqdefault.jpg"></media:thumbnail></item><item><title>Hyperactive: HTTP/2 and Python</title><link>http://www.pyvideo.org/video/3409/hyperactive-http2-and-python</link><description>&lt;p&gt;Description&lt;/p&gt;
The internet has spoken, HTTP is to get its first serious update in 15 years. In this talk we'll discuss what HTTP/2 is, why it's happening, and how it's going to affect you and everyone you love. We'll briefly talk about how you can get started with HTTP/2, and some interesting projects associated with it, including Hyper, the first Python HTTP/2 library.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cory Benfield</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3409/hyperactive-http2-and-python</guid><enclosure url="https://www.youtube.com/watch?v=ACXVyvm5eTc" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/ACXVyvm5eTc/hqdefault.jpg"></media:thumbnail></item><item><title>I18N: World Domination the Easy Way</title><link>http://www.pyvideo.org/video/3452/i18n-world-domination-the-easy-way</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you heard about internationalization (i18n) and wondered what it meant? Perhaps your project already has i18n of its strings but you have a nagging feeling you could be doing it better. This talk will walk through the basics of i18n’ing a Django project (but the principles apply to any project!), and how to make the process of localization (l10n) go more smoothly.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarina Canelake</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3452/i18n-world-domination-the-easy-way</guid><enclosure url="https://www.youtube.com/watch?v=UOOMFGURr5I" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/UOOMFGURr5I/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to HTTPS: A Comedy of Errors</title><link>http://www.pyvideo.org/video/3422/introduction-to-https-a-comedy-of-errors</link><description>&lt;p&gt;Description&lt;/p&gt;
Given recent increases in hostile attacks on internet services and large scale surveillance operations by certain unnamed government organizations, security in our software is becoming ever more important. We'll give you an idea of how modern crypto works in web services and clients, look at some of the common flaws in these crypto implementations, and discuss recent developments in TLS.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ashwini Oruganti,Christopher Armstrong</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3422/introduction-to-https-a-comedy-of-errors</guid><enclosure url="https://www.youtube.com/watch?v=HqnUKTjxI1E" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/HqnUKTjxI1E/hqdefault.jpg"></media:thumbnail></item><item><title>Investigating Python Wats</title><link>http://www.pyvideo.org/video/3501/investigating-python-wats</link><description>&lt;p&gt;Description&lt;/p&gt;
Many of us have experienced a ""wat"" in Python - some behavior that totally mystifies us. We'll look at three areas where wats arise - identity, mutability, and scope. For each of these three topics, we'll look at some common surprising behaviors, investigate the cause of the behaviors, and cover some practical tips on how to avoid related bugs.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Amy Hanlon</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3501/investigating-python-wats</guid><enclosure url="https://www.youtube.com/watch?v=sH4XF6pKKmk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/sH4XF6pKKmk/hqdefault.jpg"></media:thumbnail></item><item><title>Is Your REST API RESTful?</title><link>http://www.pyvideo.org/video/3497/is-your-rest-api-restful</link><description>&lt;p&gt;Description&lt;/p&gt;
Writing a fully complaint REST API is hard, so hard it is too common for APIs to violate one or more of the REST architectural principles. In this talk I will describe the six REST principles, and I will tell you what happens if you don't follow them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miguel Grinberg</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3497/is-your-rest-api-restful</guid><enclosure url="https://www.youtube.com/watch?v=pZYRC8IbCwk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/pZYRC8IbCwk/hqdefault.jpg"></media:thumbnail></item><item><title>Learning from other's mistakes: Data-driven analysis of Python code</title><link>http://www.pyvideo.org/video/3500/learning-from-others-mistakes-data-driven-analy</link><description>&lt;p&gt;Description&lt;/p&gt;
Static code analysis is an useful tool that can help to detect bugs early in the software development life cycle. I will explain the basics of static analysis and show the challenges we face when analyzing Python code. I will introduce a data-driven approach to code analysis that makes use of public code and example-based learning and show how it can be applied to analyzing Python code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andreas Dewes</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3500/learning-from-others-mistakes-data-driven-analy</guid><enclosure url="https://www.youtube.com/watch?v=rN0kNQLDYCI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/rN0kNQLDYCI/hqdefault.jpg"></media:thumbnail></item><item><title>Lighting Talks - April 10th</title><link>http://www.pyvideo.org/video/3514/lighting-talks-april-10th</link><description></description><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3514/lighting-talks-april-10th</guid><enclosure url="https://www.youtube.com/watch?v=yws4n-0-Yj8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/yws4n-0-Yj8/hqdefault.jpg"></media:thumbnail></item><item><title>Lightning Talks - April 11th 8h30</title><link>http://www.pyvideo.org/video/3472/lightning-talks-april-11th-8h30</link><description></description><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3472/lightning-talks-april-11th-8h30</guid><enclosure url="https://www.youtube.com/watch?v=byClBydNI1A" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/byClBydNI1A/hqdefault.jpg"></media:thumbnail></item><item><title>Losing your Loops Fast Numerical Computing with NumPy</title><link>http://www.pyvideo.org/video/3412/losing-your-loops-fast-numerical-computing-with-n</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake VanderPlas</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3412/losing-your-loops-fast-numerical-computing-with-n</guid><enclosure url="https://www.youtube.com/watch?v=EEUXKG97YRw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/EEUXKG97YRw/hqdefault.jpg"></media:thumbnail></item><item><title>Machine Learning 101</title><link>http://www.pyvideo.org/video/3498/machine-learning-101</link><description>&lt;p&gt;Description&lt;/p&gt;
Machine learning is a crucial part of modern software development. Libraries like pandas, scikit-learn, gensim, and Theano help developers build projects that were previously impossible, and these applications empower our users and can make fundamental improvements in daily life. This talk will show you the why, what, and how of machine learning in Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyle Kastner</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3498/machine-learning-101</guid><enclosure url="https://www.youtube.com/watch?v=r-1XJBHot58" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/r-1XJBHot58/hqdefault.jpg"></media:thumbnail></item><item><title>Make your own Smart Air Conditioner</title><link>http://www.pyvideo.org/video/3434/make-your-own-smart-air-conditioner</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miriam Lauter</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3434/make-your-own-smart-air-conditioner</guid><enclosure url="https://www.youtube.com/watch?v=MILdMBgxdq8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/MILdMBgxdq8/hqdefault.jpg"></media:thumbnail></item><item><title>My Python's a little Rust-y</title><link>http://www.pyvideo.org/video/3390/my-pythons-a-little-rust-y</link><description>&lt;p&gt;Description&lt;/p&gt;
Rust is a new systems programming language from Mozilla that combines strong compile-time correctness guarantees with fast performance... and it plays nice with ctypes! Come learn how you can call Rust functions from Python code and finally say goodbye to hacking C!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan Callahan</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3390/my-pythons-a-little-rust-y</guid><enclosure url="https://www.youtube.com/watch?v=3CwJ0MH-4MA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/3CwJ0MH-4MA/hqdefault.jpg"></media:thumbnail></item><item><title>Neural Nets for Newbies</title><link>http://www.pyvideo.org/video/3477/neural-nets-for-newbies</link><description>&lt;p&gt;Description&lt;/p&gt;
Neural networks have regained popularity in the last decade, but they get dismissed as being too complicated to understand and implement. This talk breaks down the neural net structure as simply as possible, so you have a framework on which to grow your knowledge in the space. I will put neural nets in the context of real-world applications and share Python packages and code where you can get started building your own. Coming out this talk you won't know everything about neural nets, but you will walk away with a solid foundation and some resources on where to go next to learn more.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Melanie Warrick</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3477/neural-nets-for-newbies</guid><enclosure url="https://www.youtube.com/watch?v=g-BJSl4zV_g" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/g-BJSl4zV_g/hqdefault.jpg"></media:thumbnail></item><item><title>Open Source for Newcomers and the People Who Want to Welcome Them</title><link>http://www.pyvideo.org/video/3405/open-source-for-newcomers-and-the-people-who-want</link><description>&lt;p&gt;Description&lt;/p&gt;
Open source can be fun and rewarding, but it can also be intimidating.  This talk addresses some of the biggest technical and psychological barriers to contributing, from the perspective of both the newcomers who want to overcome them and the maintainers who want to remove them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Shauna Gordon-McKeon</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3405/open-source-for-newcomers-and-the-people-who-want</guid><enclosure url="https://www.youtube.com/watch?v=8P1oxmkvLB4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/8P1oxmkvLB4/hqdefault.jpg"></media:thumbnail></item><item><title>Porting Python to run without an OS</title><link>http://www.pyvideo.org/video/3471/porting-python-to-run-without-an-os</link><description>&lt;p&gt;Description&lt;/p&gt;
We've ported Python to run directly on hardware, without an OS, as a testing and exploration environment for firmware, ACPI, and UEFI. This talk will explore porting Python to a new platform, embedding Python, recreating enough of libc and POSIX to run Python without an OS, and binding to platform-specific services. Includes live demo of bare-metal Python, directly driving hardware.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Triplett</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3471/porting-python-to-run-without-an-os</guid><enclosure url="https://www.youtube.com/watch?v=bYQ_lq5dcvM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/bYQ_lq5dcvM/hqdefault.jpg"></media:thumbnail></item><item><title>PyPy.js: What? How? Why?</title><link>http://www.pyvideo.org/video/3441/pypyjs-what-how-why-0</link><description>&lt;p&gt;Description&lt;/p&gt;
PyPy.js is an experiment in building a fast and compliant in-browser python interpreter, by compiling PyPy into javascript and retargeting its JIT to emit javascript code at runtime. This talk will demonstrate the combination of technologies that make such a thing possible, the results achieved so far, and the challenges that still remain when taking python onto javascript's home turf.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Kelly</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3441/pypyjs-what-how-why-0</guid><enclosure url="https://www.youtube.com/watch?v=PiBfOFqDIAI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/PiBfOFqDIAI/hqdefault.jpg"></media:thumbnail></item><item><title>Python by Immersion</title><link>http://www.pyvideo.org/video/3446/python-by-immersion</link><description>&lt;p&gt;Description&lt;/p&gt;
A very fast introduction to Python for software developers with experience in other languages.  Instead of a traditional top-down presentation of Python's features, syntax, and semantics, students are immersed in the language bottom-up with hundreds of small examples using the interactive interpreter to quickly gain familiarity with most of the core language features.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3446/python-by-immersion</guid><enclosure url="https://www.youtube.com/watch?v=RVNIdoepdzU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/RVNIdoepdzU/hqdefault.jpg"></media:thumbnail></item><item><title>Python Concurrency From the Ground Up: LIVE!</title><link>http://www.pyvideo.org/video/3432/python-concurrency-from-the-ground-up-live</link><description>&lt;p&gt;Description&lt;/p&gt;
There are currently three popular approaches to Python concurrency: threads, event loops, and coroutines. Each is shrouded by various degrees of mystery and peril.  In this talk, all three approaches will be deconstructed and explained in a epic ground-up live coding battle.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3432/python-concurrency-from-the-ground-up-live</guid><enclosure url="https://www.youtube.com/watch?v=MCs5OvhV9S4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/MCs5OvhV9S4/hqdefault.jpg"></media:thumbnail></item><item><title>Robots Robots Ra Ra Ra!!!</title><link>http://www.pyvideo.org/video/3456/robots-robots-ra-ra-ra</link><description>&lt;p&gt;Description&lt;/p&gt;
Lots of people want to learn more about robotics but are unsure where to start. Turns out there is a python robotics framework, and it runs some of the most sophisticated robots in the world! It is also open source, well-documented, and has a great community. In this talk we will look at Robot Operating System ROS.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Scott</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3456/robots-robots-ra-ra-ra</guid><enclosure url="https://www.youtube.com/watch?v=Wf0Uhebn2cM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Wf0Uhebn2cM/hqdefault.jpg"></media:thumbnail></item><item><title>Satellite mapping for everyone </title><link>http://www.pyvideo.org/video/3431/satellite-mapping-for-everyone</link><description>&lt;p&gt;Description&lt;/p&gt;
Concerned about urban sprawl, landscape change or ecosystem recovery? Wildfire, drought or flooding? A vast amount of satellite data, collected since the 1970s, is freely available for your next mapping project. I will demonstrate how Python helps to make sense of odd scientific data and metadata formats and produce beautiful visualization and map products.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Waigl</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3431/satellite-mapping-for-everyone</guid><enclosure url="https://www.youtube.com/watch?v=MCHpt1FvblI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/MCHpt1FvblI/hqdefault.jpg"></media:thumbnail></item><item><title>Super considered super!</title><link>http://www.pyvideo.org/video/3413/super-considered-super</link><description>&lt;p&gt;Description&lt;/p&gt;
Python's super() is well-designed and powerful, but it can be tricky to use if you don't know all the moves.

This talk offers clear, practical advice with real-world use cases on how to use super() effectively and not get tripped-up by common mistakes.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3413/super-considered-super</guid><enclosure url="https://www.youtube.com/watch?v=EiOglTERPEo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/EiOglTERPEo/hqdefault.jpg"></media:thumbnail></item><item><title>Systems programming as a swiss army knife</title><link>http://www.pyvideo.org/video/3399/systems-programming-as-a-swiss-army-knife</link><description>&lt;p&gt;Description&lt;/p&gt;
You might think of the Linux kernel as something that only kernel developers need to know about. Not so! It turns out that understanding some basics about kernels and systems programming makes you a better developer, and you can use this knowledge when debugging your normal everyday Python programs.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Evans</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3399/systems-programming-as-a-swiss-army-knife</guid><enclosure url="https://www.youtube.com/watch?v=5v6o-VsLAew" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5v6o-VsLAew/hqdefault.jpg"></media:thumbnail></item><item><title>Technical Debt</title><link>http://www.pyvideo.org/video/3425/technical-debt</link><description>&lt;p&gt;Description&lt;/p&gt;
Technical debt is the code monster hiding in everyone's closet. If you ignore it, it will terrorize you at night. To banish it and re-gain your productivity, you'll need to face it head on. 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nina Zakharenko</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3425/technical-debt</guid><enclosure url="https://www.youtube.com/watch?v=JKYktDRoRxw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/JKYktDRoRxw/hqdefault.jpg"></media:thumbnail></item><item><title>The REST Ascendancy</title><link>http://www.pyvideo.org/video/3423/the-rest-ascendancy</link><description>&lt;p&gt;Description&lt;/p&gt;
As frontend web frameworks like AngularJS and Backbone.js take over, is Python on the server destined to be demoted to a basic REST interface? If we embrace our new JavaScript overlords, how do we ensure Python is best positioned for this new world of REST on the server? 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Schenck</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3423/the-rest-ascendancy</guid><enclosure url="https://www.youtube.com/watch?v=HxP0lQCCiVo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/HxP0lQCCiVo/hqdefault.jpg"></media:thumbnail></item><item><title>The (Slightly) Less Sorry State of SSL</title><link>http://www.pyvideo.org/video/3393/the-slightly-less-sorry-state-of-ssl</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We show off the security improvements made to the standard library TLS
and networking modules over the last year.</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Peterson</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3393/the-slightly-less-sorry-state-of-ssl</guid><enclosure url="https://www.youtube.com/watch?v=4o-xqqidvKA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/4o-xqqidvKA/hqdefault.jpg"></media:thumbnail></item><item><title>Type python, press enter. What happens?</title><link>http://www.pyvideo.org/video/3459/type-python-press-enter-what-happens</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk discusses how the Python interpreter starts, from the perspective of the operating system (OS). Together, we will see the ins &amp; outs of processes: fork(), exec(), stdin, and stdout.

It focuses on OS concepts and requires no background knowledge, using analogies to Python data structures. (The talk does not discuss Python’s own initialization, such as site.py or global variables.)

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia,Philip James</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3459/type-python-press-enter-what-happens</guid><enclosure url="https://www.youtube.com/watch?v=XVhSjZYwZJo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/XVhSjZYwZJo/hqdefault.jpg"></media:thumbnail></item><item><title>Usability Testing on the Cheap</title><link>http://www.pyvideo.org/video/3516/usability-testing-on-the-cheap</link><description>&lt;p&gt;Description&lt;/p&gt;
While everyone agrees that usability testing should be an important part of your development process, not everyone has enough money laying around to pay for a dedicated team or consultants. In this talk, Katie will review a number of inexpensive options that can help any team deliver a usable product.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3516/usability-testing-on-the-cheap</guid><enclosure url="https://www.youtube.com/watch?v=zZx2l3BTCrg" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/zZx2l3BTCrg/hqdefault.jpg"></media:thumbnail></item><item><title>Using Supervisor For Fun And Profit</title><link>http://www.pyvideo.org/video/3496/using-supervisor-for-fun-and-profit</link><description>&lt;p&gt;Description&lt;/p&gt;
Supervisor is a popular Python application that lets you control and monitor process state on UNIX-like systems.  This talk describes what it is, and how to use it effectively to make your application deployments better.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3496/using-supervisor-for-fun-and-profit</guid><enclosure url="https://www.youtube.com/watch?v=p0iQfT85IvM" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/p0iQfT85IvM/hqdefault.jpg"></media:thumbnail></item><item><title>What can programmers learn from pilots?</title><link>http://www.pyvideo.org/video/3510/what-can-programmers-learn-from-pilots</link><description>&lt;p&gt;Description&lt;/p&gt;
What can Python-based software teams learn from aviation? Why should software always fail hard? What's wrong with too many error logs? And why are ops people already like pilots? Learn all this, and about planes, too.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3510/what-can-programmers-learn-from-pilots</guid><enclosure url="https://www.youtube.com/watch?v=we4G_X91e5w" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/we4G_X91e5w/hqdefault.jpg"></media:thumbnail></item><item><title>What Python can learn from Erlang</title><link>http://www.pyvideo.org/video/3414/what-python-can-learn-from-erlang</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benoit Chesneau</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3414/what-python-can-learn-from-erlang</guid><enclosure url="https://www.youtube.com/watch?v=EmICpC_QmhI" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/EmICpC_QmhI/hqdefault.jpg"></media:thumbnail></item><item><title>"Words, words, words": Reading Shakespeare with Python</title><link>http://www.pyvideo.org/video/3415/words-words-words-reading-shakespeare-with-p</link><description>&lt;p&gt;Description&lt;/p&gt;
This talk will give an introduction to text analysis with Python by asking some questions about Shakespeare and discussing the quantitative methods that will go in to answering them. While we’ll use Shakespeare to illustrate our methodologies, we’ll also discuss how they can be ported over into more 21st century texts, like tweets or New York Times articles.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Palay</dc:creator><pubDate>Sat, 11 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3415/words-words-words-reading-shakespeare-with-p</guid><enclosure url="https://www.youtube.com/watch?v=EoWG0lavg9U" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/EoWG0lavg9U/hqdefault.jpg"></media:thumbnail></item><item><title>Ansible 101</title><link>http://www.pyvideo.org/video/3384/ansible-101</link><description>&lt;p&gt;Description&lt;/p&gt;
Interested in Ansible, or in server orchestration and configuration generally? This tutorial will teach the basics -- and a few of the not-so-basics -- of orchestrating machines with Ansible.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3384/ansible-101</guid><enclosure url="https://www.youtube.com/watch?v=-i1pZ6vvMX8" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/-i1pZ6vvMX8/hqdefault.jpg"></media:thumbnail></item><item><title>Bayesian statistics made simple</title><link>http://www.pyvideo.org/video/3397/bayesian-statistics-made-simple-1</link><description>&lt;p&gt;Description&lt;/p&gt;
An introduction to Bayesian statistics using Python.  Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally.  People who know Python can get started quickly and use Bayesian analysis to solve real problems.  This tutorial is based on material and case studies from Think Bayes (O’Reilly Media).


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3397/bayesian-statistics-made-simple-1</guid><enclosure url="https://www.youtube.com/watch?v=5W715nfJNJw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5W715nfJNJw/hqdefault.jpg"></media:thumbnail></item><item><title>Delving into the Django Admin</title><link>http://www.pyvideo.org/video/3398/delving-into-the-django-admin</link><description>&lt;p&gt;Description&lt;/p&gt;
The admin interface is widely considered a ""killer feature"" of Django. At its most basic, you can just register all your models and be on your way, but there's so much more available within Django's admin. This tutorial takes you step by step through the creation and progressive improvement of an admin interface for a fictional library (all code is publicly available).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacinda Shelly</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3398/delving-into-the-django-admin</guid><enclosure url="https://www.youtube.com/watch?v=5ajZMpTcUZU" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5ajZMpTcUZU/hqdefault.jpg"></media:thumbnail></item><item><title>Descriptors and Metaclasses</title><link>http://www.pyvideo.org/video/3508/descriptors-and-metaclasses</link><description>&lt;p&gt;Description&lt;/p&gt;
Descriptors and metaclasses are advanced Python features. While it is
possible to write Python programs without active knowledge of them,
knowing more about them facilitates a deeper understanding of
the language. With examples, you will learn how they work and how to
write your own descriptors and metaclasses. Furthermore, you will understand
when to use and when better not to use them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3508/descriptors-and-metaclasses</guid><enclosure url="https://www.youtube.com/watch?v=v2WTVCyTYMw" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/v2WTVCyTYMw/hqdefault.jpg"></media:thumbnail></item><item><title>Django in Depth</title><link>http://www.pyvideo.org/video/3505/django-in-depth-0</link><description>&lt;p&gt;Description&lt;/p&gt;
This is a tutorial that goes beyond most tutorials; it's meant for developers who already know a bit about Django and want to really understand the inner guts of the framework. This tutorial will *not* involve writing code or apps; rather, it'll be a deep tour of the workings and APIs of Django itself, across all the bundled components and at all levels of the stack.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3505/django-in-depth-0</guid><enclosure url="https://www.youtube.com/watch?v=tkwZ1jG3XgA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/tkwZ1jG3XgA/hqdefault.jpg"></media:thumbnail></item><item><title>Getting comfortable with web security: A hands-on session</title><link>http://www.pyvideo.org/video/3475/getting-comfortable-with-web-security-a-hands-on</link><description>&lt;p&gt;Description&lt;/p&gt;
Web application security can be an intimidating discipline, yet it can be of supreme importance for the people who use the things we build.

In this tutorial, you'll learn about essential topics in web security, and you will gain hands-on practice identifying and leveraging vulnerabilities in a Python-based web app. For each issue, we will cover how your code can stay on the side of safety.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia,Jacky Chang,Nicole Zuckerman</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3475/getting-comfortable-with-web-security-a-hands-on</guid><enclosure url="https://www.youtube.com/watch?v=f9XVNIeRxUo" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/f9XVNIeRxUo/hqdefault.jpg"></media:thumbnail></item><item><title>Hands-on Data Analysis with Python</title><link>http://www.pyvideo.org/video/3428/hands-on-data-analysis-with-python</link><description>&lt;p&gt;Description&lt;/p&gt;
Python is quickly becoming the go-to language for data analysis. However, it can be difficult to figure out which tools are good to use. In this workshop, we’ll work through in-depth examples of tools for data wrangling, machine learning, and data visualization. I’ll show you how to work through a data analysis workflow, and how to deal with different kinds of data.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sarah Guido</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3428/hands-on-data-analysis-with-python</guid><enclosure url="https://www.youtube.com/watch?v=L4Hbv4ugUWk" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/L4Hbv4ugUWk/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote - Catherine Bracy</title><link>http://www.pyvideo.org/video/3430/keynote-catherine-bracy</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Bracy</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3430/keynote-catherine-bracy</guid><enclosure url="https://www.youtube.com/watch?v=LOZk5ttyC9Y" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/LOZk5ttyC9Y/hqdefault.jpg"></media:thumbnail></item><item><title>Modules and Packages: Live and Let Die!</title><link>http://www.pyvideo.org/video/3387/modules-and-packages-live-and-let-die</link><description>&lt;p&gt;Description&lt;/p&gt;
All Python programmers use the import statement, but do you really know how it works and what it allows?  This tutorial aims to take a deep dive into every diabolical issue related to modules, packages, and imports.   When we're done, you'll finally be ready to unleash your million line micro framework on the world! 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3387/modules-and-packages-live-and-let-die</guid><enclosure url="https://www.youtube.com/watch?v=0oTh1CXRaQ0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/0oTh1CXRaQ0/hqdefault.jpg"></media:thumbnail></item><item><title>Opening Statements - Julia Evans</title><link>http://www.pyvideo.org/video/3436/opening-statements-julia-evans</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Julia Evans</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3436/opening-statements-julia-evans</guid><enclosure url="https://www.youtube.com/watch?v=N_H6JpkgM8s" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/N_H6JpkgM8s/hqdefault.jpg"></media:thumbnail></item><item><title>Python Epiphanies</title><link>http://www.pyvideo.org/video/3453/python-epiphanies-2</link><description>&lt;p&gt;Description&lt;/p&gt;
This tutorial is for developers who've been using Python for a while and would consider themselves at an intermediate level, but are looking for a deeper understanding of the language.  It focuses on how Python differs from other languages in subtle but important ways that are often confusing, and it demystifies a number of language features that are sometimes misunderstood.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3453/python-epiphanies-2</guid><enclosure url="https://www.youtube.com/watch?v=Ug0iDjbMPVg" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/Ug0iDjbMPVg/hqdefault.jpg"></media:thumbnail></item><item><title>Statistical inference with computational methods</title><link>http://www.pyvideo.org/video/3396/statistical-inference-with-computational-methods</link><description>&lt;p&gt;Description&lt;/p&gt;
Statistical inference is a fundamental tool in science and engineering, but it is often poorly understood.  This tutorial uses computational methods, including Monte Carlo simulation and resampling, to explore estimation, hypothesis testing and statistical modeling.  Attendees will develop understanding of statistical concepts and learn to use real data to answer relevant questions.


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3396/statistical-inference-with-computational-methods</guid><enclosure url="https://www.youtube.com/watch?v=5Vjrqnk7Igs" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/5Vjrqnk7Igs/hqdefault.jpg"></media:thumbnail></item><item><title>Twitter Network Analysis with NetworkX</title><link>http://www.pyvideo.org/video/3400/twitter-network-analysis-with-networkx</link><description>&lt;p&gt;Description&lt;/p&gt;
Twitter's network is fascinating because of its connectivity: there are hashtags, followers, retweets, and replies. Using the network analysis tool NetworkX, we'll look at how to make sense of these channels. We'll cover the basics of network theory, including types of networks and how measure influence, and we'll apply those measures to our investigation of Twitter's network.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Celia La,Sarah Guido</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3400/twitter-network-analysis-with-networkx</guid><enclosure url="https://www.youtube.com/watch?v=6Lauxn9oTt4" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/6Lauxn9oTt4/hqdefault.jpg"></media:thumbnail></item><item><title>Winning Machine Learning Competitions With Scikit-Learn</title><link>http://www.pyvideo.org/video/3478/winning-machine-learning-competitions-with-scikit</link><description>&lt;p&gt;Description&lt;/p&gt;
This tutorial will offer an introduction machine learning and how to apply it to a Kaggle competition. We will cover methodologies that have worked well across a diverse set of problems, and then work on a current Kaggle competition together using iPython notebook and scikit-learn. We will cover concepts including feature extraction, feature selection, model evaluation, and data visualization.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Hamner</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3478/winning-machine-learning-competitions-with-scikit</guid><enclosure url="https://www.youtube.com/watch?v=gDbaCIE0mrA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/gDbaCIE0mrA/hqdefault.jpg"></media:thumbnail></item><item><title>Docker 101: Introduction to Docker</title><link>http://www.pyvideo.org/video/3463/docker-101-introduction-to-docker</link><description>&lt;p&gt;Description&lt;/p&gt;
Docker was one of last year’s most talked about open source projects - but what is it? And what does it mean for deploying applications? This tutorial will explain what Docker is and where it fits in with other deployment and configuration management tools. Students will then learn the basics of working with Docker containers, how to “dockerize” their Python apps, and some emerging best practices.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew T. Baker</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3463/docker-101-introduction-to-docker</guid><enclosure url="https://www.youtube.com/watch?v=YiZkHUbE6N0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/YiZkHUbE6N0/hqdefault.jpg"></media:thumbnail></item><item><title>IPython &amp; Jupyter in depth: high productivity interactive and parallel python</title><link>http://www.pyvideo.org/video/3385/ipython-jupyter-in-depth-high-productivity-int</link><description>&lt;p&gt;Description&lt;/p&gt;
IPython and Jupyter provide tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer. We will show how to use IPython in different ways, as: an interactive shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyle Kelley,Thomas Kluyver</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3385/ipython-jupyter-in-depth-high-productivity-int</guid><enclosure url="https://www.youtube.com/watch?v=05fA_DXgW-Y" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/05fA_DXgW-Y/hqdefault.jpg"></media:thumbnail></item><item><title>Machine Learning with Scikit-Learn (I)</title><link>http://www.pyvideo.org/video/3429/machine-learning-with-scikit-learn-i</link><description>&lt;p&gt;Description&lt;/p&gt;
This tutorial will offer an introduction to the core concepts of machine learning and the Scikit-Learn package. We will introduce the scikit-learn API, and use it to explore the basic categories of machine learning problems and related topics such as feature selection and model validation, and practice applying these tools to real-world data sets.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jake VanderPlas</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3429/machine-learning-with-scikit-learn-i</guid><enclosure url="https://www.youtube.com/watch?v=L7R4HUQ-eQ0" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/L7R4HUQ-eQ0/hqdefault.jpg"></media:thumbnail></item><item><title>Practical Graph/Network Analysis Made Simple</title><link>http://www.pyvideo.org/video/3468/practical-graphnetwork-analysis-made-simple</link><description>&lt;p&gt;Description&lt;/p&gt;
Have you ever wondered about how those data scientists at Facebook and LinkedIn make friend recommendations? Or how epidemiologists track down patient zero in an outbreak? If so, then this tutorial is for you. Here, we will explore a bike sharing data set as a way to understand the kinds of problems that can be solved using graph analytics.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Ma</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3468/practical-graphnetwork-analysis-made-simple</guid><enclosure url="https://www.youtube.com/watch?v=_k4MOh7J7YY" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/_k4MOh7J7YY/hqdefault.jpg"></media:thumbnail></item><item><title>Shiny, Let's Be Bad Guys: Exploiting and Mitigating the Top 10 Web App Vulnerabilities</title><link>http://www.pyvideo.org/video/3512/shiny-lets-be-bad-guys-exploiting-and-mitigati-3</link><description>&lt;p&gt;Description&lt;/p&gt;
The Internet is a dangerous place, filled with evildoers out to attack your code for fun or profit, so it's not enough to just ship your awesome new web app--you have to take the security of your application, your users, and your data seriously. You'll get into the mindset of the bad guys as we discuss, exploit, and mitigate the most common web app security flaws in a controlled environment.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Stanek,Mike Pirnat</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3512/shiny-lets-be-bad-guys-exploiting-and-mitigati-3</guid><enclosure url="https://www.youtube.com/watch?v=wzQMqPzGcLE" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/wzQMqPzGcLE/hqdefault.jpg"></media:thumbnail></item><item><title>TDD with Django, from scratch: a beginner's intro to testing and web development</title><link>http://www.pyvideo.org/video/3509/tdd-with-django-from-scratch-a-beginners-intro</link><description>&lt;p&gt;Description&lt;/p&gt;
A beginner's introduction to testing and web development with Django. We'll build a simple web app, from scratch, but with full TDD, including functional testing with Selenium and unit testing Django's views, templates, and models. Some familiarity with Python is desirable, but no prior knowledge of Django or testing is assumed.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Harry Percival</dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 -0500</pubDate><guid>http://www.pyvideo.org/video/3509/tdd-with-django-from-scratch-a-beginners-intro</guid><enclosure url="https://www.youtube.com/watch?v=vQjmz9wCjLA" length="None" type="video/flv"></enclosure><media:thumbnail url="https://i.ytimg.com/vi/vQjmz9wCjLA/hqdefault.jpg"></media:thumbnail></item></channel></rss>