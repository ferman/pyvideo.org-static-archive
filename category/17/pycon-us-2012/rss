<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyCon US 2012</title><link>http://www.pyvideo.org/category/17/pycon-us-2012/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/17/pycon-us-2012/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Sun, 11 Mar 2012 00:00:00 -0600</lastBuildDate><ttl>500</ttl><item><title>10. FOSS@RIT: Python-Powered Student Engagement</title><link>http://www.pyvideo.org/video/701/10-fossrit-python-powered-student-engagement</link><description>&lt;p&gt;Abstract&lt;/p&gt;
FOSS@RIT is an applied research lab at Rochester Institute of Technology
focused on promoting free/open source software and open web technologies.
Students and staff will discuss the evolution of the lab in general, and the
RIT Fedora Remixerator - a web application running on Django that allows users
to create an RIT-themed Fedora LiveCD.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eitan Romanoff,Remy DeCausemaker</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/701/10-fossrit-python-powered-student-engagement</guid><enclosure url="https://www.youtube.com/watch?v=O8WXXtDUUOE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/O8WXXtDUUOE/hqdefault.jpg"></media:thumbnail></item><item><title>11. A Startup Junkie's Journey to Python via Java, C#, Ruby and Scala</title><link>http://www.pyvideo.org/video/702/11-a-startup-junkies-journey-to-python-via-java</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Between choosing technologies, bootstrapping your company and product and
hiring the critical early team, startup CTO's have their hands full. I've done
it many times, and over the years I have honed my view of how to build
something new from scratch. We'll focus on selecting tools and technologies,
and on my journey to Python as the core of my newest company.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andy Parsons</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/702/11-a-startup-junkies-journey-to-python-via-java</guid><enclosure url="https://www.youtube.com/watch?v=ktLyuWoRHH8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ktLyuWoRHH8/hqdefault.jpg"></media:thumbnail></item><item><title>12. Accessibility and You</title><link>http://www.pyvideo.org/video/706/12-accessibility-and-you</link><description>&lt;p&gt;Abstract&lt;/p&gt;
An introduction into the world of 508 compliance.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/706/12-accessibility-and-you</guid><enclosure url="https://www.youtube.com/watch?v=tKTW8Jd0BlQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/tKTW8Jd0BlQ/hqdefault.jpg"></media:thumbnail></item><item><title>14. preshrunk-cotton: Windows Help Files for Lazy People</title><link>http://www.pyvideo.org/video/753/14-preshrunk-cotton-windows-help-files-for-lazy</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Generating a Compiled HTML Help (CHM) file is often necessary when
distributing applications on Microsoft Windows platforms. However, many
developers may dislike authoring HTML and/or cannot use Microsoft’s help
tools. preshrunk-cotton streamlines the creation of CHM files by allowing the
author to quickly write documentation in Textile markup and build the help
file on almost any platform.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Armstrong</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/753/14-preshrunk-cotton-windows-help-files-for-lazy</guid><enclosure url="https://www.youtube.com/watch?v=A3Qe5wUbXzM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/A3Qe5wUbXzM/hqdefault.jpg"></media:thumbnail></item><item><title>18. Bump Pumps Up with Diesel</title><link>http://www.pyvideo.org/video/815/18-bump-pumps-up-with-diesel</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Bump Technologies’ Jamie Turner explains Diesel, an open-source evented
networking framework, and how it's used at Bump, an Android and iOS app with
over 70 million downloads.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jamie Turner</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/815/18-bump-pumps-up-with-diesel</guid><enclosure url="https://www.youtube.com/watch?v=ZwBiQEHS4T8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ZwBiQEHS4T8/hqdefault.jpg"></media:thumbnail></item><item><title>19. Millions of Genes with Python and Jython</title><link>http://www.pyvideo.org/video/754/19-millions-of-genes-with-python-and-jython</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Analysis and Annotation Engineering group at the Broad Institute uses
cpython and jython as fundamental technologies to help sequence, analyze, and
publish hundreds of bacterial and viral genomes every year. This poster
outlines how we use python to allow our small team to accomplish big things.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clint Howarth</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/754/19-millions-of-genes-with-python-and-jython</guid><enclosure url="https://www.youtube.com/watch?v=Rmg4-Ae1P1o" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Rmg4-Ae1P1o/hqdefault.jpg"></media:thumbnail></item><item><title>1. PSF Sprints - Supporting the community one sprint at at time</title><link>http://www.pyvideo.org/video/691/1-psf-sprints-supporting-the-community-one-spr</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Formed in 2010, the PSF Sprints committee set out to support local communities
getting together to make great software by funding their sprints with up to
$300 USD. No matter the project, the PSF wants to help you contribute to the
Python ecosystem. Come see what we're doing, how we're doing it, who we've
supported, and see how you can take part as well.


&lt;p&gt;Description&lt;/p&gt;
The PSF Sprint committee offers up to $300 USD to groups that organize sprint
efforts on open source projects in the Python world. From working on Python
itself, to the vast array of projects in the community, we take great interest
in keeping you interested. We're also interested in buying you dinner,
providing a place to work at, and buying t-shirts or other goodies for sprint
attendees.

  * Committee Goals 
    * Fund existing sprint groups 
    * Get new groups interested in sprinting 
    * Generate interest in contribution to Python projects 
    * Advertise sprint events, including those at conferences 
    * Have fun, learn, and contribute with other community members 
  * How We Operate 
    * Receive applications, vote, advertise, reimburse after event 
  * Past Sponsorships 
    * packaging, Genshi, matplotlib 
  * Upcoming Sponsorships 
    * PyCon (will update closer to conference) 
  * How To Receive Funding 
    * How to apply, how to be reimbursed 

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Curtin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/691/1-psf-sprints-supporting-the-community-one-spr</guid><enclosure url="https://www.youtube.com/watch?v=AeQxx4zXd5Q" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/AeQxx4zXd5Q/hqdefault.jpg"></media:thumbnail></item><item><title>22. Quantitative Finance Research with Python: Statistical arbitrage.</title><link>http://www.pyvideo.org/video/816/22-quantitative-finance-research-with-python-st</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Recently, many projects have been developed to make Python useful to do
quantitative finance research. We proposed us not only to show you the
integration of these tools to perform time series analysis and modeling, but
also to show you how we can search for cointegrated pairs of asset and set up
a statistical arbitrage strategy - pairs trading - to get potential profit
from financial market.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damián Avila</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/816/22-quantitative-finance-research-with-python-st</guid><enclosure url="https://www.youtube.com/watch?v=MIAKOMzRl1I" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/MIAKOMzRl1I/hqdefault.jpg"></media:thumbnail></item><item><title>23. Round the world with a million objects</title><link>http://www.pyvideo.org/video/817/23-round-the-world-with-a-million-objects</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has provided a suite of tools required for our Lagrangian Particle
Modeling Framework that is used for simulation of atmospheric transport. The
Python language is used for generating input files for our FORTRAN codebase,
using f2py to control several aspects of running the model and reading output,
and dynamically generating content with matplotlib for web-display using
Plone.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John F Burkhart</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/817/23-round-the-world-with-a-million-objects</guid><enclosure url="https://www.youtube.com/watch?v=q_i3CHNITQ4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/q_i3CHNITQ4/hqdefault.jpg"></media:thumbnail></item><item><title>24. Indico - A Scientific Collaboration Platform</title><link>http://www.pyvideo.org/video/964/24-indico-a-scientific-collaboration-platform</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Indico is an open source CMS developed at CERN and currently used in more than
90 scientific institutions world-wide. Indico provides a multitude of features
to conference/meeting organizers, merging the capabilities of a powerful CMS
with a calendaring layer, thus allowing users to keep track of past and future
meetings, and to quickly access all the resources concerning a particular
event.


&lt;p&gt;Description&lt;/p&gt;
Indico is an open source content management system developed at the European
Organization for Nuclear Research (CERN) and currently used in more than 90
scientific institutions world-wide. Indico provides a multitude of features to
conference/meeting organizers, merging the capabilities of a powerful CMS with
a calendaring layer, thus allowing users to keep track of past and future
meetings, and to quickly access all the resources concerning a particular
event. Other very useful features include:

  * Conference registration &amp; e-payment integration; 
  * Paper/abstract reviewing; 
  * Integration with chat (XMPP) systems; 
  * Integration with videoconferencing/webcasting applications; 
  * Room booking module; 
  * Drag&amp;drop; timetable editing; 
  * Event reminders &amp; alarms (scheduler); 
  * Extensible via plugin subsystem; 

At CERN alone, Indico serves a community of around 10.000 users, with ~15.000
different visitors per day (~1 M hits). It hosts more than 150.000 events,
made of around 700.000 individual contributions/talks and ~900.000 files. It
has become part of "CERN speech" - "look it up on Indico" is almost as obvious
as "Google it" around here.

But Indico is as well an indispensable tool in the realm of High Energy
Physics, going far beyond the borders of this organization. Institutions such
as Fermilab, MIT and IHEP (China) are using it for their own
meetings/conferences.

The system is fully written in Python and JavaScript, using ZODB as its
database back-end. It is a perfect example of how Python-related technologies
can be used to build powerful web applications that empower scientific
research and collaboration.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pedro Ferreira</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/964/24-indico-a-scientific-collaboration-platform</guid><enclosure url="http://www.youtube.com/watch?v=3CSxYKbxfPU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://i4.ytimg.com/vi/3CSxYKbxfPU/hqdefault.jpg"></media:thumbnail></item><item><title>25. An Overview of the Python African Computational Science and Engineering Tour Project </title><link>http://www.pyvideo.org/video/738/25-an-overview-of-the-python-african-computation</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Godfrey Ejiroghene Akpojotor, Louis Ehwerhemuepha Pervading of computer
activities into the teaching/learning process and research make them
constitute a third pillar in science and engineering (S &amp; E) in addition to
theory and experiment. Python African Computational S &amp; E Tour is to ease the
learners into programming with Python and to use it for modeling, simulation
and visualization to aid teaching/learning process and research in Africa.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Godfrey Ejroghene Akpojotor,Louis Ehwerhemuepha</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/738/25-an-overview-of-the-python-african-computation</guid><enclosure url="https://www.youtube.com/watch?v=4bWC_VXffq4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/4bWC_VXffq4/hqdefault.jpg"></media:thumbnail></item><item><title>26. Data analysis and visualization in atmospheric sciences</title><link>http://www.pyvideo.org/video/729/26-data-analysis-and-visualization-in-atmospheri</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster demonstrates the Python based data analysis and visualization in
atmospheric sciences with particular focus on modeled and observational
aspects of marine clouds.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gökhan Sever</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/729/26-data-analysis-and-visualization-in-atmospheri</guid><enclosure url="https://www.youtube.com/watch?v=v7HH_CNIdXc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/3LcF2XBqbog/hqdefault.jpg"></media:thumbnail></item><item><title>27. Reading and writing spatial data for the non-spatial programmer</title><link>http://www.pyvideo.org/video/730/27-reading-and-writing-spatial-data-for-the-non-</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Location has become mainstream in society and computing. Developers are being
tasked with working with spatial data of varying formats. Lucky for Python
developers, there are many packages and libraries that can help us make sense
of and utilize spatial data, and this poster will explain some of those
options.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad Cooper</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/730/27-reading-and-writing-spatial-data-for-the-non-</guid><enclosure url="https://www.youtube.com/watch?v=ziz2lh-14i8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ziz2lh-14i8/hqdefault.jpg"></media:thumbnail></item><item><title>29. Keeping the Chandra satellite cool with Python and Xija</title><link>http://www.pyvideo.org/video/731/29-keeping-the-chandra-satellite-cool-with-pytho</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Chandra X-ray Observatory has been producing significant astronomical
discoveries since its launch by NASA in July of 1999. The Chandra operations
team uses Python for predictive thermal modeling of the spacecraft to maintain
a safe thermal environment. This poster describes the Xija modeling framework
that is used to create, calibrate, and compute these thermal models.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Aldcroft</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/731/29-keeping-the-chandra-satellite-cool-with-pytho</guid><enclosure url="https://www.youtube.com/watch?v=dhUo_lpD7v0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/dhUo_lpD7v0/hqdefault.jpg"></media:thumbnail></item><item><title>2. Twisted Matrix High Scores</title><link>http://www.pyvideo.org/video/692/2-twisted-matrix-high-scores</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Do you have what it takes to get to the top of
http://twistedmatrix.com/highscores?

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jessica McKellar</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/692/2-twisted-matrix-high-scores</guid><enclosure url="https://www.youtube.com/watch?v=9XlPKEessD8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/9XlPKEessD8/hqdefault.jpg"></media:thumbnail></item><item><title>31. ProofCheck: Checking Mathematical Proofs written in TeX </title><link>http://www.pyvideo.org/video/732/31-proofcheck-checking-mathematical-proofs-writ</link><description>&lt;p&gt;Abstract&lt;/p&gt;
ProofCheck is a set of Python scripts which parse and check mathematics
written using TeX. Its homepage is www.proofcheck.org. Unlike computer proof
assistants which require immersion in the equivalent of a programming
language, ProofCheck attempts to handle mathematical language formalized
according to the author's preferences as much as possible.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Neveln</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/732/31-proofcheck-checking-mathematical-proofs-writ</guid><enclosure url="https://www.youtube.com/watch?v=qLXllxd4Z1c" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/qLXllxd4Z1c/hqdefault.jpg"></media:thumbnail></item><item><title>32. Python in Computer-Aided Drug Discovery </title><link>http://www.pyvideo.org/video/733/32-python-in-computer-aided-drug-discovery</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Computational tools are an integral part of the modern drug-discovery process.
At NIBR, we leverage Python to great success in all stages of drug discovery.
Not only can we easily deploy new tools to our scientists easily using tools
like Django, but Python's approachability (that "fits your brain" character)
allows scientists with no programming experience to start coding themselves!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eddie Cao</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/733/32-python-in-computer-aided-drug-discovery</guid><enclosure url="https://www.youtube.com/watch?v=3FcAcE3Zq2Q" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/3FcAcE3Zq2Q/hqdefault.jpg"></media:thumbnail></item><item><title>34. CrossCompute is a web platform where users can run algorithms</title><link>http://www.pyvideo.org/video/734/34-crosscompute-is-a-web-platform-where-users-ca</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Have you developed a mathematical model or computational / visualization
algorithm? Your algorithm could be useful worldwide to people who face a real-
world problem but do not want to write code. Professionals in industry,
scientists in other fields or researchers in developing countries can quickly
apply your work to their domain with a web-based cloud-computing platform like
CrossCompute.


&lt;p&gt;Description&lt;/p&gt;
CrossCompute is a site where you can run mathematical models and algorithms
submitted by researchers. If you are a researcher and you submit your
algorithm, you'll get paid each time it runs. We'll send you a URL where users
can run your model on their data as many times as they want. More users mean
more feedback that you can use to improve your model.

Here is an example: Suppose a mathematician in the US develops an operations
research model for placing schools in a community given the locations of
existing schools and households, and decides to charge ten cents each time it
runs. Then a business owner in Ghana runs the model over the internet to place
stores in his district, and saves money because he didn't have to hire a
consulting firm or buy a software package. Meanwhile, the mathematician in the
US uses the algorithm revenue to fund research to improve the model.

Now is an exciting time to get involved in data analytics for your city or
local government. Governments need to prioritize limited resources like
emergency response firefighters, police officers and city inspectors. I urge
you to contact your local Mayor's office to learn about the challenges they
are facing. Then, create a tool to make their life easier. You can send the
tool to support@crosscompute.com where it will join a growing collection of
analytics for the public good. You will get the credit for the algorithm, the
revenue and users from around the world.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roy Hyunjin Han</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/734/34-crosscompute-is-a-web-platform-where-users-ca</guid><enclosure url="https://www.youtube.com/watch?v=U1Y5Uxn2Rcw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/U1Y5Uxn2Rcw/hqdefault.jpg"></media:thumbnail></item><item><title>35. PyMC: Markov chain Monte Carlo in Python</title><link>http://www.pyvideo.org/video/735/35-pymc-markov-chain-monte-carlo-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PyMC implements a suite of Markov chain Monte Carlo (MCMC) sampling algorithms
making it extremely flexible, extensible and applicable to a large suite of
statistical modeling problems. PyMC's clear, concise syntax allows scientists
to flexibly implement Bayesian models without hand-coding samplers.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/735/35-pymc-markov-chain-monte-carlo-in-python</guid><enclosure url="https://www.youtube.com/watch?v=x-JDra36m38" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/MJpp5jlBwuE/hqdefault.jpg"></media:thumbnail></item><item><title>36. Using Python for robotics with Aldebaran's humanoid robot NAO.</title><link>http://www.pyvideo.org/video/736/36-using-python-for-robotics-with-aldebarans-hu</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this poster session, we shall review how Python can be used to control and
program Aldebaran's humanoid robot NAO.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dimitri Merejkowsky</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/736/36-using-python-for-robotics-with-aldebarans-hu</guid><enclosure url="https://www.youtube.com/watch?v=Me9SZohibPQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Me9SZohibPQ/hqdefault.jpg"></media:thumbnail></item><item><title>37. Building a Robot that Can Play Angry Birds on a Smartphone (or Robots are the Future of Testing)</title><link>http://www.pyvideo.org/video/737/37-building-a-robot-that-can-play-angry-birds-on</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A poster session for a hands-on demo of "BitbeamBot". It started as an art
project, but it has a much more serious practical application: mobile web
testing. To trust that your mobile app truly works, you need an end-to-end
test on the actual device. BitbeamBot is an Arduino-powered open-source
hardware CNC robot that can test any application on any mobile device.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Huggins</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/737/37-building-a-robot-that-can-play-angry-birds-on</guid><enclosure url="https://www.youtube.com/watch?v=KUOoStyV7Zs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/KUOoStyV7Zs/hqdefault.jpg"></media:thumbnail></item><item><title>38. ABC: the mother of Python</title><link>http://www.pyvideo.org/video/723/38-abc-the-mother-of-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Before Python, Guido was a contributor to the ABC language and environment.
ABC was designed to teach programming, and introduced many "Pythonic" ideas:
integrated dicts and tuples, structure by indentation, strong typing without
declarations etc. With high demand for Python in education, the legacy of ABC
is more relevant than ever as we design courses and environments for learners.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luciano Ramalho</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/723/38-abc-the-mother-of-python</guid><enclosure url="https://www.youtube.com/watch?v=Qh4Gkkgi1Mw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/u2-MbpX-bxQ/hqdefault.jpg"></media:thumbnail></item><item><title>39. Python under PyCScope</title><link>http://www.pyvideo.org/video/724/39-python-under-pycscope</link><description>&lt;p&gt;Abstract&lt;/p&gt;
CScope has been around for years, and is a very useful tool to get a handle on
C source code. Pycscope is an attempt to bring those benefits to the world of
Python. Unfortunately, the existing version is woefully out of date. We take a
walk through an attempt to update it, correct some flaws and make it more
generally useful to us, while giving us a view into the Python parser.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Portante</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/724/39-python-under-pycscope</guid><enclosure url="https://www.youtube.com/watch?v=Hx6VxszpvsY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/QCQ0EX6SLl4/hqdefault.jpg"></media:thumbnail></item><item><title>3. Hacking for Humanity with Python: The CuiBono political app</title><link>http://www.pyvideo.org/video/693/3-hacking-for-humanity-with-python-the-cuibono</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster discusses the development of the CuiBono "political ad truth
detector" app, from concept, to hackathon, to launch. The poster also talks
about Python's prominence at the Philadelphia Random Hacks of Kindness
hackathon (Winter 2011)

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim and Bob,Pam Selle</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/693/3-hacking-for-humanity-with-python-the-cuibono</guid><enclosure url="https://www.youtube.com/watch?v=WMUXMqYhQ-M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/WMUXMqYhQ-M/hqdefault.jpg"></media:thumbnail></item><item><title>40. MediaGoblin: The Road to Federation</title><link>http://www.pyvideo.org/video/725/40-mediagoblin-the-road-to-federation</link><description>&lt;p&gt;Abstract&lt;/p&gt;
From just a gleam in founder Chris Webber's eye to a full tilt media hosting
project supporting photos, HTML5 video, and more, the road to federation has
been a wild ride so far. Come talk to us about the challenges, the fun and the
future.


&lt;p&gt;Description&lt;/p&gt;
From just a gleam in founder Chris Webber's eye to a full tilt media hosting
project supporting photos, HTML5 video, and more, the road to federation has
been a wild ride so far. We owe a lot to the huge community of fellow
federators whose work on the ostaus library enabled us to start in the middle
with our own not-quite-finished spin, Kuneco. Kudos to the GNU project for
getting excited about the web with us. We're also thankful for the massive
outpouring of project love that channeled itself through transifex and has
made Media Goblin global-ready even though it isn't finished. Ever thought
about switching databases midstream? Come talk to us, Mongo to SQL wasn't as
bad as we'd been expecting. We'll also tell you all about our minimalist wsgi
un-framework design and how we think it's working compared to Django or even
Pylons/Pyramid.

What's still left do? Smoother interoperations with allied projects like
StatusNet and Diaspora. Support for more media types like 3D modelling and
presentations. World domination... in a friendly way! Swing by if you're
looking for a new project to get involved with or just want details to take
back to your own.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Allan Webber,Deb Nicholson</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/725/40-mediagoblin-the-road-to-federation</guid><enclosure url="https://www.youtube.com/watch?v=AMMBYLB3qd0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/AMMBYLB3qd0/hqdefault.jpg"></media:thumbnail></item><item><title>41. Git 'er Done Fast! Developing Apps for the Cloud with Django and PyMongo in 30 Minutes or Less</title><link>http://www.pyvideo.org/video/814/41-git-er-done-fast-developing-apps-for-the-cl</link><description>&lt;p&gt;Abstract&lt;/p&gt;
RedHat talks about OpenShift.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Blado</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/814/41-git-er-done-fast-developing-apps-for-the-cl</guid><enclosure url="https://www.youtube.com/watch?v=fVpvd7OX6PQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/fVpvd7OX6PQ/hqdefault.jpg"></media:thumbnail></item><item><title>42. The Future of Python Packaging</title><link>http://www.pyvideo.org/video/813/42-the-future-of-python-packaging</link><description>&lt;p&gt;Abstract&lt;/p&gt;
There are currently multiple methods for packaging, distributing, discovering,
and installing Python software. This presentation will discuss the limitations
of the current methods, the efforts to standardize Python packaging, and
practical advice for developers to add support for the new packaging library,
distutils2 ("packaging" in Python 3.3+), to their software.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Wilson,Ryan Baker,Taylor Hand,Taylor Michael</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/813/42-the-future-of-python-packaging</guid><enclosure url="https://www.youtube.com/watch?v=OceCWIqZt7I" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/OceCWIqZt7I/hqdefault.jpg"></media:thumbnail></item><item><title>43. What is IPv6 and why does my website I need it</title><link>http://www.pyvideo.org/video/726/43-what-is-ipv6-and-why-does-my-website-i-need-i</link><description>&lt;p&gt;Abstract&lt;/p&gt;
On February 3rd, 2011 the world ran out of the IPv4 addresses that we know and
love. Clearly the Internet has survived even though hardly anyone has deployed
IPv4's successor, IPv6. Drop by to learn about what IPv6 is, why you should
deploy it and some of the hurdles to deployment.


&lt;p&gt;Description&lt;/p&gt;
**Background**

On February 3rd, 2011 the world ran out of the IPv4 addresses that we know and
love. The Internet continues to work thanks to technologies like NAT that
enable private IP addresses like 192.168.1.1 and 10.0.0.1 to be reused across
organizations. However, even these large blocks of private IP addresses are
not large enough for large ISPs like Comcast in the United States that give
several IP addresses to each customer (ex. cable set top box, voip, cable
modem).

To continue adding new customers large ISPs have begun deploying two
technologies: IPv6 and large scale NAT.

Large scale NAT is a way for large ISPs to put several of their customers
behind a single public IP address. This means that the one public IPv4 address
you used to have to yourself is now shared by you and several of your
neighbors. It means that as a website owner it is now more difficult to
discern anything useful from the IP addresses visiting your website.

IPv6 solves the address exhaustion problem by moving from approximately 4
billion IP addresses to 3.4×10^38 IP addresses; more than the number of atoms
on Earth. With plenty of IP addresses ISPs can now return to giving out
unique, public IP addresses to each customer.

Many mobile operators are already beginning to deploy IPv6. In 2009 Verizon
issued a mandate that any LTE devices on its network support IPv6 with IPv4
support being listed as optional [1]. An IPv6-only device will still need
access to the IPv4 Internet, however, IPv6 and IPv4 are not compatible.
Providers like Verizon are putting in place protocol translation devices that
inspect Internet traffic going through them and proxy IPv4-only websites to
their IPv6 customers. While this may sound wonderful it means that mobile
providers are inspecting and rewriting your packets. Making things more
interesting is that this won't work securely over SSL. The solution is to
enable IPv6 on your website so that IPv6-only hosts can directly access your
content.

**Joining the IPv6 bandwagon**

Amazon's Elastic Load Balancer supports IPv6 and is already enabled in all
east coast availability zones [2]. If you're already using ELB enabling IPv6
on your website is as easy as making a single DNS change. Or so we'd hope,
there are still some impediments to a world where your site runs seamlessly on
IPv6.

**The user with broken IPv6**

There are people in the world with broken or inferior IPv6 connectivity and a
web browser or operating system that attempt to use IPv6 anyway. What this
means is that if you turn on IPv6 on your website you have the potential to
cut off those users from your site. In this talk I'll discuss methods for
measuring and analyzing this loss before your broadly enable IPv6 so that you
can make an informed decision about when and how to flip the switch.

**Geo IP**

Geo IP libraries today are still coming to terms with IPv6. One vendor in
particular is working on IPv6 but only provides limited support in their free
libraries and not yet in their python driver. In their commercial library, the
one generally considered better, they do not support IPv6 yet due to lack of
data [3].

**IPv6 without Amazon**

At Eventbrite we do development inside of Virtual Box virtual machines. In
this talk I'll discuss how we configure IPv6 on both the host and guest
operating systems so that we can test IPv6 before we push to Amazon.

**IP Address Validation**

If you accept IP addresses from end users check your IP address validation
routines (Django has support, see GenericIPAddressField).

**References**

  * [1] [http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/](http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/)
  * [2] [http://www.allthingsdistributed.com/2011/05/aws_ipv6.html](http://www.allthingsdistributed.com/2011/05/aws_ipv6.html)
  * [3] [http://www.maxmind.com/app/ipv6](http://www.maxmind.com/app/ipv6)

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Van Zant</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/726/43-what-is-ipv6-and-why-does-my-website-i-need-i</guid><enclosure url="https://www.youtube.com/watch?v=VuFW0PkNS74" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/DTGi8y1DMtg/hqdefault.jpg"></media:thumbnail></item><item><title>46. HTSQL : a navigational query language for relational databases</title><link>http://www.pyvideo.org/video/728/46-htsql-a-navigational-query-language-for-rel</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This poster will cover a description of the HTSQL query language
(http://htsql.org).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin,Clark C. Evans</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/728/46-htsql-a-navigational-query-language-for-rel</guid><enclosure url="https://www.youtube.com/watch?v=5jRLjGWWaHs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/5jRLjGWWaHs/hqdefault.jpg"></media:thumbnail></item><item><title>48. Advanced Parallel Primitives in SPM.Python for Data and Graph Analytics</title><link>http://www.pyvideo.org/video/727/48-advanced-parallel-primitives-in-spmpython-fo</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Traditional solutions for data and graph analytics tend to be highly
fragmented, and take the form of stand-alone frameworks. In this poster
session, we shall describe our approach that is centered around a suite of
advanced parallel primitives embedded within SPM.Python. These primitives
augment the serial Python language with concepts like parallel generators,
emitters and exceptions.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Minesh B Amin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/727/48-advanced-parallel-primitives-in-spmpython-fo</guid><enclosure url="https://www.youtube.com/watch?v=_CPNLY_Gf7s" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/_CPNLY_Gf7s/hqdefault.jpg"></media:thumbnail></item><item><title>4. How the Tor Project uses Python</title><link>http://www.pyvideo.org/video/694/4-how-the-tor-project-uses-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
While the Tor client software itself is written in C, there's more to the Tor
project than just the core client. Come see how the Tor project uses Python
for network analysis, metrics, and various front- and back-end services.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Spang</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/694/4-how-the-tor-project-uses-python</guid><enclosure url="https://www.youtube.com/watch?v=CFt6QrzavH0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/CFt6QrzavH0/hqdefault.jpg"></media:thumbnail></item><item><title>7. The Artemis Project: Promoting Computer Science to High School Girls</title><link>http://www.pyvideo.org/video/705/7-the-artemis-project-promoting-computer-scienc</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Artemis Project is a summer program to introduce high school girls to the
problem-solving skills that are at the core of computer science. As
coordinators, we found that there is a lot of undiscovered talent and
enthusiasm for CS in the younger generation. Our poster is meant to encourage
discussions on intuitive ways to introduce programming and interesting
projects for novice programmers.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Zhao,Kim Win</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/705/7-the-artemis-project-promoting-computer-scienc</guid><enclosure url="https://www.youtube.com/watch?v=67l4czkKsz8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/67l4czkKsz8/hqdefault.jpg"></media:thumbnail></item><item><title>8. BoolPy: Using Python for Symbolic Boolean Algebra Simplification</title><link>http://www.pyvideo.org/video/695/8-boolpy-using-python-for-symbolic-boolean-alge</link><description>&lt;p&gt;Abstract&lt;/p&gt;
BoolPy is a Python module that iteratively simplifies Boolean Algebra
expressions according to the Boolean Theorems. The purpose of this talk is
twofold: (1) To present the details of an Object-Oriented solution to the
symbolic computing problem and (2) to present the BoolPy module as a useful
classroom tool for teaching Boolean Algebra in college-level mathematics and
computer science courses.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Moore</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/695/8-boolpy-using-python-for-symbolic-boolean-alge</guid><enclosure url="https://www.youtube.com/watch?v=FCiA6e44aOI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/FCiA6e44aOI/hqdefault.jpg"></media:thumbnail></item><item><title>9. Developing Humanitarian Packages with Sugar and Python</title><link>http://www.pyvideo.org/video/700/9-developing-humanitarian-packages-with-sugar-an</link><description>&lt;p&gt;Abstract&lt;/p&gt;
FOSS@RIT is an applied research lab at Rochester Institute of Technology
focused on promoting free/open source software and open web technologies. The
lab helped create a series of classes which have resulted in several
educational games and tools written in Python for the Sugar desktop
environment. Come learn more about our students' projects and how open source
can be applied in the classroom.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathaniel Case,Taylor Rose</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/700/9-developing-humanitarian-packages-with-sugar-an</guid><enclosure url="https://www.youtube.com/watch?v=uUEwEMMCZhE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/uUEwEMMCZhE/hqdefault.jpg"></media:thumbnail></item><item><title>Building A Python-Based Search Engine</title><link>http://www.pyvideo.org/video/715/building-a-python-based-search-engine</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Search is an increasingly common request in all types of applications as the
amount of data all of us deal with continues to grow. The
technology/architecture behind search engines is wildly different from what
many developers expect. This talk will give a solid grounding in the
fundamentals of providing search using Python to flesh out these concepts in a
simple library.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindsley</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/715/building-a-python-based-search-engine</guid><enclosure url="https://www.youtube.com/watch?v=cY7pE7vX6MU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/cY7pE7vX6MU/hqdefault.jpg"></media:thumbnail></item><item><title>Deep Freeze: building better stand-alone apps with Python</title><link>http://www.pyvideo.org/video/958/deep-freeze-building-better-stand-alone-apps-wit</link><description>&lt;p&gt;Abstract&lt;/p&gt;
There's more to shipping a stand-alone python app than just running py2exe
over your code. Want to deploy automatic updates? Want to be sure it runs on
legacy platforms? Want to add professional touches like code signing? And want
to do this all in a cross-platform manner? This talk will show you the tools
you can use to make your frozen apps better in a variety of small yet
important ways.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Kelly</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/958/deep-freeze-building-better-stand-alone-apps-wit</guid><enclosure url="https://www.youtube.com/watch?v=vP6j7VDpPrI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/vP6j7VDpPrI/hqdefault.jpg"></media:thumbnail></item><item><title>Diversity in practice: How the Boston Python User Group grew to 1700 people and over 15% women</title><link>http://www.pyvideo.org/video/719/diversity-in-practice-how-the-boston-python-user</link><description>&lt;p&gt;Abstract&lt;/p&gt;
How do you bring more women into programming communities with long-term,
measurable results? In this talk we'll analyze our successful effort, the
Boston Python Workshop, which brought over 200 women into Boston's Python
community this year. We'll talk about lessons learned running the workshop,
the dramatic effect it has had on the local user group, and how to run a
workshop in your city.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia,Jessica McKellar</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/719/diversity-in-practice-how-the-boston-python-user</guid><enclosure url="https://www.youtube.com/watch?v=QrITN6GZDu4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/QrITN6GZDu4/hqdefault.jpg"></media:thumbnail></item><item><title>Improving Documentation with "Beginner's Mind" (or: Fixing the Django Tutorial)</title><link>http://www.pyvideo.org/video/713/improving-documentation-with-beginners-mind-o</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk evaluates a well-known free software tutorial (the official Django
tutorial) from the perspective of a web development novice in order to point
out omissions and common sticking points and suggest improvements. More
generally, this talk is useful to anyone looking to improve their project's
tutorials and other newcomer-targeted documentation by approaching them with
"beginner's mind".

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Karen Rustad</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/713/improving-documentation-with-beginners-mind-o</guid><enclosure url="https://www.youtube.com/watch?v=euh9ZQi339o" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/euh9ZQi339o/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote: Guido Van Rossum</title><link>http://www.pyvideo.org/video/956/keynote-guido-van-rossum</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guido van Rossum</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/956/keynote-guido-van-rossum</guid><enclosure url="https://www.youtube.com/watch?v=EBRMq2Ioxsc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/EBRMq2Ioxsc/hqdefault.jpg"></media:thumbnail></item><item><title>More than just a pretty web framework, the Tornado IOLoop</title><link>http://www.pyvideo.org/video/720/more-than-just-a-pretty-web-framework-the-tornad</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Tornado, often thought of as a web development framework and toolset is built
on top of a protocol-agnostic IOLoop, presenting an alternative to Twisted as
a foundation for asynchronous application development in Python. This talk
covers the Tornado IOLoop, its features and the process of writing drivers and
applications using it.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gavin M. Roy</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/720/more-than-just-a-pretty-web-framework-the-tornad</guid><enclosure url="https://www.youtube.com/watch?v=3BYN3ouwkRA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/3BYN3ouwkRA/hqdefault.jpg"></media:thumbnail></item><item><title>Parsing Horrible Things with Python</title><link>http://www.pyvideo.org/video/708/parsing-horrible-things-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
If you've ever wanted to get started with parsers, here's your chance for a
ground-floor introduction. A harebrained spare-time project gives birth to a
whirlwind journey from basic algorithms to Python libraries and, at last, to a
parser for one of the craziest syntaxes out there: the MediaWiki grammar that
drives Wikipedia.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Rose</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/708/parsing-horrible-things-with-python</guid><enclosure url="https://www.youtube.com/watch?v=tCUdeLIj4hE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/tCUdeLIj4hE/hqdefault.jpg"></media:thumbnail></item><item><title>Parsing sentences with the OTHER natural language tool: LinkGrammar</title><link>http://www.pyvideo.org/video/716/parsing-sentences-with-the-other-natural-language</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Many of you are probably familiar with NLTK, the wonderful Natural Language
Toolkit for Python. You may not be familiar with Linkgrammar, which is a
sentence parsing system created at Carnegie Melon university. Linkgrammar is
quite robust and works "out of the box" in a way that NLTK does not for
sentence parsing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Elmore</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/716/parsing-sentences-with-the-other-natural-language</guid><enclosure url="https://www.youtube.com/watch?v=Wk8zAr0R9zQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Wk8zAr0R9zQ/hqdefault.jpg"></media:thumbnail></item><item><title>Patterns for building large Pyramid applications</title><link>http://www.pyvideo.org/video/707/patterns-for-building-large-pyramid-applications</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pyramid is a very flexible framework, but when dealing with large projects and
multiple developers it pays to establish a few ground rules and follow some
conventions. In this talk we'll discuss some patterns for organizing and
developing a large Pyramid application.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlos de la Guardia</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/707/patterns-for-building-large-pyramid-applications</guid><enclosure url="https://www.youtube.com/watch?v=NUQMr5R3dlk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/NUQMr5R3dlk/hqdefault.jpg"></media:thumbnail></item><item><title>Python, Linkers, and Virtual Memory</title><link>http://www.pyvideo.org/video/717/python-linkers-and-virtual-memory</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Why does “top” show that your Python process uses 110 MB of virtual memory but
has a resident set size of 9 MB? Does it consume more memory to spawn several
interpreters, or to run one Python and have it fork() further workers? What is
an “undefined symbol,” anyway? Learn about how an operating system manages
memory, loads shared libraries, and what this means for Python servers and
applications.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/717/python-linkers-and-virtual-memory</guid><enclosure url="https://www.youtube.com/watch?v=twQKAoq2OPE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/twQKAoq2OPE/hqdefault.jpg"></media:thumbnail></item><item><title>Robot NAO</title><link>http://www.pyvideo.org/video/709/robot-nao</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/709/robot-nao</guid><enclosure url="https://www.youtube.com/watch?v=dJJDndQrsSw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/dJJDndQrsSw/hqdefault.jpg"></media:thumbnail></item><item><title>Sketching a Better Product</title><link>http://www.pyvideo.org/video/957/sketching-a-better-product</link><description>&lt;p&gt;Abstract&lt;/p&gt;
If writing is a means for organizing your thoughts, then sketching is a means
for organizing your thoughts visually. Just as good writing requires drafts,
good design requires sketches: low-investment, low-resolution braindumps.
Learn how to use ugly sketching to iterate your way to a better product.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Idan Gazit</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/957/sketching-a-better-product</guid><enclosure url="https://www.youtube.com/watch?v=Q0Q9K93bK-4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Q0Q9K93bK-4/hqdefault.jpg"></media:thumbnail></item><item><title>Sunday Afternoon Lightning talks (90 minutes)</title><link>http://www.pyvideo.org/video/721/sunday-afternoon-lightning-talks-90-minutes</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/721/sunday-afternoon-lightning-talks-90-minutes</guid><enclosure url="https://www.youtube.com/watch?v=5YQrFiWa50M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/5YQrFiWa50M/hqdefault.jpg"></media:thumbnail></item><item><title>Sunday Morning Lightning talks</title><link>http://www.pyvideo.org/video/954/sunday-morning-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/954/sunday-morning-lightning-talks</guid><enclosure url="https://www.youtube.com/watch?v=VMIj6eB9baY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/VMIj6eB9baY/hqdefault.jpg"></media:thumbnail></item><item><title>Transifex: Beautiful Python app localization</title><link>http://www.pyvideo.org/video/710/transifex-beautiful-python-app-localization</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Localization of Python apps used to be hard, but not any more. This talk will
offer a short intro on software localization in Python and discuss today's
best practices. It will present Transifex, a modern, Django-based SaaS, also
referred to as 'The Github of translations', used by 2.000 open-source
projects including Django, Mercurial, Fedora and Firefox.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dimitris Glezos</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/710/transifex-beautiful-python-app-localization</guid><enclosure url="https://www.youtube.com/watch?v=KOfB5WQb39g" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/KOfB5WQb39g/hqdefault.jpg"></media:thumbnail></item><item><title>web2py: ideas we stole and ideas we had</title><link>http://www.pyvideo.org/video/714/web2py-ideas-we-stole-and-ideas-we-had</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this talk we will provide an overview of some of the web2py design
decisions and its newest features. In particular we will discuss which design
decisions were inspired by other frameworks (Django, Turbogears, Flask) and
which were not and why.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Massimo Di Pierro</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/714/web2py-ideas-we-stole-and-ideas-we-had</guid><enclosure url="https://www.youtube.com/watch?v=M5IPlMe83yI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/M5IPlMe83yI/hqdefault.jpg"></media:thumbnail></item><item><title>What's new and interesting in standard library</title><link>http://www.pyvideo.org/video/718/whats-new-and-interesting-in-standard-library</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk distills some intereting stuff from What's new document from 2.7,
3.2 and upcoming 3.3 release. Look out for those new arguments to your
favorite methods, functions add the wow! factor to your code. Heard of
@lru_cache?

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Senthil Kumaran</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/718/whats-new-and-interesting-in-standard-library</guid><enclosure url="https://www.youtube.com/watch?v=2gha47uSk5c" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/2gha47uSk5c/hqdefault.jpg"></media:thumbnail></item><item><title>What's New in Python on Windows</title><link>http://www.pyvideo.org/video/712/whats-new-in-python-on-windows</link><description>&lt;p&gt;Abstract&lt;/p&gt;
With nearly 1.5 million downloads per month, the CPython installers for
Windows account for a huge amount of the traffic through python.org, and
they're the most common way for Windows users to obtain Python. Take a look at
what's going on with Python on Windows and see what the road ahead looks like
for Python 3.3.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Curtin</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/712/whats-new-in-python-on-windows</guid><enclosure url="https://www.youtube.com/watch?v=lJL2asANiyM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/lJL2asANiyM/hqdefault.jpg"></media:thumbnail></item><item><title>Writing GIMP Plug-ins in Python</title><link>http://www.pyvideo.org/video/711/writing-gimp-plug-ins-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Learn how to write Python plug-ins for GIMP, the GNU Image Manipulation
Program. With PyGIMP, you can automate simple image processing tasks in just a
few lines of PyGIMP, develop elaborate plug-ins that do low-level pixel
manipulation, or anything in between.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akkana Peck</dc:creator><pubDate>Sun, 11 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/711/writing-gimp-plug-ins-in-python</guid><enclosure url="https://www.youtube.com/watch?v=YHXX3KuB23Q" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/YHXX3KuB23Q/hqdefault.jpg"></media:thumbnail></item><item><title>Advanced Celery</title><link>http://www.pyvideo.org/video/704/advanced-celery</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will delve deep into advanced aspects of the Celery task queue and
ecosystem. Previous experience with task queues and message oriented
middleware is beneficial.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ask Solem Hoel</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/704/advanced-celery</guid><enclosure url="https://www.youtube.com/watch?v=gpKMwPoldak" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/gpKMwPoldak/hqdefault.jpg"></media:thumbnail></item><item><title>A Gentle Introduction to GIS</title><link>http://www.pyvideo.org/video/887/a-gentle-introduction-to-gis</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Datums! Coordinate systems! Map projections! Topologies! Spatial applications
are a nebulous, daunting concept to most Pythonistas. This talk is a gentle
introduction into the concepts, terminology and tools to demystify the world
of the world.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Scheirer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/887/a-gentle-introduction-to-gis</guid><enclosure url="https://www.youtube.com/watch?v=LddeJ06JoXE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/LddeJ06JoXE/hqdefault.jpg"></media:thumbnail></item><item><title>Building a Kinect game with Python</title><link>http://www.pyvideo.org/video/669/building-a-kinect-game-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk will show you how to develop a game using Kinect from Python. I'll
start w/ an introduction to the Kinect API including skeleton tracking, normal
video, depth video, and audio APIs including speech recognition. I’ll then
show how the Kinect APIs can be incorporated into a game using PyGame. After
the talk you’ll be able to start developing your own Python based Kinect
games!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dino Viehland</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/669/building-a-kinect-game-with-python</guid><enclosure url="https://www.youtube.com/watch?v=BoMQqW0lxVE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/BoMQqW0lxVE/hqdefault.jpg"></media:thumbnail></item><item><title>Building a Robot that Can Play Angry Birds on a Smartphone, (or Robots are the Future of Testing)</title><link>http://www.pyvideo.org/video/683/building-a-robot-that-can-play-angry-birds-on-a-s</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Can your robot play Angry Birds? On an iPhone? Mine can. I call it
"BitbeamBot". It started as an art project, but it has a much more serious
practical application: mobile web testing. To trust that your mobile app truly
works, you need an end-to-end test on the actual device. BitbeamBot is an
Arduino-powered open-source hardware CNC robot that can test any application
on any mobile device.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason Huggins</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/683/building-a-robot-that-can-play-angry-birds-on-a-s</guid><enclosure url="https://www.youtube.com/watch?v=NkUTLRZBWLM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/NkUTLRZBWLM/hqdefault.jpg"></media:thumbnail></item><item><title>Cache Rules Everything Around Me</title><link>http://www.pyvideo.org/video/679/cache-rules-everything-around-me</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk aims to briefly introduce the core concepts of caching and covers
the best practices of implementing them, using a small variety of python web
frameworks (Flask, Django) for example code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jacob Burch,Noah Silas</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/679/cache-rules-everything-around-me</guid><enclosure url="https://www.youtube.com/watch?v=fekA2mRGTTE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/fekA2mRGTTE/hqdefault.jpg"></media:thumbnail></item><item><title>Coroutines, event loops, and the history of Python generators</title><link>http://www.pyvideo.org/video/668/coroutines-event-loops-and-the-history-of-pytho</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk traces lightweight concurrency from Python 2.2's generators, which
enabled semi-coroutines as a mechanism for scheduling "weightless" threads; to
PEP 342, which created true coroutines, and hence made event-driven
programming easier; to 3rd party libraries built around coroutines, from older
GTasklet and peak.events to the current Greenlet/gevent and Twisted Reactor.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Mertz</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/668/coroutines-event-loops-and-the-history-of-pytho</guid><enclosure url="https://www.youtube.com/watch?v=b7R3-_ViNxk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/b7R3-_ViNxk/hqdefault.jpg"></media:thumbnail></item><item><title>Cross-Compiling Python &amp; C Extensions for Embedded Systems</title><link>http://www.pyvideo.org/video/682/cross-compiling-python-c-extensions-for-embedde</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Cross-compiling is not a use case directly supported by the Python build and
extension system. This talk will discuss the process of building python for
your embedded platform, and the basics of getting C extensions compiled and
running. It will focus on Linux so that the build host and the build target
are the same.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Lambacher</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/682/cross-compiling-python-c-extensions-for-embedde</guid><enclosure url="https://www.youtube.com/watch?v=nhr-YErfW8k" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/nhr-YErfW8k/hqdefault.jpg"></media:thumbnail></item><item><title>David Beazley Keynote: Tinkering with PyPy</title><link>http://www.pyvideo.org/video/659/keynote-david-beazley</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Beazley</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/659/keynote-david-beazley</guid><enclosure url="https://www.youtube.com/watch?v=l_HBRhcgeuQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/l_HBRhcgeuQ/hqdefault.jpg"></media:thumbnail></item><item><title>Designing Embedded Systems with Linux and Python</title><link>http://www.pyvideo.org/video/687/designing-embedded-systems-with-linux-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The continual decrease in the cost of computer hardware is allowing more
embedded systems to be built with Linux and Python, instead of the traditional
approach of a real-time operating system and C. This talk reviews the
differences between those approaches and describes problems, solutions, and
tools that can be used when building embedded systems with Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mark Kohler</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/687/designing-embedded-systems-with-linux-and-python</guid><enclosure url="https://www.youtube.com/watch?v=WZoeqnsY9AY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/WZoeqnsY9AY/hqdefault.jpg"></media:thumbnail></item><item><title>Django Form Processing Deep Dive </title><link>http://www.pyvideo.org/video/698/django-form-processing-deep-dive</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Django Form processing often takes a back seat to flashier, more visible parts
of the framework. But Django forms, fully leveraged, can help developers be
more productive and write more cohesive code. This talk will dive deep into
the stock Django forms package, as well as discuss a strategy for abstracting
validation for forms, and the use of unit and integration tests with forms.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Nathan Yergler</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/698/django-form-processing-deep-dive</guid><enclosure url="https://www.youtube.com/watch?v=Wh9a0obtQUQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Wh9a0obtQUQ/hqdefault.jpg"></media:thumbnail></item><item><title>Django Templating: More Than Just Blocks</title><link>http://www.pyvideo.org/video/697/django-templating-more-than-just-blocks</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Django's template language is designed to strike a balance between power and
ease of use; learn how to use this balance to create awesome looking websites.
This talk will cover the basics and best practices of Django templating, from
custom tag and filter creation, to the finer points of template rendering and
loading, and even to replacing the default templating engine itself.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christine Cheung</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/697/django-templating-more-than-just-blocks</guid><enclosure url="https://www.youtube.com/watch?v=ahM4GBZ-6qg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ahM4GBZ-6qg/hqdefault.jpg"></media:thumbnail></item><item><title>Flexing SQLAlchemy's Relational Power</title><link>http://www.pyvideo.org/video/664/flexing-sqlalchemys-relational-power</link><description>&lt;p&gt;Abstract&lt;/p&gt;
How do you take the big step from casual SQLAlchemy user, who treats your
database as a mysterious object store, to advanced power user, who optimizes
critical queries, plans indexing and migrations, and generates efficient
reports? This talk will teach you how databases think; why humanity invented
the Relational Algebra; and how SQLAlchemy grants you access to relational
power.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/664/flexing-sqlalchemys-relational-power</guid><enclosure url="https://www.youtube.com/watch?v=399c-ycBvo4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/399c-ycBvo4/hqdefault.jpg"></media:thumbnail></item><item><title>Getting the Most Out of Python Imports</title><link>http://www.pyvideo.org/video/671/getting-the-most-out-of-python-imports</link><description>&lt;p&gt;Abstract&lt;/p&gt;
To really take advantage of Python you must understand how imports work and
how to use them effectively. In this talk we'll discuss both of these. After a
short introduction to imports, we'll dive right in and look at how customizing
import behavior can make all your wildest dreams come true.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/671/getting-the-most-out-of-python-imports</guid><enclosure url="https://www.youtube.com/watch?v=kdZuUIj4lMo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/kdZuUIj4lMo/hqdefault.jpg"></media:thumbnail></item><item><title>Hand Coded Applications with SQLAlchemy</title><link>http://www.pyvideo.org/video/665/hand-coded-applications-with-sqlalchemy</link><description>&lt;p&gt;Abstract&lt;/p&gt;
SQLAlchemy is the object relational mapper and database toolkit for Python,
first introduced in 2005. In this talk I'll describe why SQLAlchemy has always
been called a "toolkit", detailing the software construction mindset for which
SQLAlchemy was designed to be used with - what I am currently referring to as
the "Hand Coded" approach.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Bayer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/665/hand-coded-applications-with-sqlalchemy</guid><enclosure url="https://www.youtube.com/watch?v=E09qigk_hnY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/E09qigk_hnY/hqdefault.jpg"></media:thumbnail></item><item><title>How CherryPy supports Python 2 and 3</title><link>http://www.pyvideo.org/video/689/how-cherrypy-supports-python-2-and-3</link><description>&lt;p&gt;Abstract&lt;/p&gt;
CherryPy was the first web framework to be made available for use with Python
3, and we tried several approaches to support both Python 2 and 3 before
settling on one. Learn about the ups and the downs of each approach, and ways
you can make your own porting project easier.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Brewer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/689/how-cherrypy-supports-python-2-and-3</guid><enclosure url="https://www.youtube.com/watch?v=nvkCqFLtcJI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/nvkCqFLtcJI/hqdefault.jpg"></media:thumbnail></item><item><title>How the PyPy JIT works</title><link>http://www.pyvideo.org/video/662/how-the-pypy-jit-works</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Python community is abuzz about the major speed gains PyPy can offer pure
Python code. But how does PyPy JIT actually work? This talk will discuss how
the PyPy JIT is implemented. It will include descriptions of the tracing,
optimization, and assembly generation phases. I will demonstrate each step
with a example loop.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Benjamin Peterson</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/662/how-the-pypy-jit-works</guid><enclosure url="https://www.youtube.com/watch?v=NIcijUt-HlE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/NIcijUt-HlE/hqdefault.jpg"></media:thumbnail></item><item><title>Mailman 3</title><link>http://www.pyvideo.org/video/688/mailman-3</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Mailman 3 has been in development for several years. This is an evolution of
the ever popular mailing list management system that runs thousands of mailing
lists around the world. This talk describes how the code has been modernized
and how the architectural deficiencies of Mailman 2 have been addressed using
REST and other technologies. This is a spinoff from the AOSA chapter on
Mailman 3.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Barry Warsaw</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/688/mailman-3</guid><enclosure url="https://www.youtube.com/watch?v=dX3DRdFKW_E" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/dX3DRdFKW_E/hqdefault.jpg"></media:thumbnail></item><item><title>Making Jython Faster and Better</title><link>http://www.pyvideo.org/video/667/making-jython-faster-and-better</link><description>&lt;p&gt;Abstract&lt;/p&gt;
As a dynamic language, Python is difficult to optimize. In addition, these
dynamic features make using Python code from Java currently too complex.
However, Java 7 adds the invokedynamic bytecode and corresponding library
support, making it possible to finally address these problems in Jython. This
talk will describe work in progress to make Jython faster and better
(improving Java integration).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jim Baker</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/667/making-jython-faster-and-better</guid><enclosure url="https://www.youtube.com/watch?v=y_cXzaymXm0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/y_cXzaymXm0/hqdefault.jpg"></media:thumbnail></item><item><title>Making maps with Python</title><link>http://www.pyvideo.org/video/672/making-maps-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python makes it easy to store, query, and transform geodata. We will run
through a handful of useful GIS libraries and patterns that let you do magical
things with your maps. If you want to make maps that are more interactive and
more interesting, this talk is for you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zain Memon</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/672/making-maps-with-python</guid><enclosure url="https://www.youtube.com/watch?v=RBOScqRGHZA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/RBOScqRGHZA/hqdefault.jpg"></media:thumbnail></item><item><title>Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes</title><link>http://www.pyvideo.org/video/674/militarizing-your-backyard-with-python-computer</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Has your garden been ravaged by the marauding squirrel hordes? Has your bird
feeder been pillaged? Tired of shaking your fist at the neighbor children?
Learn how to use Python to tap into computer vision libraries and build an
automated sentry water cannon capable of soaking intruders.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kurt Grandis</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/674/militarizing-your-backyard-with-python-computer</guid><enclosure url="https://www.youtube.com/watch?v=QPgqfnKG_T4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/QPgqfnKG_T4/hqdefault.jpg"></media:thumbnail></item><item><title>Polyglot Programming with Python: Python/Scala Interop</title><link>http://www.pyvideo.org/video/681/polyglot-programming-with-python-pythonscala-in</link><description>&lt;p&gt;Abstract&lt;/p&gt;
I won't just demonstrate how to use projects that bridge programming
languages, I'll walk through the lower-level code that allows inter-language
communication to happen.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea O. K. Wright</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/681/polyglot-programming-with-python-pythonscala-in</guid><enclosure url="https://www.youtube.com/watch?v=fWONoZvTi80" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/fWONoZvTi80/hqdefault.jpg"></media:thumbnail></item><item><title>Pragmatic Unicode, or, How do I stop the pain?</title><link>http://www.pyvideo.org/video/948/pragmatic-unicode-or-how-do-i-stop-the-pain</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python has great Unicode support, but it's still your responsibility to handle
it properly. I'll do a quick overview of what Unicode is, but only enough to
get your program working properly. I'll describe strategies to make your code
work, and keep it working, without getting too far afield in Unicode la-la-
land.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ned Batchelder</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/948/pragmatic-unicode-or-how-do-i-stop-the-pain</guid><enclosure url="https://www.youtube.com/watch?v=sgHbC6udIqc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/sgHbC6udIqc/hqdefault.jpg"></media:thumbnail></item><item><title>Project Gado: Building an Open Archival Scanning Robot Using Python and Arduino</title><link>http://www.pyvideo.org/video/666/project-gado-building-an-open-archival-scanning</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Project Gado is an initiative which aims to create an open-source archival
scanning robot which small archives can purchase for $500 and use to
autonomously scan their photographic collections. This talk presents the Gado
2, a prototype scanning robot built around Python and Arduino, and shares
lessons learned from using Python as the primary language in a large-scale
archival scanning project.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Smith</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/666/project-gado-building-an-open-archival-scanning</guid><enclosure url="https://www.youtube.com/watch?v=1CjX385y3e4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/1CjX385y3e4/hqdefault.jpg"></media:thumbnail></item><item><title>Python and HDF5 - Fast Storage for Large Data</title><link>http://www.pyvideo.org/video/670/python-and-hdf5-fast-storage-for-large-data</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The presentation introduces the possibilities to use HDF5 (Hierarchical Data
Format) from Python. HDF5 is one of the fastest ways to store large amounts of
numerical data. The talk is for scientist who would like to store their
measured or calculated data as well as for programmers who are interested in
non-relational data storage.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/670/python-and-hdf5-fast-storage-for-large-data</guid><enclosure url="https://www.youtube.com/watch?v=hnhN2_TpY8g" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/hnhN2_TpY8g/hqdefault.jpg"></media:thumbnail></item><item><title>Python for data lovers: explore it, analyze it, map it</title><link>http://www.pyvideo.org/video/676/python-for-data-lovers-explore-it-analyze-it-m</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Exploring and analyzing data can be daunting and time-consuming, even for data
lovers. Python can make the process fun and exciting. We will present
techniques of data analysis, along with python tools that help you explore and
map data. Our talk includes examples that show how python libraries such as
csvkit, matplotlib, scipy, networkx and pysal can help you dig into and make
sense of your data.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dana Bauer,Jacqueline Kazil</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/676/python-for-data-lovers-explore-it-analyze-it-m</guid><enclosure url="https://www.youtube.com/watch?v=GxyfYEe8MiQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/GxyfYEe8MiQ/hqdefault.jpg"></media:thumbnail></item><item><title>Python for makers</title><link>http://www.pyvideo.org/video/663/python-for-makers</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Digital fabrication is the art of translating digital designs into physical
objects. Using personal machines that are controlled via software, a live
demonstration of CNC milling and 3D printing will also be performed. This talk
is a walkthrough from 3D models to machine motion, that shows how we can use
Python to write GCODE generators that create endless form.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Hugo Boyer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/663/python-for-makers</guid><enclosure url="https://www.youtube.com/watch?v=wslWYg0CTkY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/wslWYg0CTkY/hqdefault.jpg"></media:thumbnail></item><item><title>Python Meets the Arduino</title><link>http://www.pyvideo.org/video/660/python-meets-the-arduino</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Arduino is an open-source electronics prototyping platform based on flexible,
easy-to-use hardware and software. Python is our favorate programming language
that allows you to integrate systems more effectively. Learn how to use Python
to communicate with an Arduino and interact with sensors, solenoids and
motors.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Kropf</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/660/python-meets-the-arduino</guid><enclosure url="https://www.youtube.com/watch?v=54XwSUC8klI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/54XwSUC8klI/hqdefault.jpg"></media:thumbnail></item><item><title>Python Software Foundation Chairman's Address</title><link>http://www.pyvideo.org/video/658/python-software-foundation-chairmans-address</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Holden</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/658/python-software-foundation-chairmans-address</guid><enclosure url="https://www.youtube.com/watch?v=6wZoBbE-rOo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/X6807rcObkk/hqdefault.jpg"></media:thumbnail></item><item><title>RESTful APIs With Tastypie</title><link>http://www.pyvideo.org/video/673/restful-apis-with-tastypie</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Providing full-featured REST APIs is an increasingly popular request. Tastypie
allows you to easily implement a customizable REST API for your Python or
Django applications.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Lindsley</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/673/restful-apis-with-tastypie</guid><enclosure url="https://www.youtube.com/watch?v=Zv26xHYlc8s" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Zv26xHYlc8s/hqdefault.jpg"></media:thumbnail></item><item><title>Saturday Evening Lightning talks (60 minutes)</title><link>http://www.pyvideo.org/video/690/saturday-evening-lightning-talks-60-minutes</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/690/saturday-evening-lightning-talks-60-minutes</guid><enclosure url="https://www.youtube.com/watch?v=N4zdWLuSbV0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/eLuscpu4xA0/hqdefault.jpg"></media:thumbnail></item><item><title>Saturday Morning Lightning talks</title><link>http://www.pyvideo.org/video/657/saturday-morning-lightning-talks</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/657/saturday-morning-lightning-talks</guid><enclosure url="https://www.youtube.com/watch?v=H841U6RhrDU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/H841U6RhrDU/hqdefault.jpg"></media:thumbnail></item><item><title>Sharing is Caring: Posting to the Python Package Index</title><link>http://www.pyvideo.org/video/678/sharing-is-caring-posting-to-the-python-package</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Due to its robust namespacing, Python uniquely equips developers to write and
distribute reusable code. The Python community has a tool for this: the Python
Package Index. PyPI is a massive repository of code, and in this talk you'll
learn how to take code that you've written it and register and distribute it
for use by others.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/678/sharing-is-caring-posting-to-the-python-package</guid><enclosure url="https://www.youtube.com/watch?v=bwwf_HbEJQM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/bwwf_HbEJQM/hqdefault.jpg"></media:thumbnail></item><item><title>Spatial data and web mapping with Python</title><link>http://www.pyvideo.org/video/680/spatial-data-and-web-mapping-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Spatial data are often seen as opaque to most developers, and while dealing
with them does require a shift in approach from the data types we most
regularly handle, they needn’t be the domain of specialists. High-quality
Python libraries and Python-based applications exist for operating on and
transforming spatial data, and for creating visualizations, including maps for
presentation on the web.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Smith</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/680/spatial-data-and-web-mapping-with-python</guid><enclosure url="https://www.youtube.com/watch?v=qmgh14LUOjQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/qmgh14LUOjQ/hqdefault.jpg"></media:thumbnail></item><item><title>Storing, manipulating and visualizing timeseries using open source packages in Python</title><link>http://www.pyvideo.org/video/947/storing-manipulating-and-visualizing-timeseries</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Analyzing, storing and visualizing time-series efficiently are recurring
though difficult tasks in various aspects of scientific data analysis such as
meteorological forecasting, financial modeling, ... In this talk we will
explore the current Python ecosystem for doing this effectively, comparing
options, using only open source packages that are mature yet still under
active development.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Rocher</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/947/storing-manipulating-and-visualizing-timeseries</guid><enclosure url="https://www.youtube.com/watch?v=qTwvObrRGdY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/qTwvObrRGdY/hqdefault.jpg"></media:thumbnail></item><item><title>Storm: the Hadoop of Realtime Stream Processing</title><link>http://www.pyvideo.org/video/675/storm-the-hadoop-of-realtime-stream-processing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Twitter's new scalable, fault-tolerant, and simple(ish) stream programming
system... with Python!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gabriel Grant</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/675/storm-the-hadoop-of-realtime-stream-processing</guid><enclosure url="https://www.youtube.com/watch?v=Ycvg0PCQ-sM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Ycvg0PCQ-sM/hqdefault.jpg"></media:thumbnail></item><item><title>Testing and Django</title><link>http://www.pyvideo.org/video/699/testing-and-django</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A deep dive into writing tests with Django, covering Django's custom test-
suite-runner and the testing utilities in Django, what all they actually do,
how you should and shouldn't use them (and some you shouldn't use at all!).
Also, guidelines for writing good tests (with or without Django), and my least
favorite things about testing in Django (and how I'd like to fix them).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carl Meyer</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/699/testing-and-django</guid><enclosure url="https://www.youtube.com/watch?v=ickNQcNXiS4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ickNQcNXiS4/hqdefault.jpg"></media:thumbnail></item><item><title>The Email Package: Past, Present, and Future</title><link>http://www.pyvideo.org/video/684/the-email-package-past-present-and-future</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The email package in the Python Standard library has had a somewhat rocky
transition into the Python3 era, and still doesn't handle non-ASCII easily.
That is about to change. This talk will compare how things worked in Python2
(the past), how things work now (in Python3.2), and how things will work much
better in the future (hopefully Python3.3).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">R. David Murray</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/684/the-email-package-past-present-and-future</guid><enclosure url="https://www.youtube.com/watch?v=C9K8DOe1zWw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/C9K8DOe1zWw/hqdefault.jpg"></media:thumbnail></item><item><title>The Journey to Give Every Scientist a Supercomputer</title><link>http://www.pyvideo.org/video/945/the-journey-to-give-every-scientist-a-supercomput</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The recent cloud buzz has hugely benefited Python web devs. But, for Python's
formidable scientific community, the cloud has been less ambitious--until now.
PiCloud is a Python-based cloud platform that tackles a noble cause: giving
every scientist in the world instant access to a supercomputer. The talk will
cover how Python inspired the design of PiCloud, which has now processed over
100M jobs.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ken Elkabany</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/945/the-journey-to-give-every-scientist-a-supercomput</guid><enclosure url="https://www.youtube.com/watch?v=47NSfuuuMfs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/47NSfuuuMfs/hqdefault.jpg"></media:thumbnail></item><item><title>The Pyed Piper: A Modern Python Alternative to awk, sed and Other Unix Text Manipulation Utilities </title><link>http://www.pyvideo.org/video/686/the-pyed-piper-a-modern-python-alternative-to-aw</link><description>&lt;p&gt;Abstract&lt;/p&gt;
"The Pyed Piper", or pyp, is a linux command line text manipulation tool
similar to awk or sed, but which uses standard python string and list methods
as well as custom functions evolved to generate fast results in an intense
production environment.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Toby Rosen</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/686/the-pyed-piper-a-modern-python-alternative-to-aw</guid><enclosure url="https://www.youtube.com/watch?v=3UHE-zD1r_M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/3UHE-zD1r_M/hqdefault.jpg"></media:thumbnail></item><item><title>Using fabric to standardize the development process</title><link>http://www.pyvideo.org/video/677/using-fabric-to-standardize-the-development-proce</link><description>&lt;p&gt;Abstract&lt;/p&gt;
By ensuring consistency and repeatability in setting up the development
environments of a team of developers, errors can be avoided (by automating
repetitive tasks). It also helps by lowering the entry barrier for new
developers, and letting existing developers focus on development tasks without
having to worry about infrastructure or process issues.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ricardo Kirkner</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/677/using-fabric-to-standardize-the-development-proce</guid><enclosure url="https://www.youtube.com/watch?v=bTXert2uRco" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/bTXert2uRco/hqdefault.jpg"></media:thumbnail></item><item><title>Web Server Bottlenecks And Performance Tuning</title><link>http://www.pyvideo.org/video/703/web-server-bottlenecks-and-performance-tuning</link><description>&lt;p&gt;Abstract&lt;/p&gt;
New Python web developers seem to love running benchmarks on WSGI servers.
Reality is that they often have no idea what they are doing or what to look
at. This talk will look at a range of factors which can influence the
performance of your Python web application. This includes the impact of using
threads vs processes, number of processors, memory available, the GIL and slow
HTTP clients.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Graham Dumpleton</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/703/web-server-bottlenecks-and-performance-tuning</guid><enclosure url="https://www.youtube.com/watch?v=Bt2HStzaBzE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Bt2HStzaBzE/hqdefault.jpg"></media:thumbnail></item><item><title>What Python can learn from Java</title><link>http://www.pyvideo.org/video/685/what-python-can-learn-from-java</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Java is in some ways a bogeyman to the Python community -- the language that
parents scare their children with, the Cobol of the 21st century. But if we
look past the cesspool of JEE it turns out that Java has quietly become an
excellent systems environment, one that is still in many ways ahead of its
time.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonathan Ellis</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/685/what-python-can-learn-from-java</guid><enclosure url="https://www.youtube.com/watch?v=z1RQMm37Xmw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/z1RQMm37Xmw/hqdefault.jpg"></media:thumbnail></item><item><title>What you need to know about datetimes</title><link>http://www.pyvideo.org/video/946/what-you-need-to-know-about-datetimes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
`time`, `datetime`, and `calendar` from the standard library are a bit messy.
Find out what to use where and how (particularly when you have users in many
timezones), and what extra modules you might want to look into.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/946/what-you-need-to-know-about-datetimes</guid><enclosure url="https://www.youtube.com/watch?v=LnVkLXRIbIg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/LnVkLXRIbIg/hqdefault.jpg"></media:thumbnail></item><item><title>Why PyPy by example</title><link>http://www.pyvideo.org/video/661/why-pypy-by-example</link><description>&lt;p&gt;Abstract&lt;/p&gt;
One of the goals of PyPy is to make existing Python code faster, however an
even broader goal was to make it possible to write things in Python that
previous would needed to be written in C or other low-level language. This
talk will show examples of this, and describe how they represent the
tremendous progress PyPy has made, and what it means for people looking to use
PyPy.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor,Armin Rigo,Maciej Fijalkowski</dc:creator><pubDate>Sat, 10 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/661/why-pypy-by-example</guid><enclosure url="https://www.youtube.com/watch?v=P5ad6NpjR3M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/P5ad6NpjR3M/hqdefault.jpg"></media:thumbnail></item><item><title>Advanced Security Topics</title><link>http://www.pyvideo.org/video/638/advanced-security-topics</link><description>&lt;p&gt;Abstract&lt;/p&gt;
If your Python application has users, you should be worried about security.
This talk will cover advanced material, highlighting common mistakes. Topics
will include hashing and salts, timing attacks, serialization, and much more.
Expect eye opening demos, and an urge to go fix your code right away.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul McMillan</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/638/advanced-security-topics</guid><enclosure url="https://www.youtube.com/watch?v=JOXwclgvXB0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/JOXwclgvXB0/hqdefault.jpg"></media:thumbnail></item><item><title>A Noob Speaks to Noobs: Your First Site in the Cloud</title><link>http://www.pyvideo.org/video/628/a-noob-speaks-to-noobs-your-first-site-in-the-cl</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A developer talks about her lessons learned with setting up her first server,
and offers advice to others about to tread that path.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/628/a-noob-speaks-to-noobs-your-first-site-in-the-cl</guid><enclosure url="https://www.youtube.com/watch?v=hyzPYaAmVOc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/hyzPYaAmVOc/hqdefault.jpg"></media:thumbnail></item><item><title>Apache Cassandra and Python</title><link>http://www.pyvideo.org/video/643/apache-cassandra-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Using Apache Cassandra from Python is easy to do. This talk will cover setting
up and using a local development instance of Cassandra from Python. It will
cover using the low level thrift interface, as well as using the higher level
pycassa library.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Jordan</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/643/apache-cassandra-and-python</guid><enclosure url="https://www.youtube.com/watch?v=188mXjwdkak" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/188mXjwdkak/hqdefault.jpg"></media:thumbnail></item><item><title>A resume-based WSGI Load Balancer</title><link>http://www.pyvideo.org/video/654/a-resume-based-wsgi-load-balancer</link><description>&lt;p&gt;Abstract&lt;/p&gt;
When a web application is large, it's a good idea to send different kinds of
requests to different servers to reduce the content corpus managed by each
server. A decentralized load balancing-based approach is presented in which
each application server keeps track of what it's good at and presents its
resume to load balancers, which use application server resumes to distribute
load.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">JIm Fulton</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/654/a-resume-based-wsgi-load-balancer</guid><enclosure url="https://www.youtube.com/watch?v=tYW52SLy_w0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/tYW52SLy_w0/hqdefault.jpg"></media:thumbnail></item><item><title>Build reliable, traceable, distributed systems with ZeroMQ</title><link>http://www.pyvideo.org/video/639/build-reliable-traceable-distributed-systems-wi</link><description>&lt;p&gt;Abstract&lt;/p&gt;
We will show how to build simple yet powerful RPC code with ZeroMQ, with very
few (if any!) modification to existing code. We will build fan-in and fan-out
topologies with ZeroMQ special socket types to implement PUB/SUB patterns and
scale up job-processing tasks. Thanks to introspection, the resulting services
will be self-documented. Finally, we will show how to implement distributed
tracing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jérôme Petazzoni</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/639/build-reliable-traceable-distributed-systems-wi</guid><enclosure url="https://www.youtube.com/watch?v=9G6-GksU7Ko" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/9G6-GksU7Ko/hqdefault.jpg"></media:thumbnail></item><item><title>Certainty in an Uncertain World: Gaining Confidence through Security Testing</title><link>http://www.pyvideo.org/video/653/certainty-in-an-uncertain-world-gaining-confiden</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Nobody thinks you have to be a performance expert to write performance tests-
why assume that you have to be a security expert to write security tests?
During this presentation I'll show you how to use fuzzers, attack tools, and
other simple techniques to help protect your users, improve the strength of
your existing tests, and gain confidence in the security of your code. There
will be demos!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geremy Condra</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/653/certainty-in-an-uncertain-world-gaining-confiden</guid><enclosure url="https://www.youtube.com/watch?v=TmuEDxX1FDQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/TmuEDxX1FDQ/hqdefault.jpg"></media:thumbnail></item><item><title>Code Generation in Python: Dismantling Jinja</title><link>http://www.pyvideo.org/video/641/code-generation-in-python-dismantling-jinja</link><description>&lt;p&gt;Abstract&lt;/p&gt;
For many DSLs such as templating languages it's important to use code
generation to achieve acceptable performance in Python. The current version of
Jinja went through many different iterations to end up where it is currently.
This talk walks through the design of Jinja2's compiler infrastructure and why
it works the way it works and how one can use newer Python features for better
results.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Armin Ronacher</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/641/code-generation-in-python-dismantling-jinja</guid><enclosure url="https://www.youtube.com/watch?v=jXlR0Icvvh8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/jXlR0Icvvh8/hqdefault.jpg"></media:thumbnail></item><item><title>Data, Design, Meaning</title><link>http://www.pyvideo.org/video/637/data-design-meaning</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The ultimate goal of data visualization is to tell a story and supply meaning.
There are tools and science that can inform your choice of data to present and
how best to present it. We reflexively evaluate data and fit it into a
narrative which aids decisionmaking; learn how to take advantage of this
tendency in order to deliver meaning, not just numbers and charts.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Idan Gazit</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/637/data-design-meaning</guid><enclosure url="https://www.youtube.com/watch?v=vfYul2E56fo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/vfYul2E56fo/hqdefault.jpg"></media:thumbnail></item><item><title>Decorators and Context Managers</title><link>http://www.pyvideo.org/video/883/decorators-and-context-managers</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Learn how decorators and context managers work, see several popular examples,
and get a brief intro to writing your own. Decorators wrap your functions to
easily add more functionality. Context managers use the 'with' statement to
make indented blocks magical. Both are very powerful parts of the python
language; come learn how to use them in your code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Brondsema</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/883/decorators-and-context-managers</guid><enclosure url="https://www.youtube.com/watch?v=cSbD5SKwak0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/cSbD5SKwak0/hqdefault.jpg"></media:thumbnail></item><item><title>Extracting musical information from sound</title><link>http://www.pyvideo.org/video/878/extracting-musical-information-from-sound</link><description>&lt;p&gt;Abstract&lt;/p&gt;
[audio missing from first 3 min] Music Information Retrieval technology has
gotten good enough that you extract musical metadata from your sound files
with some degree of accuracy. Find out how to use Python (along with third-
party APIs) to determine everything from the key/tempo of a song to the
pitch/timbre of individual notes. Then we'll do some amusing analysis of
popular tunes.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Holovaty</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/878/extracting-musical-information-from-sound</guid><enclosure url="https://www.youtube.com/watch?v=bGWytn-Ff9E" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/bGWytn-Ff9E/hqdefault.jpg"></media:thumbnail></item><item><title>Fake It Til You Make It: Unit Testing Patterns With Mocks and Fakes</title><link>http://www.pyvideo.org/video/646/fake-it-til-you-make-it-unit-testing-patterns-wi</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this talk, aimed at intermediate Pythonistas, we'll have a look at some
common, simple patterns in code, and the testing patterns that go with them.
We'll also discover what makes some code more testable than others, and how
mocks and fakes can help isolate the code to be tested (and why you want to do
that). Finally, we'll touch on some tools to help make writing and running
tests easier.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian K. Jones</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/646/fake-it-til-you-make-it-unit-testing-patterns-wi</guid><enclosure url="https://www.youtube.com/watch?v=hvPYuqzTPIk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/hvPYuqzTPIk/hqdefault.jpg"></media:thumbnail></item><item><title>Fast Test, Slow Test</title><link>http://www.pyvideo.org/video/631/fast-test-slow-test</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Most unit tests aren't and their authors suffer for it. What is a unit test,
really? How can writing them prevent classic testing problems? If you do write
them, what trade-offs are you implicitly making?

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Gary Bernhardt</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/631/fast-test-slow-test</guid><enclosure url="https://www.youtube.com/watch?v=RAxiiRPHS9k" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/RAxiiRPHS9k/hqdefault.jpg"></media:thumbnail></item><item><title>Graph Processing in Python</title><link>http://www.pyvideo.org/video/627/graph-processing-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Graphs are everywhere - from your distributed source code control to Twitter
analytics. This session presents a set of three problems and shows how they
can be decomposed into operations on graphs, and then demonstrates solutions
using the various graph libraries available for (or accessible to) Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Van Lindberg</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/627/graph-processing-in-python</guid><enclosure url="https://www.youtube.com/watch?v=Mv3xgBQJPaE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Mv3xgBQJPaE/hqdefault.jpg"></media:thumbnail></item><item><title>How to make your websites more accessible</title><link>http://www.pyvideo.org/video/633/how-to-make-your-websites-more-accessible</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Is your website accessible? Have you tested it? What does it even mean for a
website to be accessible? In this talk we'll show some of the most common
problems disabled users have and demonstrate how to fix them. I'll also
introduce you to some tools that are written in Python to help you determine
how accessible your site is.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robbie Clemons</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/633/how-to-make-your-websites-more-accessible</guid><enclosure url="https://www.youtube.com/watch?v=jOu0D9ttCFI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/jOu0D9ttCFI/hqdefault.jpg"></media:thumbnail></item><item><title>Interfaces and Python</title><link>http://www.pyvideo.org/video/882/interfaces-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In 2.6, Python introduced the Abstract Base Classes. Before that we had
"protocols" (and we still do). In this talk we'll look at how the general
concept of interfaces fits into today's Python. We'll also look at some of the
alternate proposals of the past, some of the controversies around ABCs, and
the direction interfaces might go in the future.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Snow</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/882/interfaces-and-python</guid><enclosure url="https://www.youtube.com/watch?v=4-TwdBuTR1A" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/4-TwdBuTR1A/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction and Welcome</title><link>http://www.pyvideo.org/video/624/introduction-and-welcome</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jesse Noller</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/624/introduction-and-welcome</guid><enclosure url="https://www.youtube.com/watch?v=yflKOoAohEk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/yflKOoAohEk/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to Metaclasses</title><link>http://www.pyvideo.org/video/877/introduction-to-metaclasses</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python's metaclasses grant the Python OOP ecosystem all the power of more
complex object inheritance systems in other languages, while retaining for
most uses the simplicity of the straightforward class structures most
developers learn when being introduced to object-oriented programming. This
talk is an explanation of metaclasses: first, what they are, and second, how
to use them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Sneeringer</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/877/introduction-to-metaclasses</guid><enclosure url="https://www.youtube.com/watch?v=ANhTacigaf8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ANhTacigaf8/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to PDB</title><link>http://www.pyvideo.org/video/644/introduction-to-pdb</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PDB is an interactive debugging environment for Python programs. It allows you
to pause your program, look at the values of variables, and watch program
execution step-by-step, so you can understand what your program is actually
doing, as opposed to what you think it's doing. This talk will show novice and
intermediate Python users how to use PDB to troubleshoot existing code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris McDonough</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/644/introduction-to-pdb</guid><enclosure url="https://www.youtube.com/watch?v=vfPtGsSJldg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/vfPtGsSJldg/hqdefault.jpg"></media:thumbnail></item><item><title>Introspecting Running Python Processes</title><link>http://www.pyvideo.org/video/656/introspecting-running-python-processes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Understanding the internal state of a running system can be vital to
maintaining a high performance, stable system, but conventional approaches
such as logging and error handling only expose so much. This talk will touch
on how to instrument Python programs in order to observe the state of the
system, measure performance, and identify ongoing problems.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Lowry</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/656/introspecting-running-python-processes</guid><enclosure url="https://www.youtube.com/watch?v=YdnBK5yO4zU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/YdnBK5yO4zU/hqdefault.jpg"></media:thumbnail></item><item><title>IPython: Python at your fingertips</title><link>http://www.pyvideo.org/video/640/ipython-python-at-your-fingertips</link><description>&lt;p&gt;Abstract&lt;/p&gt;
IPython is widely used in the scientific community, but its various tools can
be used in any context. IPython gets you as close as possible to the Python
language, with an array of tools for productive work: at the terminal, in
GUIs, through a web browser, and in high-level parallel computing. This talk
will explain the design of IPython and provide short, hands-on demos of its
main features.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian E. Granger,Fernando Pérez,Min Ragan-Kelley,Thomas Kluyver</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/640/ipython-python-at-your-fingertips</guid><enclosure url="https://www.youtube.com/watch?v=26wgEsg9Mcc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/26wgEsg9Mcc/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote: Paul Graham, YCombinator</title><link>http://www.pyvideo.org/video/626/keynote-paul-graham-ycombinator</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Graham</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/626/keynote-paul-graham-ycombinator</guid><enclosure url="https://www.youtube.com/watch?v=R9ITLdmfdLI" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/R9ITLdmfdLI/hqdefault.jpg"></media:thumbnail></item><item><title>Keynote: Stormy Peters, Mozilla Corporation</title><link>http://www.pyvideo.org/video/625/keynote-stormy-peters-mozilla-corporation</link><description>&lt;p&gt;Abstract&lt;/p&gt;


</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stormy Peters</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/625/keynote-stormy-peters-mozilla-corporation</guid><enclosure url="https://www.youtube.com/watch?v=KUpIFhNW89A" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/KUpIFhNW89A/hqdefault.jpg"></media:thumbnail></item><item><title>Make Sure Your Programs Crash</title><link>http://www.pyvideo.org/video/647/make-sure-your-programs-crash</link><description>&lt;p&gt;Abstract&lt;/p&gt;
With Python, segmentation faults and the like simply don't happen -- programs
do not crash. However, the world is a messy, chaotic place. What happens when
your programs crash? I will talk about how to make sure that your application
survives crashes, reboots and other nasty problems.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Moshe Zadka</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/647/make-sure-your-programs-crash</guid><enclosure url="https://www.youtube.com/watch?v=OBbvj0WWT-g" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/OBbvj0WWT-g/hqdefault.jpg"></media:thumbnail></item><item><title>Non-Profit Centers of FLOSS Development</title><link>http://www.pyvideo.org/video/651/non-profit-centers-of-floss-development</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Free, Libre &amp; Open Source Software (FLOSS) began as a not-for-profit endeavor.
FLOSS licenses permit commercial &amp; non-commercial activity, but the heart of
FLOSS remains in the not-for-profit space. Kuhn will discuss advantages of
non-profit structure and how non-profits facilitate neutral territory. Kuhn
will also present options for projects that seek to operate officially as a
non-profit org.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bradley M. Kuhn</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/651/non-profit-centers-of-floss-development</guid><enclosure url="https://www.youtube.com/watch?v=9q8LTZSvpr8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/9q8LTZSvpr8/hqdefault.jpg"></media:thumbnail></item><item><title>pandas: Powerful data analysis tools for Python</title><link>http://www.pyvideo.org/video/696/pandas-powerful-data-analysis-tools-for-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
pandas is a Python library providing fast, expressive data structures for
working with structured or relational data sets. In addition to being used for
general purpose data manipulation and data analysis, it has also been designed
to enable Python to become a competitive statistical computing platform. In
this talk, I will discuss the library's features and show a variety of topical
examples.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wes McKinney</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/696/pandas-powerful-data-analysis-tools-for-python</guid><enclosure url="https://www.youtube.com/watch?v=qbYYamU42Sw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/qbYYamU42Sw/hqdefault.jpg"></media:thumbnail></item><item><title>PBS KIDS: Building a login system for kids and teens in Python</title><link>http://www.pyvideo.org/video/630/pbs-kids-building-a-login-system-for-kids-and-te</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Our challenge was to create a login system for little people who might barely
read, maybe no email, perhaps no home computer. And we had to watch out for
privacy laws - especially tough for minors. But these kids want to play games,
write stories, and create online avatars to share and compete against their
buddies. Listen to how we developed the PBS KIDS login and moderation system
in Django.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Cosimo Felline,Edgar Roman</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/630/pbs-kids-building-a-login-system-for-kids-and-te</guid><enclosure url="https://www.youtube.com/watch?v=-Mx1JVTFOBY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/-Mx1JVTFOBY/hqdefault.jpg"></media:thumbnail></item><item><title>Permission or Forgiveness?</title><link>http://www.pyvideo.org/video/650/permission-or-forgiveness</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Grace Murray Hopper's famous motto, "It's easier to ask forgiveness than
permission", has many useful applications -- in Python, in concurrency, in
networking, as well of course as in real life. However, it's not universally
valid. This talk explores both useful and damaging applications of this
principle.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Martelli</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/650/permission-or-forgiveness</guid><enclosure url="https://www.youtube.com/watch?v=AZDWveIdqjY" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/AZDWveIdqjY/hqdefault.jpg"></media:thumbnail></item><item><title>Practical Machine Learning in Python</title><link>http://www.pyvideo.org/video/636/practical-machine-learning-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
There are a plethora of options when it comes to deciding how to add a machine
learning component to your python application. In this talk, I'll discuss why
python as a language is well-suited to solving these particular problems, the
tradeoffs of different machine learning solutions for python applications, and
some tricks you can use to get the most out of whatever package you decide to
use.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matt Spitz</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/636/practical-machine-learning-in-python</guid><enclosure url="https://www.youtube.com/watch?v=__s45TTXxps" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/__s45TTXxps/hqdefault.jpg"></media:thumbnail></item><item><title>Practicing Continuous Deployment</title><link>http://www.pyvideo.org/video/655/practicing-continuous-deployment</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Practice iterative development like the pros. Release sooner, faster, and more
often.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Cramer</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/655/practicing-continuous-deployment</guid><enclosure url="https://www.youtube.com/watch?v=QGfxLXoMpPk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/QGfxLXoMpPk/hqdefault.jpg"></media:thumbnail></item><item><title>Putting Python in PostgreSQL</title><link>http://www.pyvideo.org/video/649/putting-python-in-postgresql</link><description>&lt;p&gt;Abstract&lt;/p&gt;
PostgreSQL is pretty powerful all on it's own, but did you know you can use
Python as a stored procedure language? Not only does using a familiar language
make development easier, but you get the power of the standard library and
PyPi to boot. Come learn the ins and outs of putting Python in your DB.

</description><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/649/putting-python-in-postgresql</guid><enclosure url="https://www.youtube.com/watch?v=3dMq_3UUPxg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/3dMq_3UUPxg/hqdefault.jpg"></media:thumbnail></item><item><title>pytest - rapid and simple testing with Python</title><link>http://www.pyvideo.org/video/645/pytest-rapid-and-simple-testing-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The py.test tool presents a rapid and simple way to write tests. This talks
introduces common testing terms, basic examples and unique pytest features for
writing unit- or functional tests: assertions and dependency injection
mechanisms. We also look at other features like distributing test load, new
plugins and reasons why some Redhat and Mozilla people choose pytest over
other approaches.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Krekel</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/645/pytest-rapid-and-simple-testing-with-python</guid><enclosure url="https://www.youtube.com/watch?v=9LVqBQcFmyw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/9LVqBQcFmyw/hqdefault.jpg"></media:thumbnail></item><item><title>Python Metaprogramming for Mad Scientists and Evil Geniuses</title><link>http://www.pyvideo.org/video/884/python-metaprogramming-for-mad-scientists-and-evi</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk covers the power and metaprogramming features of Python that cater
to mad scientists and evil geniuses. This will also be of interest to others
who just want to use of Python in a more power (hungry) way. The core concept
is that you can synthesize functions, classes and modules without a direct
correspondence to source code. You can also mutate third-party objects and
apps.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/884/python-metaprogramming-for-mad-scientists-and-evi</guid><enclosure url="https://www.youtube.com/watch?v=Adr_QuDZxuM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Adr_QuDZxuM/hqdefault.jpg"></media:thumbnail></item><item><title>Sage: Open Source Math in Python</title><link>http://www.pyvideo.org/video/652/sage-open-source-math-in-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A quick introduction to Sage, an open-source mathematics package for
experimentation in all areas of mathematics. There will be some brief remarks
and demos of what Sage is capable of.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Swenson</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/652/sage-open-source-math-in-python</guid><enclosure url="https://www.youtube.com/watch?v=YyEReiAYGlU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/YyEReiAYGlU/hqdefault.jpg"></media:thumbnail></item><item><title>Scalability at YouTube</title><link>http://www.pyvideo.org/video/632/scalability-at-youtube</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This talk covers scalability at YouTube. It's given by one of the original
engineers at YouTube, Mike Solomon. It's a rare glimpse into the heart of
YouTube which is one of the largest websites in the world, and one of the few
extremely large websites to be written in Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Solomon,Shannon -jj Behrens</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/632/scalability-at-youtube</guid><enclosure url="https://www.youtube.com/watch?v=G-lGCC4KKok" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/G-lGCC4KKok/hqdefault.jpg"></media:thumbnail></item><item><title>Speedily Practical Large-Scale Tests</title><link>http://www.pyvideo.org/video/634/speedily-practical-large-scale-tests</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Mozilla's projects have thousands of tests, so we've had to venture beyond
vanilla test runners to keep things manageable. Our secret sauce can be used
with your project as well. Reach beyond the test facilities that came with
your project, harnessing pluggable test frameworks, dynamically reordering
tests for speed, exploring various mocking libraries, and profiling your way
to testing nirvana.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Erik Rose</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/634/speedily-practical-large-scale-tests</guid><enclosure url="https://www.youtube.com/watch?v=1VZfL9JVgFg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/1VZfL9JVgFg/hqdefault.jpg"></media:thumbnail></item><item><title>Static analysis of Python extension modules using GCC</title><link>http://www.pyvideo.org/video/648/static-analysis-of-python-extension-modules-using</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Want to analyse C/C++ code using Python? I've written a plugin for GCC that
embeds Python inside the compiler, allowing you to write new C/C++ compilation
passes in Python. I've used this to build a static analysis tool that
understands the CPython extension API, and can automatically detect reference-
counting bugs, and other errors.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dave Malcolm</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/648/static-analysis-of-python-extension-modules-using</guid><enclosure url="https://www.youtube.com/watch?v=n6145JSeqWc" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/n6145JSeqWc/hqdefault.jpg"></media:thumbnail></item><item><title>Stepping Through CPython</title><link>http://www.pyvideo.org/video/635/stepping-through-cpython</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Ever wondered how CPython actually works internally? This talk will show you.
We start with a simple Python program, then slowly step through CPython,
showing in exhaustive detail what happens when it runs that program. Along the
way we'll examine the design and implementation of various major CPython
subsystems and see how they fit together. The audience should be conversant in
C and Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Larry Hastings</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/635/stepping-through-cpython</guid><enclosure url="https://www.youtube.com/watch?v=XGF3Qu4dUqk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/XGF3Qu4dUqk/hqdefault.jpg"></media:thumbnail></item><item><title>Stop Mocking, Start Testing</title><link>http://www.pyvideo.org/video/629/stop-mocking-start-testing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Project Hosting at Google Code is a large, well-established system written
mostly in Python. We'll share our battle-born convictions about creating tests
for test-unfriendly code and the larger topic of testing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Augie Fackler,Nathaniel Manista</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/629/stop-mocking-start-testing</guid><enclosure url="https://www.youtube.com/watch?v=Xu5EhKVZdV8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Xu5EhKVZdV8/hqdefault.jpg"></media:thumbnail></item><item><title>Stop Writing Classes</title><link>http://www.pyvideo.org/video/880/stop-writing-classes</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Classes are great but they are also overused. This talk will describe examples
of class overuse taken from real world code and refactor the unnecessary
classes, exceptions, and modules out of them.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jack Diederich</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/880/stop-writing-classes</guid><enclosure url="https://www.youtube.com/watch?v=o9pEzgHorH0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/o9pEzgHorH0/hqdefault.jpg"></media:thumbnail></item><item><title>The Art of Subclassing</title><link>http://www.pyvideo.org/video/879/the-art-of-subclassing</link><description>&lt;p&gt;Abstract&lt;/p&gt;
All problems have simple, easy-to-understand, logical wrong answers.
Subclassing in Python is no exception. Avoid the common pitfalls and learn
everything you need to know about making effective use of inheritance in
Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Raymond Hettinger</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/879/the-art-of-subclassing</guid><enclosure url="https://www.youtube.com/watch?v=miGolgp9xq8" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/miGolgp9xq8/hqdefault.jpg"></media:thumbnail></item><item><title>Through The Ether And Back Again: What Happens To A Packet When You Send It</title><link>http://www.pyvideo.org/video/885/through-the-ether-and-back-again-what-happens-to</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Many - perhaps even most - Python software involves a network, at least a
little bit. You've probably written some yourself. But do you really know what
happens - to your kernel, to your ethernet card, to Python - when you call
socket.send()? Come to this talk and find out: if you dare.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Glyph Lefkowitz</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/885/through-the-ether-and-back-again-what-happens-to</guid><enclosure url="https://www.youtube.com/watch?v=Xk6gQ6s2QjU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Xk6gQ6s2QjU/hqdefault.jpg"></media:thumbnail></item><item><title>Throwing Together Distributed Services With Gevent</title><link>http://www.pyvideo.org/video/642/throwing-together-distributed-services-with-geven</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this talk we learn how to throw together a distributed system using gevent
and a simple framework called gservice. We'll go from nothing to a distributed
messaging system ready for production deployment based on experiences building
scalable, distributed systems at Twilio.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Lindsay</dc:creator><pubDate>Fri, 09 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/642/throwing-together-distributed-services-with-geven</guid><enclosure url="https://www.youtube.com/watch?v=tYk4_Nzl-Gg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/tYk4_Nzl-Gg/hqdefault.jpg"></media:thumbnail></item><item><title>DevOps for Python: Doing More With Less</title><link>http://www.pyvideo.org/video/621/devops-for-python-doing-more-with-less</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The world of infrastructure as code is becoming far more pervasive and many
Python developers are trying to find a way to get started. This class will get
you up and running with Chef and Fabric to manage your systems be they in the
cloud or under your desk.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Noah Kantrowitz</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/621/devops-for-python-doing-more-with-less</guid><enclosure url="https://www.youtube.com/watch?v=sdkAXM36C7M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/sdkAXM36C7M/hqdefault.jpg"></media:thumbnail></item><item><title>Documenting Your Project With Sphinx</title><link>http://www.pyvideo.org/video/616/documenting-your-project-with-sphinx</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Python projects can succeed or fail because of their documentation. Thanks to
Sphinx, Python now has a “documentation framework” with indexing, syntax
highlighting, and integration with your code. Students will be given a small
undocumented Python package, and during the exercises they will give the
package a tutorial and reference manual. Plus: deployment and theming!

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/616/documenting-your-project-with-sphinx</guid><enclosure url="https://www.youtube.com/watch?v=L-fXOoxrt0M" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/L-fXOoxrt0M/hqdefault.jpg"></media:thumbnail></item><item><title>High Performance Python I</title><link>http://www.pyvideo.org/video/614/high-performance-python-i</link><description>&lt;p&gt;Abstract&lt;/p&gt;
At EuroPython 2011 I ran a very hands-on tutorial for High Performance Python
techniques. This updated tutorial will cover profiling, PyPy, Cython, numpy,
NumExpr, ShedSkin, multiprocessing, ParallelPython and pyCUDA. Here's a 55
page PDF write-up of the EuroPython material: http://ianozsvald.com/2011/07/25
/high-performance-python-tutorial-v0-2-from-europython-2011/

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Ozsvald</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/614/high-performance-python-i</guid><enclosure url="https://www.youtube.com/watch?v=Iw9-GckD-gQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Iw9-GckD-gQ/hqdefault.jpg"></media:thumbnail></item><item><title>High Performance Python II</title><link>http://www.pyvideo.org/video/620/high-performance-python-ii</link><description>&lt;p&gt;Abstract&lt;/p&gt;
In this tutorial, I will cover how to write very fast Python code for data
analysis. I will briefly introduce NumPy and illustrate how fast code for
Python is written in SciPy using tools like Fwrap / F2py and Cython. I will
also describe interesting new approaches to creating fast code that is leading
changes to NumPy on a fundamental level.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Travis Oliphant</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/620/high-performance-python-ii</guid><enclosure url="https://www.youtube.com/watch?v=xHqlzuPq_qQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/xHqlzuPq_qQ/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to Game Development</title><link>http://www.pyvideo.org/video/615/introduction-to-game-development</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial will walk the attendees from some introductory game development
theory (what makes a good game) and through development of a simple game (how
to make a good game) with time left over for some experimentation and
exploration of different types of games.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katie Cunningham,Richard Jones</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/615/introduction-to-game-development</guid><enclosure url="https://www.youtube.com/watch?v=duc3jYgAaR0" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/duc3jYgAaR0/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to Interactive Predictive Analytics in Python with scikit-learn</title><link>http://www.pyvideo.org/video/622/introduction-to-interactive-predictive-analytics</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The goal of this tutorial is to give the attendee a first experience of
machine learning tools applied to practical software engineering tasks such as
language detection of tweets, topic classification of web pages, sentiment
analysis of customer products reviews and facial recognition in pictures from
the web or from your own webcam.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Olivier Grisel</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/622/introduction-to-interactive-predictive-analytics</guid><enclosure url="https://www.youtube.com/watch?v=Zd5dfooZWG4" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Zd5dfooZWG4/hqdefault.jpg"></media:thumbnail></item><item><title>Making interactive maps for the web</title><link>http://www.pyvideo.org/video/623/making-interactive-maps-for-the-web</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial teaches students how to create beautiful, interactive maps for
the web. When asked to display geodata, most developers decide to put some big
red markers on an embeddable Google Map and call it a day. If you're
interested in creating maps that are more beautiful, more interactive, and
more usable, this tutorial is for you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zain Memon</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/623/making-interactive-maps-for-the-web</guid><enclosure url="https://www.youtube.com/watch?v=g0CankXpFZg" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/g0CankXpFZg/hqdefault.jpg"></media:thumbnail></item><item><title>Optimize Performance and Scalability with Parallelism and Concurrency</title><link>http://www.pyvideo.org/video/618/optimize-performance-and-scalability-with-paralle</link><description>&lt;p&gt;Abstract&lt;/p&gt;
From how the operating system handles your requests through design principles
on how to use concurrency and parallelism to optimize your program's
performance and scalability. We will cover processes, threads, generators,
coroutines, non-blocking IO, and the gevent library.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bob Hancock</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/618/optimize-performance-and-scalability-with-paralle</guid><enclosure url="https://www.youtube.com/watch?v=ULdDuwf48kM" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/ULdDuwf48kM/hqdefault.jpg"></media:thumbnail></item><item><title>Plotting with matplotlib</title><link>http://www.pyvideo.org/video/617/plotting-with-matplotlib</link><description>&lt;p&gt;Abstract&lt;/p&gt;
When it comes to plotting with Python many people think about matplotlib. It
is widely used and provides a simple interface for creating a wide variety of
plots from very simple diagrams to sophisticated animations. This tutorial is
a hands-on introduction that teaches the basics of matplotlib. Students will
learn how to create publication-ready plots with just a few lines of Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/617/plotting-with-matplotlib</guid><enclosure url="https://www.youtube.com/watch?v=P7SVi0YTIuE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/P7SVi0YTIuE/hqdefault.jpg"></media:thumbnail></item><item><title>Python Epiphanies</title><link>http://www.pyvideo.org/video/613/python-epiphanies</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial is for software developers who've been using Python with success
for a while but are looking for a deeper understanding of the language. It
demystifies a number of language features that are often misunderstood.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Williams</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/613/python-epiphanies</guid><enclosure url="https://www.youtube.com/watch?v=Pi9NpxAvYSs" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Pi9NpxAvYSs/hqdefault.jpg"></media:thumbnail></item><item><title>Social Network Analysis with Python</title><link>http://www.pyvideo.org/video/619/social-network-analysis-with-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Social Network data permeates our world -- yet we often don't know what to do
with it. In this tutorial, I will introduce both theory and practice of Social
Network Analysis -- gathering, analyzing and visualizing data using Python and
other open-source tools. I will walk the attendees through an entire project,
from gathering and cleaning data to presenting results.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Maksim Tsvetovat</dc:creator><pubDate>Thu, 08 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/619/social-network-analysis-with-python</guid><enclosure url="https://www.youtube.com/watch?v=qgGqaBAEy3Q" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/qgGqaBAEy3Q/hqdefault.jpg"></media:thumbnail></item><item><title>Bayesian statistics made (as) simple (as possible)</title><link>http://www.pyvideo.org/video/608/bayesian-statistics-made-as-simple-as-possible</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial is an introduction to Bayesian statistics using Python. My goal
is to help participants understand the concepts and solve real problems. We
will use material from my book, Think Stats: Probability and Statistics for
Programmers (O’Reilly Media).

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Allen Downey</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/608/bayesian-statistics-made-as-simple-as-possible</guid><enclosure url="https://www.youtube.com/watch?v=bobeo5kFz1g" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/bobeo5kFz1g/hqdefault.jpg"></media:thumbnail></item><item><title>Data analysis in Python with pandas </title><link>http://www.pyvideo.org/video/611/data-analysis-in-python-with-pandas</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The tutorial will give a hands-on introduction to manipulating and analyzing
large and small structured data sets in Python using the pandas library. While
the focus will be on learning the nuts and bolts of the library's features, I
also aim to demonstrate a different way of thinking regarding structuring data
in memory for manipulation and analysis.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wes McKinney</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/611/data-analysis-in-python-with-pandas</guid><enclosure url="https://www.youtube.com/watch?v=w26x-z-BdWQ" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/w26x-z-BdWQ/hqdefault.jpg"></media:thumbnail></item><item><title>Django in Depth</title><link>http://www.pyvideo.org/video/610/django-in-depth</link><description>&lt;p&gt;Abstract&lt;/p&gt;
A tutorial that goes beyond all other Django tutorials; we'll dive deep into
the guts of the framework, and learn how each commonly-used component -- ORM,
templates, HTTP handling, views and the admin -- work from the bottom up,
covering both public and internal APIs in excruciating detail.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bennett</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/610/django-in-depth</guid><enclosure url="https://www.youtube.com/watch?v=t_ziKY1ayCo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/t_ziKY1ayCo/hqdefault.jpg"></media:thumbnail></item><item><title>Faster Python Programs through Optimization</title><link>http://www.pyvideo.org/video/607/faster-python-programs-through-optimization</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This tutorial provides an overview of techniques to improve the performance of
Python programs. The focus is on concepts such as profiling, difference of
data structures and algorithms as well as a selection of tools and libraries
that help to speed up Python.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mike Müller</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/607/faster-python-programs-through-optimization</guid><enclosure url="https://www.youtube.com/watch?v=Bs6-sai1fKE" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Bs6-sai1fKE/hqdefault.jpg"></media:thumbnail></item><item><title>How to get the most out of your PyPy</title><link>http://www.pyvideo.org/video/612/how-to-get-the-most-out-of-your-pypy</link><description>&lt;p&gt;Abstract&lt;/p&gt;
For many applications PyPy can provide performance benefits right out of the
box. However, little details can push your application to perform much better.
In this tutorial we'll give you insights on how to push pypy to it's limites.
We'll focus on understanding the performance characteristics of PyPy, and
learning the analysis tools in order to maximize your applications
performance.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Gaynor,Armin Rigo,Maciej Fijalkowski</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/612/how-to-get-the-most-out-of-your-pypy</guid><enclosure url="https://www.youtube.com/watch?v=oZw8m_lyhvo" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/oZw8m_lyhvo/hqdefault.jpg"></media:thumbnail></item><item><title>Introduction to Django</title><link>http://www.pyvideo.org/video/604/introduction-to-django</link><description>&lt;p&gt;Abstract&lt;/p&gt;
The Django framework is a fast, flexible, easy to learn, and easy to use
framework for designing and deploying web sites and services using Python. In
this session, we'll cover the fundamentals of development with Django,
generate a Django data model, and put together a simple web site using the
framework.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chander Ganesan</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/604/introduction-to-django</guid><enclosure url="https://www.youtube.com/watch?v=hp5ymCrD9yw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/hp5ymCrD9yw/hqdefault.jpg"></media:thumbnail></item><item><title>IPython in-depth: high-productivity interactive and parallel python</title><link>http://www.pyvideo.org/video/605/ipython-in-depth-high-productivity-interactive-a</link><description>&lt;p&gt;Abstract&lt;/p&gt;
IPython provides tools for interactive and parallel computing that are widely
used in scientific computing, but can benefit any Python developer. We will
show how to use IPython in different ways, as: an interactive shell, an
embedded shell, a graphical console, a network-aware VM in GUIs, a web-based
notebook with code, graphics and rich HTML, and a high-level framework for
parallel computing.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian E. Granger,Fernando Pérez,Min Ragan-Kelley</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/605/ipython-in-depth-high-productivity-interactive-a</guid><enclosure url="https://www.youtube.com/watch?v=2G5YTlheCbw" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/2G5YTlheCbw/hqdefault.jpg"></media:thumbnail></item><item><title>MongoDB and Python</title><link>http://www.pyvideo.org/video/914/mongodb-and-python</link><description>&lt;p&gt;Abstract&lt;/p&gt;
This intermediate-level class will teach you techniques using the popular
NoSQL database MongoDB, its driver PyMongo, and the object-document mapper
Ming to write maintainable, high-performance, and scalable applications. We
will cover everything you need to become an effective Ming/MongoDB developer
from basic PyMongo queries to high-level object-document mapping setups in
Ming.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bernie Hackett,Rick Copeland</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/914/mongodb-and-python</guid><enclosure url="https://www.youtube.com/watch?v=SULKL7TMRsU" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/SULKL7TMRsU/hqdefault.jpg"></media:thumbnail></item><item><title>SQL for Python Developers</title><link>http://www.pyvideo.org/video/875/sql-for-python-developers</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Relational databases are often the bread-and-butter of large-scale data
storage, yet they are often poorly understood by Python programmers.
Organizations even split programmers into SQL and front-end teams, each of
which jealously guards its turf. These tutorials will take what you already
know about Python programming, and advance into a new realm: SQL programming
and database design.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/875/sql-for-python-developers</guid><enclosure url="https://www.youtube.com/watch?v=Thd8yoBou7k" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/Thd8yoBou7k/hqdefault.jpg"></media:thumbnail></item><item><title>Web scraping: Reliably and efficiently pull data from pages that don't expect it</title><link>http://www.pyvideo.org/video/609/web-scraping-reliably-and-efficiently-pull-data</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Exciting information is trapped in web pages and behind HTML forms. In this
tutorial, you'll learn how to parse those pages and when to apply advanced
techniques that make scraping faster and more stable. We'll cover parallel
downloading with Twisted, gevent, and others; analyzing sites behind SSL;
driving JavaScript-y sites with Selenium; and evading common anti-scraping
techniques.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Asheesh Laroia</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/609/web-scraping-reliably-and-efficiently-pull-data</guid><enclosure url="https://www.youtube.com/watch?v=52wxGESwQSA" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/52wxGESwQSA/hqdefault.jpg"></media:thumbnail></item><item><title>Writing a Pyramid application</title><link>http://www.pyvideo.org/video/606/writing-a-pyramid-application</link><description>&lt;p&gt;Abstract&lt;/p&gt;
Pyramid is the web framework at the core of the Pylons Project. It's a "pay
only for what you eat" framework. You can get started easily and learn new
concepts as you go, and only if you need them. It's simple, well tested, well
documented, and fast. This course will present Pyramid and lead you through
the creation of a an application as the concepts from the framework are
introduced.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Carlos de la Guardia</dc:creator><pubDate>Wed, 07 Mar 2012 00:00:00 -0600</pubDate><guid>http://www.pyvideo.org/video/606/writing-a-pyramid-application</guid><enclosure url="https://www.youtube.com/watch?v=NBSosX8xiRk" length="None" type="video/flv"></enclosure><media:thumbnail url="http://img.youtube.com/vi/NBSosX8xiRk/hqdefault.jpg"></media:thumbnail></item></channel></rss>