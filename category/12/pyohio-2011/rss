<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>pyvideo.org: Videos of PyOhio 2011</title><link>http://www.pyvideo.org/category/12/pyohio-2011/rss</link><description></description><atom:link href="http://www.pyvideo.org/category/12/pyohio-2011/rss" rel="self"></atom:link><language>en-us</language><lastBuildDate>Fri, 11 Mar 2016 12:10:17 -0000</lastBuildDate><ttl>500</ttl><item><title>PyOhio 2011: Aspen: A Next-generation Web Framework</title><link>http://www.pyvideo.org/video/548/pyohio-2011--aspen--a-next-generation-web-framewo</link><description>&lt;p&gt;Description&lt;/p&gt;
Aspen: A Next-generation Web Framework

Presented by Chad Whitacre

Aspen is a Python web framework for both realtime and traditional web apps. It
makes the most of the filesystem to reduce boilerplate and configuration to
near zero. Simplates are the main attraction, a unique approach that brings
logic and presentation as close together as possible--without mixing them.

[http://aspen.io/](http://aspen.io/)

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chad Whitacre</dc:creator><guid>http://www.pyvideo.org/video/548/pyohio-2011--aspen--a-next-generation-web-framewo</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/548_pyohio-2011-aspen-a-next-generation-web-framework.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-AspenANextgenerationWebFramework733.png"></media:thumbnail></item><item><title>PyOhio 2011: Bringing Modern Python to the Atari</title><link>http://www.pyvideo.org/video/540/pyohio-2011--bringing-modern-python-to-the-atari</link><description>&lt;p&gt;Description&lt;/p&gt;
Bringing Modern Python to the Atari

Presented by Jeffrey Armstrong

The Atari ST continues to fulfill a niche in the computing world amongst
hobbyists. Later Atari computers, such as the TT030 and Falcon030, and the
numerous clones are relatively competent 32-bit machines. To this day, the
open source FreeMiNT operating system continues to be developed, bringing a
UNIX-like environment to these computers.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Armstrong</dc:creator><guid>http://www.pyvideo.org/video/540/pyohio-2011--bringing-modern-python-to-the-atari</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/540_pyohio-2011-bringing-modern-python-to-the-atari.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-BringingModernPythonToTheAtari253.png"></media:thumbnail></item><item><title>PyOhio 2011: Commercial GUI Development with Python &amp;amp; PySide</title><link>http://www.pyvideo.org/video/536/pyohio-2011--commercial-gui-development-with-pyth</link><description>&lt;p&gt;Description&lt;/p&gt;
Commercial GUI Development with Python and PySide

Presented by James Bonanno

Commercial Desktop GUIs need to be secure, flexible, reliable, and easy to
maintain. A rapid application development framework, called PyRad, is
introduced, that uses PySide and Cython. Together with Python, this
development framework has allowed the authors to create numerous GUIs in a
short time period, with a consistent look and feel.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bonanno</dc:creator><guid>http://www.pyvideo.org/video/536/pyohio-2011--commercial-gui-development-with-pyth</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/536_pyohio-2011-commercial-gui-development-with-python-amp-pyside.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-CommercialGUIDevelopmentWithPythonPySide484.png"></media:thumbnail></item><item><title>PyOhio 2011: Consuming Web APIs with Python</title><link>http://www.pyvideo.org/video/531/pyohio-2011--consuming-web-apis-with-python</link><description>&lt;p&gt;Description&lt;/p&gt;
Consuming Web APIs with Python

Presented by Issac Kelly

Issac will go over the basics of HTTP apis, what to look for, basic
authorization methods, and how to interface with them in your python scripts.
There will not be cake.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Issac Kelly</dc:creator><guid>http://www.pyvideo.org/video/531/pyohio-2011--consuming-web-apis-with-python</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/531_pyohio-2011-consuming-web-apis-with-python.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-ConsumingWebAPIsWithPython247.png"></media:thumbnail></item><item><title>PyOhio 2011: Creating Web APIs that are a joy to use</title><link>http://www.pyvideo.org/video/529/pyohio-2011--creating-web-apis-that-are-a-joy-to-</link><description>&lt;p&gt;Description&lt;/p&gt;
Creating Web APIs that are a joy to use

Presented by Issac Kelly

Issac is an avid API consumer. He&amp;aposll cover how to make an API that is not
terrible. This is apparently very difficult to do, and many anti-patterns will
be shown. No care will be taken to protect the guilty. This talk is not as
focused on Python, as it is on creating Web APIs, and an understanding of HTTP
is assumed.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Issac Kelly</dc:creator><guid>http://www.pyvideo.org/video/529/pyohio-2011--creating-web-apis-that-are-a-joy-to-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/529_pyohio-2011-creating-web-apis-that-are-a-joy-to-use.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-CreatingWebAPIsThatAreAJoyToUse449.png"></media:thumbnail></item><item><title>PyOhio 2011: Data-Transfer Objects Are a Disease. Meet the Cure.</title><link>http://www.pyvideo.org/video/546/pyohio-2011--data-transfer-objects-are-a-disease-</link><description>&lt;p&gt;Description&lt;/p&gt;
Data-Transfer Objects are a Disease. Meet the Cure.

Presented by Aaron Oliver

Data Transfer Objects (DTOs) are commonplace. Every time you want to shuffle
data and be object-oriented about it, you crank out a new class. But then
someone extends it for their purposes. Badly. Then someone ELSE extends it
AGAIN and makes thing worse. Learn what makes our brains want to create DTOs,
how they've been (ab)used in the past, and how Python's namedtuple makes it
all better.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Aaron Oliver</dc:creator><guid>http://www.pyvideo.org/video/546/pyohio-2011--data-transfer-objects-are-a-disease-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/546_pyohio-2011-data-transfer-objects-are-a-disease-meet-the-cure.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-DataTransferObjectsAreADiseaseMeetTheCure992.png"></media:thumbnail></item><item><title>PyOhio 2011: Django and Google App Engine: Why I'm using Flask and Amazon EC2</title><link>http://www.pyvideo.org/video/543/pyohio-2011--django-and-google-app-engine--why-i-</link><description>&lt;p&gt;Description&lt;/p&gt;
Django and Google App Engine: Why I'm Using Flask and Amazon EC2

Presented by Ben Rousch

I'm a lazy coder, but not the good kind of lazy. I dove into Django so I could
have one web framework that would work on many kind of hosting setups and for
any kind of web project. With some modifications, I could even use the laziest
application host, Google App Engine. Some of these decisions didn't work out,
so I'll share some of the lessons I've learned the past year or so.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Rousch</dc:creator><guid>http://www.pyvideo.org/video/543/pyohio-2011--django-and-google-app-engine--why-i-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/543_pyohio-2011-django-and-google-app-engine-why-i-m-using-flask-and-amazon-ec2.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-DjangoAndGoogleAppEngineWhyImUsingFlaskAndAmazonEC2522.png"></media:thumbnail></item><item><title>PyOhio 2011: Evolving an internal web service</title><link>http://www.pyvideo.org/video/537/pyohio-2011--evolving-an-internal-web-service</link><description>&lt;p&gt;Description&lt;/p&gt;
Evolving an internal web service

Presented by Taavi Burns

Over the past few years, FreshBooks' core business logic has been moving into
a Python web-service backend using Pylons and SQLAlchemy. Come hear why we did
it, and stories of its architecture, testing methods, deployment, and
monitoring.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Taavi Burns</dc:creator><guid>http://www.pyvideo.org/video/537/pyohio-2011--evolving-an-internal-web-service</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/537_pyohio-2011-evolving-an-internal-web-service.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-EvolvingAnInternalWebService941.png"></media:thumbnail></item><item><title>PyOhio 2011: Exchange Digital Money using Bitcoin</title><link>http://www.pyvideo.org/video/533/pyohio-2011--exchange-digital-money-using-bitcoin</link><description>&lt;p&gt;Description&lt;/p&gt;
Exchange Digital Money Using Bitcoin

Presented by David Steele

Bitcoin is described as the first decentralized digital currency. This talk
describes how Bitcoin uses public key encryption, proof-of-work based logging,
and peer-to-peer technology to create a type of money which can be transferred
over the Internet. We'll cover how to use Python to manage your digital wallet
and participate in this new P2P economy.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">David Steele</dc:creator><guid>http://www.pyvideo.org/video/533/pyohio-2011--exchange-digital-money-using-bitcoin</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/533_pyohio-2011-exchange-digital-money-using-bitcoin.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/notfound-episode.png"></media:thumbnail></item><item><title>PyOhio 2011: HTSQL is a WSGI reporting toolkit for Relational Databases</title><link>http://www.pyvideo.org/video/534/pyohio-2011--htsql-is-a-wsgi-reporting-toolkit-fo</link><description>&lt;p&gt;Description&lt;/p&gt;
HTSQL is a WSGI reporting toolkit for Relational Databases

Presented by Clark C. Evans

HTSQL is a URI-based high-level query language for relational databases; it is
written in the Python language. HTSQL is a wonderful complement existing WSGI-
based applications, making it trivial to create interactive dashboards,
complex reports. We use HTSQL as a REST query interface for data integration
and ad-hoc reporting by technical users or ``accidental programmers``.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Clark C. Evans</dc:creator><guid>http://www.pyvideo.org/video/534/pyohio-2011--htsql-is-a-wsgi-reporting-toolkit-fo</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/534_pyohio-2011-htsql-is-a-wsgi-reporting-toolkit-for-relational-databases.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-HTSQLIsAWSGIReportingToolkitForRelationalDatabases585.png"></media:thumbnail></item><item><title>PyOhio 2011: Interactive command-line interpreters with cmd and cmd2</title><link>http://www.pyvideo.org/video/541/pyohio-2011--interactive-command-line-interpreter</link><description>&lt;p&gt;Description&lt;/p&gt;
Interactive command-line interpreters with cmd and cmd2

Presented by Catherine Devlin

How should your Python program receive commands and deliver results? If an
interactive command-line interpreter is right for you, you're in luck -
Python's got some great batteries included for you.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Catherine Devlin</dc:creator><guid>http://www.pyvideo.org/video/541/pyohio-2011--interactive-command-line-interpreter</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/541_pyohio-2011-interactive-command-line-interpreters-with-cmd-and-cmd2.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-InteractiveCommandlineInterpretersWithCmdAndCmd2782.png"></media:thumbnail></item><item><title>PyOhio 2011: Multi-player Games using Panda3D and Python</title><link>http://www.pyvideo.org/video/526/pyohio-2011--multi-player-games-using-panda3d-and</link><description>&lt;p&gt;Description&lt;/p&gt;
Multi-player Games using Panda3D and Python

Presented by Peter Carswell

This two-hour tutorial is designed to investigate the implementation of a
multi-player game using the game engine Panda3D. Panda3D's intended game-
development language is Python. The concepts involve Object Oriented
Programming structures, modeling and texture mapping, key-binding motion,
collisions and, finally, networking techniques.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Carswell</dc:creator><guid>http://www.pyvideo.org/video/526/pyohio-2011--multi-player-games-using-panda3d-and</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/526_pyohio-2011-multi-player-games-using-panda3d-and-python.ogv" length="512957562" type="video/ogg"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-MultiplayerGamesUsingPanda3DAndPython491.png"></media:thumbnail></item><item><title>PyOhio 2011: Names, Objects, and Plummeting From The Cliff</title><link>http://www.pyvideo.org/video/542/pyohio-2011-names-objects-and-plummeting-from</link><description>&lt;p&gt;Description&lt;/p&gt;
Names, Objects, and Plummeting From The Cliff

Presented by Brandon Craig Rhodes

The assignment statement is often the second thing a new Python programmer
learns, right after the "print" statement - but the beginner can get seriously
bogged down in all of the concepts that assignment involves! Using a simple
analogy, this talk will tackle those issues head-on.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><guid>http://www.pyvideo.org/video/542/pyohio-2011-names-objects-and-plummeting-from</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/542_pyohio-2011-names-objects-and-plummeting-from-the-cliff.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-NamesObjectsAndPlummetingFromTheCliff414.png"></media:thumbnail></item><item><title>PyOhio 2011: PHP to Python with No Regrets</title><link>http://www.pyvideo.org/video/544/pyohio-2011--php-to-python-with-no-regrets</link><description>&lt;p&gt;Description&lt;/p&gt;
PHP to Python with No Regrets

Presented by Alex Ezell

At Emma, we are transforming an eight year old PHP codebase into an API-driven
service written in Python. Facing down the triple threat of bad data, encoding
issues, and a generation of code cruft, we've begun to see the light of day.
Come hear how we did it, where we fell down and where we're succeeding.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Ezell</dc:creator><guid>http://www.pyvideo.org/video/544/pyohio-2011--php-to-python-with-no-regrets</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/544_pyohio-2011-php-to-python-with-no-regrets.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-PHPToPythonWithNoRegrets504.png"></media:thumbnail></item><item><title>PyOhio 2011: Procedures, Objects, Reusability: &amp;quot;httplib&amp;quot;, &amp;quot;urllib2&amp;quot;, and Their Discontents</title><link>http://www.pyvideo.org/video/521/pyohio-2011-procedures-objects-reusability-q</link><description>&lt;p&gt;Description&lt;/p&gt;
Procedures, Objects, Reusability: httplib, urllib2 and their discontents

Presented by Brandon Craig Rhodes

Python supports two major programming paradigms: procedures, and object
orientation. This talk will claim that, when it comes to code re-use, these
two paradigms are NOT created equal: because object-oriented programming
encourages the programmer to write methods that consider everything else
inside of "self" to be fair game, it encourages highly coupled code that
proves brittle when extended.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><guid>http://www.pyvideo.org/video/521/pyohio-2011-procedures-objects-reusability-q</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/521_pyohio-2011-procedures-objects-reusability-quot-httplib-quot-quot-urllib2-quot-and-their-discontents.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-ProceduresObjectsReusabilityHttplibUrllib2AndTheirDiscont815.png"></media:thumbnail></item><item><title>PyOhio 2011: Python 101</title><link>http://www.pyvideo.org/video/527/pyohio-2011--python-101</link><description>&lt;p&gt;Description&lt;/p&gt;
Python 101

Presented by Michael Yanovich

Are you completely new to Python? Have you been wanting to learn Python but
haven't had the time? Well give you a crash course on the basics of Python.
We'll start off with why Python is unique compared to other languages and then
quickly start into basic syntax, data types, and the Python philosophy for
coding.

[VIDEO HAS ISSUES: The presenter dropped the mic on the ground and there it
lay. So the sound kind of sucks.]

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Yanovich</dc:creator><guid>http://www.pyvideo.org/video/527/pyohio-2011--python-101</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/527_pyohio-2011-python-101.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-Python101773.png"></media:thumbnail></item><item><title>PyOhio 2011: Python 102</title><link>http://www.pyvideo.org/video/528/pyohio-2011--python-102</link><description>&lt;p&gt;Description&lt;/p&gt;
Python 102

Presented by Michael Yanovich

Now you know the basics of Python. What can you do with Python? Well the
better question should be "What can't you do with Python?" In this
tutorial/talk we'll cover more advance topics that include how to use the
Python Standard Library, advance data type manipulation, and basic network
programming. This class will be more like a talk depending on the
comfortability of everyone in the class.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Yanovich</dc:creator><guid>http://www.pyvideo.org/video/528/pyohio-2011--python-102</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/528_pyohio-2011-python-102.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-Python102344-834.jpg"></media:thumbnail></item><item><title>PyOhio 2011: Python 102</title><link>http://www.pyvideo.org/video/538/pyohio-2011--python-100</link><description>&lt;p&gt;Description&lt;/p&gt;
Python 102

Presented by Michael Yanovich

Now you know the basics of Python. What can you do with Python? Well the
better question should be "What can't you do with Python?" In this
tutorial/talk we'll cover more advance topics that include how to use the
Python Standard Library, advance data type manipulation, and basic network
programming. This class will be more like a talk depending on the
comfortability of everyone in the class.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Yanovich</dc:creator><guid>http://www.pyvideo.org/video/538/pyohio-2011--python-100</guid><enclosure url="http://blip.tv/file/get/Pyohio-Python102691.ogv" length="538801907" type="video/ogg"></enclosure><media:thumbnail url="http://a.images.blip.tv/notfound-episode.png"></media:thumbnail></item><item><title>PyOhio 2011: Python and Entrepreneurship</title><link>http://www.pyvideo.org/video/535/pyohio-2011--python-and-entrepreneurship</link><description>&lt;p&gt;Description&lt;/p&gt;
Python and Entrepeneurship

Panel: Eric Floehr, Matt Wilson, Isaac, Kelly, Carl Karsten

This will be an audience-led discussion with a number of Midwest entrepreneurs
who do Python consulting, sell products built on Python, or who use Python as
an integral part of their business operations.

</description><guid>http://www.pyvideo.org/video/535/pyohio-2011--python-and-entrepreneurship</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/535_pyohio-2011-python-and-entrepreneurship.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-PythonAndEntrepreneurship632.png"></media:thumbnail></item><item><title>PyOhio 2011: Python, Parsing and You</title><link>http://www.pyvideo.org/video/530/pyohio-2011--python--parsing-and-you</link><description>&lt;p&gt;Description&lt;/p&gt;
Python, Parsing, and You

Presented by Tim Henderson

Tim Henderson Python is a fantastic language to write text processing tools
in, including full fledged parsers. In this tutorial I will briefly cover
Recursive Descent, Top Down Predictive and LALR Parsing. The tools used will
include PLY and a Top Down Predictive Parsing framework of my own
construction. I will expect the audience to be familiar with the following
concepts: Context Free Grammars, Regular Expressions, ...

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Henderson</dc:creator><guid>http://www.pyvideo.org/video/530/pyohio-2011--python--parsing-and-you</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/530_pyohio-2011-python-parsing-and-you.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/notfound-episode.png"></media:thumbnail></item><item><title>PyOhio 2011: Saturday Lightning Talks</title><link>http://www.pyvideo.org/video/523/pyohio-2011--saturday-lightning-talks</link><description>&lt;p&gt;Description&lt;/p&gt;
Saturday Lightning Talks

  * 00:00 Dave something - SourceForge doing cool stuff with Python [sourceforge.net](http://sourceforge.net/)
  * 05:00 Rick Harding - Bookie [github.com/mitechie/Bookie](http://github.com/mitechie/Bookie)
  * 09:55 Tim Henderson - Slang [github.com/timtadh/slang](http://github.com/timtadh/slang)
  * 12:30 Raymond Chandler III - Sun Tsu and Python -- adopting Python in the work place 
  * 17:39 Michael Yanovich - Pelican [github.com/ametaireau/pelican](http://github.com/ametaireau/pelican)
  * 21:50 Matt Wilson - Rattlesnake [github.com/mw44118/rattlesnake](http://github.com/mw44118/rattlesnake)
  * 27:55 Kris Hardy - repoze.who.plugins 
  * 33:20 Dave M - What laptop did you bring to PyOhio? 

</description><guid>http://www.pyvideo.org/video/523/pyohio-2011--saturday-lightning-talks</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/523_pyohio-2011-saturday-lightning-talks.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-SaturdayLightningTalks453.png"></media:thumbnail></item><item><title>PyOhio 2011: Soft Skillz: They aren't just for humans anymore</title><link>http://www.pyvideo.org/video/532/pyohio-2011--soft-skillz--they-aren--39-t-just-fo</link><description>&lt;p&gt;Description&lt;/p&gt;
Soft Skillz: They aren't just for humans anymore

Presented by Brian H. Prince

Brian looks back at 15 years of being a developer, consultant, and business
leader. He will talk about the skills and wisdom that you need to be happy and
successful in your career.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian H. Prince</dc:creator><guid>http://www.pyvideo.org/video/532/pyohio-2011--soft-skillz--they-aren--39-t-just-fo</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/532_pyohio-2011-soft-skillz-they-aren-t-just-for-humans-anymore.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-SoftSkillzTheyArentJustForHumansAnymore503.png"></media:thumbnail></item><item><title>PyOhio 2011: SqlAlchemy tutorial</title><link>http://www.pyvideo.org/video/525/pyohio-2011--sqlalchemy-tutorial</link><description>&lt;p&gt;Description&lt;/p&gt;
SqlAlchemy tutorial

Presented by Rick Harding

SqlAlchemy is one of the top 5 "must have" modules for Python. We'll go
through why you might want to use an ORM, situations to use the different
layers of SqlAlchemy, and some tips and tricks on a real sample application.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Harding</dc:creator><guid>http://www.pyvideo.org/video/525/pyohio-2011--sqlalchemy-tutorial</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/525_pyohio-2011-sqlalchemy-tutorial.ogv" length="564479437" type="video/ogg"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-SqlAlchemyTutorial951.png"></media:thumbnail></item><item><title>PyOhio 2011: Squinting at Python Objects</title><link>http://www.pyvideo.org/video/524/pyohio-2011-squinting-at-python-objects</link><description>&lt;p&gt;Description&lt;/p&gt;
Squinting at Python Objects

Presented by Brandon Craig Rhodes

Python classes can gain attributes as if by magic. Thanks to properties,
descriptors, and (if all else fails) __getattr__() and __getattribute__(), the
attempt to access obj.something can result in arbitrary code execution. If you
are wondering how your Python program is using memory, this can result in a
problem: each time you look to see if something is there, it **is**, because
it is pulled in dynamically the moment you look for it. In this talk, you will
learn how to prod Python objects gently, and hopefully learn their secrets -
and their memory usage - without actually invoking code.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><guid>http://www.pyvideo.org/video/524/pyohio-2011-squinting-at-python-objects</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/524_pyohio-2011-squinting-at-python-objects.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-SquintingAtPythonObjects698.png"></media:thumbnail></item><item><title>PyOhio 2011: Sunday Lightning Talks</title><link>http://www.pyvideo.org/video/522/pyohio-2011--sunday-lightning-talks</link><description>&lt;p&gt;Description&lt;/p&gt;
Sunday Lightning Talks

  * 00:00 Brandon Craig Rhodes - Adventure [https://bitbucket.org/brandon/adventure/overview](https://bitbucket.org/brandon/adventure/overview)
  * 05:15 Dave M - Followup on the laptop survey 
  * 08:10 Clayton Parker - Vim and ctags 
  * 13:10 Rich Harkins - Bullwinkle - Python tools inspired by Perl::Moose [http://code.google.com/bullwinkle](http://code.google.com/bullwinkle)

</description><guid>http://www.pyvideo.org/video/522/pyohio-2011--sunday-lightning-talks</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/522_pyohio-2011-sunday-lightning-talks.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-SundayLightningTalks889.png"></media:thumbnail></item><item><title>PyOhio 2011: Toilets and Teleports - A study in Model-View-Control (MVC)</title><link>http://www.pyvideo.org/video/545/pyohio-2011--toilets-and-teleports---a-study-in-m</link><description>&lt;p&gt;Description&lt;/p&gt;
Toilets and Teleports - A study in Model-View-Control (MVC)

Presented by Howard Mooneyham

Have you ever wondered how to create a Model View Control program? Come to my
talk and we will go through building a simple MVC program, Toilets and
Teleports. We will then use one of the benefits of MVC to replace the View
with a production quality version with GUI no other changes. I will pass out
flow charts and documents showing how the program was created.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Howard Mooneyham</dc:creator><guid>http://www.pyvideo.org/video/545/pyohio-2011--toilets-and-teleports---a-study-in-m</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/545_pyohio-2011-toilets-and-teleports-a-study-in-model-view-control-mvc.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-ToiletsAndTeleportsAStudyInModelViewControlMVC138.png"></media:thumbnail></item><item><title>PyOhio 2011: Using Fabric - from a sysadmin's perspective</title><link>http://www.pyvideo.org/video/547/pyohio-2011--using-fabric---from-a-sysadmin--39-s</link><description>&lt;p&gt;Description&lt;/p&gt;
Using Fabric -- from a sysadmin's perspective

Presented by Morgan Goose

Fabric is a great tool written in python for python devs. It allows you to
script remote interactions on a remote server and only requires ssh and a
shell on the remote host. It's commonly pigeonholed into a deployment tool,
but it can but used for more than just websites.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Morgan Goose</dc:creator><guid>http://www.pyvideo.org/video/547/pyohio-2011--using-fabric---from-a-sysadmin--39-s</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/547_pyohio-2011-using-fabric-from-a-sysadmin-s-perspective.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-UsingFabricFromASysadminsPerspective251.png"></media:thumbnail></item><item><title>PyOhio 2011: Using pymc to cluster twitter users -- a noob's perspective</title><link>http://www.pyvideo.org/video/539/pyohio-2011--using-pymc-to-cluster-twitter-users-</link><description>&lt;p&gt;Description&lt;/p&gt;
Using pymc to cluster twitter users -- a noob's perspective

Presented by Timmy Wilson

Journey through the thoughts, hopes, and sad frustrations of an average python
developer trying to understand MCMC matrix factorization. I'll work through a
Python implementation of the paper "Bayesian Probabilistic Matrix
Factorization using Markov Chain Monte Carlo" and talk about how it applies to
clustering a Twitter adjacency matrix.

</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Timmy Wilson</dc:creator><guid>http://www.pyvideo.org/video/539/pyohio-2011--using-pymc-to-cluster-twitter-users-</guid><enclosure url="http://05d2db1380b6504cc981-8cbed8cf7e3a131cd8f1c3e383d10041.r93.cf2.rackcdn.com/pyohio-2011/539_pyohio-2011-using-pymc-to-cluster-twitter-users-a-noob-s-perspective.m4v" length="None" type="video/mp4"></enclosure><media:thumbnail url="http://a.images.blip.tv/Pyohio-UsingPymcToClusterTwitterUsersANoobsPerspective618.png"></media:thumbnail></item></channel></rss>